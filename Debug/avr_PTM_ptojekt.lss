
avr_PTM_ptojekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002722  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001a6  00800060  00002722  000027b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800206  00800206  0000295c  2**0
                  ALLOC
  3 .stab         00001a58  00000000  00000000  0000295c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000de1  00000000  00000000  000043b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00005195  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f0  00000000  00000000  00005335  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240c  00000000  00000000  00005525  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001377  00000000  00000000  00007931  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d8  00000000  00000000  00008ca8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00009e80  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f3  00000000  00000000  0000a040  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000009ce  00000000  00000000  0000a333  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000ad01  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
       2:	00 00       	nop
       4:	44 c0       	rjmp	.+136    	; 0x8e <__bad_interrupt>
       6:	00 00       	nop
       8:	42 c0       	rjmp	.+132    	; 0x8e <__bad_interrupt>
       a:	00 00       	nop
       c:	40 c0       	rjmp	.+128    	; 0x8e <__bad_interrupt>
       e:	00 00       	nop
      10:	3e c0       	rjmp	.+124    	; 0x8e <__bad_interrupt>
      12:	00 00       	nop
      14:	3c c0       	rjmp	.+120    	; 0x8e <__bad_interrupt>
      16:	00 00       	nop
      18:	3a c0       	rjmp	.+116    	; 0x8e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	38 c0       	rjmp	.+112    	; 0x8e <__bad_interrupt>
      1e:	00 00       	nop
      20:	36 c0       	rjmp	.+108    	; 0x8e <__bad_interrupt>
      22:	00 00       	nop
      24:	34 c0       	rjmp	.+104    	; 0x8e <__bad_interrupt>
      26:	00 00       	nop
      28:	32 c0       	rjmp	.+100    	; 0x8e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	30 c0       	rjmp	.+96     	; 0x8e <__bad_interrupt>
      2e:	00 00       	nop
      30:	2e c0       	rjmp	.+92     	; 0x8e <__bad_interrupt>
      32:	00 00       	nop
      34:	2c c0       	rjmp	.+88     	; 0x8e <__bad_interrupt>
      36:	00 00       	nop
      38:	2a c0       	rjmp	.+84     	; 0x8e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	28 c0       	rjmp	.+80     	; 0x8e <__bad_interrupt>
      3e:	00 00       	nop
      40:	26 c0       	rjmp	.+76     	; 0x8e <__bad_interrupt>
      42:	00 00       	nop
      44:	24 c0       	rjmp	.+72     	; 0x8e <__bad_interrupt>
      46:	00 00       	nop
      48:	22 c0       	rjmp	.+68     	; 0x8e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	20 c0       	rjmp	.+64     	; 0x8e <__bad_interrupt>
      4e:	00 00       	nop
      50:	1e c0       	rjmp	.+60     	; 0x8e <__bad_interrupt>
	...

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e2       	ldi	r30, 0x22	; 34
      68:	f7 e2       	ldi	r31, 0x27	; 39
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 30       	cpi	r26, 0x06	; 6
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a6 e0       	ldi	r26, 0x06	; 6
      7a:	b2 e0       	ldi	r27, 0x02	; 2
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a7 30       	cpi	r26, 0x07	; 7
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <main>
      8a:	0c 94 8f 13 	jmp	0x271e	; 0x271e <_exit>

0000008e <__bad_interrupt>:
      8e:	b8 cf       	rjmp	.-144    	; 0x0 <__vectors>

00000090 <__fixunssfsi>:
      90:	ef 92       	push	r14
      92:	ff 92       	push	r15
      94:	0f 93       	push	r16
      96:	1f 93       	push	r17
      98:	7b 01       	movw	r14, r22
      9a:	8c 01       	movw	r16, r24
      9c:	20 e0       	ldi	r18, 0x00	; 0
      9e:	30 e0       	ldi	r19, 0x00	; 0
      a0:	40 e0       	ldi	r20, 0x00	; 0
      a2:	5f e4       	ldi	r21, 0x4F	; 79
      a4:	8c d3       	rcall	.+1816   	; 0x7be <__gesf2>
      a6:	88 23       	and	r24, r24
      a8:	7c f0       	brlt	.+30     	; 0xc8 <__fixunssfsi+0x38>
      aa:	c8 01       	movw	r24, r16
      ac:	b7 01       	movw	r22, r14
      ae:	20 e0       	ldi	r18, 0x00	; 0
      b0:	30 e0       	ldi	r19, 0x00	; 0
      b2:	40 e0       	ldi	r20, 0x00	; 0
      b4:	5f e4       	ldi	r21, 0x4F	; 79
      b6:	60 d1       	rcall	.+704    	; 0x378 <__subsf3>
      b8:	38 d4       	rcall	.+2160   	; 0x92a <__fixsfsi>
      ba:	9b 01       	movw	r18, r22
      bc:	ac 01       	movw	r20, r24
      be:	20 50       	subi	r18, 0x00	; 0
      c0:	30 40       	sbci	r19, 0x00	; 0
      c2:	40 40       	sbci	r20, 0x00	; 0
      c4:	50 48       	sbci	r21, 0x80	; 128
      c6:	05 c0       	rjmp	.+10     	; 0xd2 <__fixunssfsi+0x42>
      c8:	c8 01       	movw	r24, r16
      ca:	b7 01       	movw	r22, r14
      cc:	2e d4       	rcall	.+2140   	; 0x92a <__fixsfsi>
      ce:	9b 01       	movw	r18, r22
      d0:	ac 01       	movw	r20, r24
      d2:	b9 01       	movw	r22, r18
      d4:	ca 01       	movw	r24, r20
      d6:	1f 91       	pop	r17
      d8:	0f 91       	pop	r16
      da:	ff 90       	pop	r15
      dc:	ef 90       	pop	r14
      de:	08 95       	ret

000000e0 <_fpadd_parts>:
      e0:	a0 e0       	ldi	r26, 0x00	; 0
      e2:	b0 e0       	ldi	r27, 0x00	; 0
      e4:	e6 e7       	ldi	r30, 0x76	; 118
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	0c 94 8d 10 	jmp	0x211a	; 0x211a <__prologue_saves__>
      ec:	dc 01       	movw	r26, r24
      ee:	2b 01       	movw	r4, r22
      f0:	fa 01       	movw	r30, r20
      f2:	9c 91       	ld	r25, X
      f4:	92 30       	cpi	r25, 0x02	; 2
      f6:	08 f4       	brcc	.+2      	; 0xfa <_fpadd_parts+0x1a>
      f8:	39 c1       	rjmp	.+626    	; 0x36c <_fpadd_parts+0x28c>
      fa:	eb 01       	movw	r28, r22
      fc:	88 81       	ld	r24, Y
      fe:	82 30       	cpi	r24, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x24>
     102:	33 c1       	rjmp	.+614    	; 0x36a <_fpadd_parts+0x28a>
     104:	94 30       	cpi	r25, 0x04	; 4
     106:	69 f4       	brne	.+26     	; 0x122 <_fpadd_parts+0x42>
     108:	84 30       	cpi	r24, 0x04	; 4
     10a:	09 f0       	breq	.+2      	; 0x10e <_fpadd_parts+0x2e>
     10c:	2f c1       	rjmp	.+606    	; 0x36c <_fpadd_parts+0x28c>
     10e:	11 96       	adiw	r26, 0x01	; 1
     110:	9c 91       	ld	r25, X
     112:	11 97       	sbiw	r26, 0x01	; 1
     114:	89 81       	ldd	r24, Y+1	; 0x01
     116:	98 17       	cp	r25, r24
     118:	09 f4       	brne	.+2      	; 0x11c <_fpadd_parts+0x3c>
     11a:	28 c1       	rjmp	.+592    	; 0x36c <_fpadd_parts+0x28c>
     11c:	a5 ef       	ldi	r26, 0xF5	; 245
     11e:	b0 e0       	ldi	r27, 0x00	; 0
     120:	25 c1       	rjmp	.+586    	; 0x36c <_fpadd_parts+0x28c>
     122:	84 30       	cpi	r24, 0x04	; 4
     124:	09 f4       	brne	.+2      	; 0x128 <_fpadd_parts+0x48>
     126:	21 c1       	rjmp	.+578    	; 0x36a <_fpadd_parts+0x28a>
     128:	82 30       	cpi	r24, 0x02	; 2
     12a:	a9 f4       	brne	.+42     	; 0x156 <_fpadd_parts+0x76>
     12c:	92 30       	cpi	r25, 0x02	; 2
     12e:	09 f0       	breq	.+2      	; 0x132 <_fpadd_parts+0x52>
     130:	1d c1       	rjmp	.+570    	; 0x36c <_fpadd_parts+0x28c>
     132:	9a 01       	movw	r18, r20
     134:	ad 01       	movw	r20, r26
     136:	88 e0       	ldi	r24, 0x08	; 8
     138:	ea 01       	movw	r28, r20
     13a:	09 90       	ld	r0, Y+
     13c:	ae 01       	movw	r20, r28
     13e:	e9 01       	movw	r28, r18
     140:	09 92       	st	Y+, r0
     142:	9e 01       	movw	r18, r28
     144:	81 50       	subi	r24, 0x01	; 1
     146:	c1 f7       	brne	.-16     	; 0x138 <_fpadd_parts+0x58>
     148:	e2 01       	movw	r28, r4
     14a:	89 81       	ldd	r24, Y+1	; 0x01
     14c:	11 96       	adiw	r26, 0x01	; 1
     14e:	9c 91       	ld	r25, X
     150:	89 23       	and	r24, r25
     152:	81 83       	std	Z+1, r24	; 0x01
     154:	08 c1       	rjmp	.+528    	; 0x366 <_fpadd_parts+0x286>
     156:	92 30       	cpi	r25, 0x02	; 2
     158:	09 f4       	brne	.+2      	; 0x15c <_fpadd_parts+0x7c>
     15a:	07 c1       	rjmp	.+526    	; 0x36a <_fpadd_parts+0x28a>
     15c:	12 96       	adiw	r26, 0x02	; 2
     15e:	2d 90       	ld	r2, X+
     160:	3c 90       	ld	r3, X
     162:	13 97       	sbiw	r26, 0x03	; 3
     164:	eb 01       	movw	r28, r22
     166:	8a 81       	ldd	r24, Y+2	; 0x02
     168:	9b 81       	ldd	r25, Y+3	; 0x03
     16a:	14 96       	adiw	r26, 0x04	; 4
     16c:	ad 90       	ld	r10, X+
     16e:	bd 90       	ld	r11, X+
     170:	cd 90       	ld	r12, X+
     172:	dc 90       	ld	r13, X
     174:	17 97       	sbiw	r26, 0x07	; 7
     176:	ec 80       	ldd	r14, Y+4	; 0x04
     178:	fd 80       	ldd	r15, Y+5	; 0x05
     17a:	0e 81       	ldd	r16, Y+6	; 0x06
     17c:	1f 81       	ldd	r17, Y+7	; 0x07
     17e:	91 01       	movw	r18, r2
     180:	28 1b       	sub	r18, r24
     182:	39 0b       	sbc	r19, r25
     184:	b9 01       	movw	r22, r18
     186:	37 ff       	sbrs	r19, 7
     188:	04 c0       	rjmp	.+8      	; 0x192 <_fpadd_parts+0xb2>
     18a:	66 27       	eor	r22, r22
     18c:	77 27       	eor	r23, r23
     18e:	62 1b       	sub	r22, r18
     190:	73 0b       	sbc	r23, r19
     192:	60 32       	cpi	r22, 0x20	; 32
     194:	71 05       	cpc	r23, r1
     196:	0c f0       	brlt	.+2      	; 0x19a <_fpadd_parts+0xba>
     198:	61 c0       	rjmp	.+194    	; 0x25c <_fpadd_parts+0x17c>
     19a:	12 16       	cp	r1, r18
     19c:	13 06       	cpc	r1, r19
     19e:	6c f5       	brge	.+90     	; 0x1fa <_fpadd_parts+0x11a>
     1a0:	37 01       	movw	r6, r14
     1a2:	48 01       	movw	r8, r16
     1a4:	06 2e       	mov	r0, r22
     1a6:	04 c0       	rjmp	.+8      	; 0x1b0 <_fpadd_parts+0xd0>
     1a8:	96 94       	lsr	r9
     1aa:	87 94       	ror	r8
     1ac:	77 94       	ror	r7
     1ae:	67 94       	ror	r6
     1b0:	0a 94       	dec	r0
     1b2:	d2 f7       	brpl	.-12     	; 0x1a8 <_fpadd_parts+0xc8>
     1b4:	21 e0       	ldi	r18, 0x01	; 1
     1b6:	30 e0       	ldi	r19, 0x00	; 0
     1b8:	40 e0       	ldi	r20, 0x00	; 0
     1ba:	50 e0       	ldi	r21, 0x00	; 0
     1bc:	04 c0       	rjmp	.+8      	; 0x1c6 <_fpadd_parts+0xe6>
     1be:	22 0f       	add	r18, r18
     1c0:	33 1f       	adc	r19, r19
     1c2:	44 1f       	adc	r20, r20
     1c4:	55 1f       	adc	r21, r21
     1c6:	6a 95       	dec	r22
     1c8:	d2 f7       	brpl	.-12     	; 0x1be <_fpadd_parts+0xde>
     1ca:	21 50       	subi	r18, 0x01	; 1
     1cc:	30 40       	sbci	r19, 0x00	; 0
     1ce:	40 40       	sbci	r20, 0x00	; 0
     1d0:	50 40       	sbci	r21, 0x00	; 0
     1d2:	2e 21       	and	r18, r14
     1d4:	3f 21       	and	r19, r15
     1d6:	40 23       	and	r20, r16
     1d8:	51 23       	and	r21, r17
     1da:	21 15       	cp	r18, r1
     1dc:	31 05       	cpc	r19, r1
     1de:	41 05       	cpc	r20, r1
     1e0:	51 05       	cpc	r21, r1
     1e2:	21 f0       	breq	.+8      	; 0x1ec <_fpadd_parts+0x10c>
     1e4:	21 e0       	ldi	r18, 0x01	; 1
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	40 e0       	ldi	r20, 0x00	; 0
     1ea:	50 e0       	ldi	r21, 0x00	; 0
     1ec:	79 01       	movw	r14, r18
     1ee:	8a 01       	movw	r16, r20
     1f0:	e6 28       	or	r14, r6
     1f2:	f7 28       	or	r15, r7
     1f4:	08 29       	or	r16, r8
     1f6:	19 29       	or	r17, r9
     1f8:	3c c0       	rjmp	.+120    	; 0x272 <_fpadd_parts+0x192>
     1fa:	23 2b       	or	r18, r19
     1fc:	d1 f1       	breq	.+116    	; 0x272 <_fpadd_parts+0x192>
     1fe:	26 0e       	add	r2, r22
     200:	37 1e       	adc	r3, r23
     202:	35 01       	movw	r6, r10
     204:	46 01       	movw	r8, r12
     206:	06 2e       	mov	r0, r22
     208:	04 c0       	rjmp	.+8      	; 0x212 <_fpadd_parts+0x132>
     20a:	96 94       	lsr	r9
     20c:	87 94       	ror	r8
     20e:	77 94       	ror	r7
     210:	67 94       	ror	r6
     212:	0a 94       	dec	r0
     214:	d2 f7       	brpl	.-12     	; 0x20a <_fpadd_parts+0x12a>
     216:	21 e0       	ldi	r18, 0x01	; 1
     218:	30 e0       	ldi	r19, 0x00	; 0
     21a:	40 e0       	ldi	r20, 0x00	; 0
     21c:	50 e0       	ldi	r21, 0x00	; 0
     21e:	04 c0       	rjmp	.+8      	; 0x228 <_fpadd_parts+0x148>
     220:	22 0f       	add	r18, r18
     222:	33 1f       	adc	r19, r19
     224:	44 1f       	adc	r20, r20
     226:	55 1f       	adc	r21, r21
     228:	6a 95       	dec	r22
     22a:	d2 f7       	brpl	.-12     	; 0x220 <_fpadd_parts+0x140>
     22c:	21 50       	subi	r18, 0x01	; 1
     22e:	30 40       	sbci	r19, 0x00	; 0
     230:	40 40       	sbci	r20, 0x00	; 0
     232:	50 40       	sbci	r21, 0x00	; 0
     234:	2a 21       	and	r18, r10
     236:	3b 21       	and	r19, r11
     238:	4c 21       	and	r20, r12
     23a:	5d 21       	and	r21, r13
     23c:	21 15       	cp	r18, r1
     23e:	31 05       	cpc	r19, r1
     240:	41 05       	cpc	r20, r1
     242:	51 05       	cpc	r21, r1
     244:	21 f0       	breq	.+8      	; 0x24e <_fpadd_parts+0x16e>
     246:	21 e0       	ldi	r18, 0x01	; 1
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	40 e0       	ldi	r20, 0x00	; 0
     24c:	50 e0       	ldi	r21, 0x00	; 0
     24e:	59 01       	movw	r10, r18
     250:	6a 01       	movw	r12, r20
     252:	a6 28       	or	r10, r6
     254:	b7 28       	or	r11, r7
     256:	c8 28       	or	r12, r8
     258:	d9 28       	or	r13, r9
     25a:	0b c0       	rjmp	.+22     	; 0x272 <_fpadd_parts+0x192>
     25c:	82 15       	cp	r24, r2
     25e:	93 05       	cpc	r25, r3
     260:	2c f0       	brlt	.+10     	; 0x26c <_fpadd_parts+0x18c>
     262:	1c 01       	movw	r2, r24
     264:	aa 24       	eor	r10, r10
     266:	bb 24       	eor	r11, r11
     268:	65 01       	movw	r12, r10
     26a:	03 c0       	rjmp	.+6      	; 0x272 <_fpadd_parts+0x192>
     26c:	ee 24       	eor	r14, r14
     26e:	ff 24       	eor	r15, r15
     270:	87 01       	movw	r16, r14
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	9c 91       	ld	r25, X
     276:	d2 01       	movw	r26, r4
     278:	11 96       	adiw	r26, 0x01	; 1
     27a:	8c 91       	ld	r24, X
     27c:	98 17       	cp	r25, r24
     27e:	09 f4       	brne	.+2      	; 0x282 <_fpadd_parts+0x1a2>
     280:	45 c0       	rjmp	.+138    	; 0x30c <_fpadd_parts+0x22c>
     282:	99 23       	and	r25, r25
     284:	39 f0       	breq	.+14     	; 0x294 <_fpadd_parts+0x1b4>
     286:	a8 01       	movw	r20, r16
     288:	97 01       	movw	r18, r14
     28a:	2a 19       	sub	r18, r10
     28c:	3b 09       	sbc	r19, r11
     28e:	4c 09       	sbc	r20, r12
     290:	5d 09       	sbc	r21, r13
     292:	06 c0       	rjmp	.+12     	; 0x2a0 <_fpadd_parts+0x1c0>
     294:	a6 01       	movw	r20, r12
     296:	95 01       	movw	r18, r10
     298:	2e 19       	sub	r18, r14
     29a:	3f 09       	sbc	r19, r15
     29c:	40 0b       	sbc	r20, r16
     29e:	51 0b       	sbc	r21, r17
     2a0:	57 fd       	sbrc	r21, 7
     2a2:	08 c0       	rjmp	.+16     	; 0x2b4 <_fpadd_parts+0x1d4>
     2a4:	11 82       	std	Z+1, r1	; 0x01
     2a6:	33 82       	std	Z+3, r3	; 0x03
     2a8:	22 82       	std	Z+2, r2	; 0x02
     2aa:	24 83       	std	Z+4, r18	; 0x04
     2ac:	35 83       	std	Z+5, r19	; 0x05
     2ae:	46 83       	std	Z+6, r20	; 0x06
     2b0:	57 83       	std	Z+7, r21	; 0x07
     2b2:	1d c0       	rjmp	.+58     	; 0x2ee <_fpadd_parts+0x20e>
     2b4:	81 e0       	ldi	r24, 0x01	; 1
     2b6:	81 83       	std	Z+1, r24	; 0x01
     2b8:	33 82       	std	Z+3, r3	; 0x03
     2ba:	22 82       	std	Z+2, r2	; 0x02
     2bc:	88 27       	eor	r24, r24
     2be:	99 27       	eor	r25, r25
     2c0:	dc 01       	movw	r26, r24
     2c2:	82 1b       	sub	r24, r18
     2c4:	93 0b       	sbc	r25, r19
     2c6:	a4 0b       	sbc	r26, r20
     2c8:	b5 0b       	sbc	r27, r21
     2ca:	84 83       	std	Z+4, r24	; 0x04
     2cc:	95 83       	std	Z+5, r25	; 0x05
     2ce:	a6 83       	std	Z+6, r26	; 0x06
     2d0:	b7 83       	std	Z+7, r27	; 0x07
     2d2:	0d c0       	rjmp	.+26     	; 0x2ee <_fpadd_parts+0x20e>
     2d4:	22 0f       	add	r18, r18
     2d6:	33 1f       	adc	r19, r19
     2d8:	44 1f       	adc	r20, r20
     2da:	55 1f       	adc	r21, r21
     2dc:	24 83       	std	Z+4, r18	; 0x04
     2de:	35 83       	std	Z+5, r19	; 0x05
     2e0:	46 83       	std	Z+6, r20	; 0x06
     2e2:	57 83       	std	Z+7, r21	; 0x07
     2e4:	82 81       	ldd	r24, Z+2	; 0x02
     2e6:	93 81       	ldd	r25, Z+3	; 0x03
     2e8:	01 97       	sbiw	r24, 0x01	; 1
     2ea:	93 83       	std	Z+3, r25	; 0x03
     2ec:	82 83       	std	Z+2, r24	; 0x02
     2ee:	24 81       	ldd	r18, Z+4	; 0x04
     2f0:	35 81       	ldd	r19, Z+5	; 0x05
     2f2:	46 81       	ldd	r20, Z+6	; 0x06
     2f4:	57 81       	ldd	r21, Z+7	; 0x07
     2f6:	da 01       	movw	r26, r20
     2f8:	c9 01       	movw	r24, r18
     2fa:	01 97       	sbiw	r24, 0x01	; 1
     2fc:	a1 09       	sbc	r26, r1
     2fe:	b1 09       	sbc	r27, r1
     300:	8f 5f       	subi	r24, 0xFF	; 255
     302:	9f 4f       	sbci	r25, 0xFF	; 255
     304:	af 4f       	sbci	r26, 0xFF	; 255
     306:	bf 43       	sbci	r27, 0x3F	; 63
     308:	28 f3       	brcs	.-54     	; 0x2d4 <_fpadd_parts+0x1f4>
     30a:	0b c0       	rjmp	.+22     	; 0x322 <_fpadd_parts+0x242>
     30c:	91 83       	std	Z+1, r25	; 0x01
     30e:	33 82       	std	Z+3, r3	; 0x03
     310:	22 82       	std	Z+2, r2	; 0x02
     312:	ea 0c       	add	r14, r10
     314:	fb 1c       	adc	r15, r11
     316:	0c 1d       	adc	r16, r12
     318:	1d 1d       	adc	r17, r13
     31a:	e4 82       	std	Z+4, r14	; 0x04
     31c:	f5 82       	std	Z+5, r15	; 0x05
     31e:	06 83       	std	Z+6, r16	; 0x06
     320:	17 83       	std	Z+7, r17	; 0x07
     322:	83 e0       	ldi	r24, 0x03	; 3
     324:	80 83       	st	Z, r24
     326:	24 81       	ldd	r18, Z+4	; 0x04
     328:	35 81       	ldd	r19, Z+5	; 0x05
     32a:	46 81       	ldd	r20, Z+6	; 0x06
     32c:	57 81       	ldd	r21, Z+7	; 0x07
     32e:	57 ff       	sbrs	r21, 7
     330:	1a c0       	rjmp	.+52     	; 0x366 <_fpadd_parts+0x286>
     332:	c9 01       	movw	r24, r18
     334:	aa 27       	eor	r26, r26
     336:	97 fd       	sbrc	r25, 7
     338:	a0 95       	com	r26
     33a:	ba 2f       	mov	r27, r26
     33c:	81 70       	andi	r24, 0x01	; 1
     33e:	90 70       	andi	r25, 0x00	; 0
     340:	a0 70       	andi	r26, 0x00	; 0
     342:	b0 70       	andi	r27, 0x00	; 0
     344:	56 95       	lsr	r21
     346:	47 95       	ror	r20
     348:	37 95       	ror	r19
     34a:	27 95       	ror	r18
     34c:	82 2b       	or	r24, r18
     34e:	93 2b       	or	r25, r19
     350:	a4 2b       	or	r26, r20
     352:	b5 2b       	or	r27, r21
     354:	84 83       	std	Z+4, r24	; 0x04
     356:	95 83       	std	Z+5, r25	; 0x05
     358:	a6 83       	std	Z+6, r26	; 0x06
     35a:	b7 83       	std	Z+7, r27	; 0x07
     35c:	82 81       	ldd	r24, Z+2	; 0x02
     35e:	93 81       	ldd	r25, Z+3	; 0x03
     360:	01 96       	adiw	r24, 0x01	; 1
     362:	93 83       	std	Z+3, r25	; 0x03
     364:	82 83       	std	Z+2, r24	; 0x02
     366:	df 01       	movw	r26, r30
     368:	01 c0       	rjmp	.+2      	; 0x36c <_fpadd_parts+0x28c>
     36a:	d2 01       	movw	r26, r4
     36c:	cd 01       	movw	r24, r26
     36e:	cd b7       	in	r28, 0x3d	; 61
     370:	de b7       	in	r29, 0x3e	; 62
     372:	e2 e1       	ldi	r30, 0x12	; 18
     374:	0c 94 a9 10 	jmp	0x2152	; 0x2152 <__epilogue_restores__>

00000378 <__subsf3>:
     378:	a0 e2       	ldi	r26, 0x20	; 32
     37a:	b0 e0       	ldi	r27, 0x00	; 0
     37c:	e2 ec       	ldi	r30, 0xC2	; 194
     37e:	f1 e0       	ldi	r31, 0x01	; 1
     380:	0c 94 99 10 	jmp	0x2132	; 0x2132 <__prologue_saves__+0x18>
     384:	69 83       	std	Y+1, r22	; 0x01
     386:	7a 83       	std	Y+2, r23	; 0x02
     388:	8b 83       	std	Y+3, r24	; 0x03
     38a:	9c 83       	std	Y+4, r25	; 0x04
     38c:	2d 83       	std	Y+5, r18	; 0x05
     38e:	3e 83       	std	Y+6, r19	; 0x06
     390:	4f 83       	std	Y+7, r20	; 0x07
     392:	58 87       	std	Y+8, r21	; 0x08
     394:	e9 e0       	ldi	r30, 0x09	; 9
     396:	ee 2e       	mov	r14, r30
     398:	f1 2c       	mov	r15, r1
     39a:	ec 0e       	add	r14, r28
     39c:	fd 1e       	adc	r15, r29
     39e:	ce 01       	movw	r24, r28
     3a0:	01 96       	adiw	r24, 0x01	; 1
     3a2:	b7 01       	movw	r22, r14
     3a4:	39 d4       	rcall	.+2162   	; 0xc18 <__unpack_f>
     3a6:	8e 01       	movw	r16, r28
     3a8:	0f 5e       	subi	r16, 0xEF	; 239
     3aa:	1f 4f       	sbci	r17, 0xFF	; 255
     3ac:	ce 01       	movw	r24, r28
     3ae:	05 96       	adiw	r24, 0x05	; 5
     3b0:	b8 01       	movw	r22, r16
     3b2:	32 d4       	rcall	.+2148   	; 0xc18 <__unpack_f>
     3b4:	8a 89       	ldd	r24, Y+18	; 0x12
     3b6:	91 e0       	ldi	r25, 0x01	; 1
     3b8:	89 27       	eor	r24, r25
     3ba:	8a 8b       	std	Y+18, r24	; 0x12
     3bc:	c7 01       	movw	r24, r14
     3be:	b8 01       	movw	r22, r16
     3c0:	ae 01       	movw	r20, r28
     3c2:	47 5e       	subi	r20, 0xE7	; 231
     3c4:	5f 4f       	sbci	r21, 0xFF	; 255
     3c6:	8c de       	rcall	.-744    	; 0xe0 <_fpadd_parts>
     3c8:	52 d3       	rcall	.+1700   	; 0xa6e <__pack_f>
     3ca:	a0 96       	adiw	r28, 0x20	; 32
     3cc:	e6 e0       	ldi	r30, 0x06	; 6
     3ce:	0c 94 b5 10 	jmp	0x216a	; 0x216a <__epilogue_restores__+0x18>

000003d2 <__addsf3>:
     3d2:	a0 e2       	ldi	r26, 0x20	; 32
     3d4:	b0 e0       	ldi	r27, 0x00	; 0
     3d6:	ef ee       	ldi	r30, 0xEF	; 239
     3d8:	f1 e0       	ldi	r31, 0x01	; 1
     3da:	0c 94 99 10 	jmp	0x2132	; 0x2132 <__prologue_saves__+0x18>
     3de:	69 83       	std	Y+1, r22	; 0x01
     3e0:	7a 83       	std	Y+2, r23	; 0x02
     3e2:	8b 83       	std	Y+3, r24	; 0x03
     3e4:	9c 83       	std	Y+4, r25	; 0x04
     3e6:	2d 83       	std	Y+5, r18	; 0x05
     3e8:	3e 83       	std	Y+6, r19	; 0x06
     3ea:	4f 83       	std	Y+7, r20	; 0x07
     3ec:	58 87       	std	Y+8, r21	; 0x08
     3ee:	f9 e0       	ldi	r31, 0x09	; 9
     3f0:	ef 2e       	mov	r14, r31
     3f2:	f1 2c       	mov	r15, r1
     3f4:	ec 0e       	add	r14, r28
     3f6:	fd 1e       	adc	r15, r29
     3f8:	ce 01       	movw	r24, r28
     3fa:	01 96       	adiw	r24, 0x01	; 1
     3fc:	b7 01       	movw	r22, r14
     3fe:	0c d4       	rcall	.+2072   	; 0xc18 <__unpack_f>
     400:	8e 01       	movw	r16, r28
     402:	0f 5e       	subi	r16, 0xEF	; 239
     404:	1f 4f       	sbci	r17, 0xFF	; 255
     406:	ce 01       	movw	r24, r28
     408:	05 96       	adiw	r24, 0x05	; 5
     40a:	b8 01       	movw	r22, r16
     40c:	05 d4       	rcall	.+2058   	; 0xc18 <__unpack_f>
     40e:	c7 01       	movw	r24, r14
     410:	b8 01       	movw	r22, r16
     412:	ae 01       	movw	r20, r28
     414:	47 5e       	subi	r20, 0xE7	; 231
     416:	5f 4f       	sbci	r21, 0xFF	; 255
     418:	63 de       	rcall	.-826    	; 0xe0 <_fpadd_parts>
     41a:	29 d3       	rcall	.+1618   	; 0xa6e <__pack_f>
     41c:	a0 96       	adiw	r28, 0x20	; 32
     41e:	e6 e0       	ldi	r30, 0x06	; 6
     420:	0c 94 b5 10 	jmp	0x216a	; 0x216a <__epilogue_restores__+0x18>

00000424 <__mulsf3>:
     424:	a0 e2       	ldi	r26, 0x20	; 32
     426:	b0 e0       	ldi	r27, 0x00	; 0
     428:	e8 e1       	ldi	r30, 0x18	; 24
     42a:	f2 e0       	ldi	r31, 0x02	; 2
     42c:	0c 94 8d 10 	jmp	0x211a	; 0x211a <__prologue_saves__>
     430:	69 83       	std	Y+1, r22	; 0x01
     432:	7a 83       	std	Y+2, r23	; 0x02
     434:	8b 83       	std	Y+3, r24	; 0x03
     436:	9c 83       	std	Y+4, r25	; 0x04
     438:	2d 83       	std	Y+5, r18	; 0x05
     43a:	3e 83       	std	Y+6, r19	; 0x06
     43c:	4f 83       	std	Y+7, r20	; 0x07
     43e:	58 87       	std	Y+8, r21	; 0x08
     440:	ce 01       	movw	r24, r28
     442:	01 96       	adiw	r24, 0x01	; 1
     444:	be 01       	movw	r22, r28
     446:	67 5f       	subi	r22, 0xF7	; 247
     448:	7f 4f       	sbci	r23, 0xFF	; 255
     44a:	e6 d3       	rcall	.+1996   	; 0xc18 <__unpack_f>
     44c:	ce 01       	movw	r24, r28
     44e:	05 96       	adiw	r24, 0x05	; 5
     450:	be 01       	movw	r22, r28
     452:	6f 5e       	subi	r22, 0xEF	; 239
     454:	7f 4f       	sbci	r23, 0xFF	; 255
     456:	e0 d3       	rcall	.+1984   	; 0xc18 <__unpack_f>
     458:	99 85       	ldd	r25, Y+9	; 0x09
     45a:	92 30       	cpi	r25, 0x02	; 2
     45c:	88 f0       	brcs	.+34     	; 0x480 <__mulsf3+0x5c>
     45e:	89 89       	ldd	r24, Y+17	; 0x11
     460:	82 30       	cpi	r24, 0x02	; 2
     462:	c8 f0       	brcs	.+50     	; 0x496 <__mulsf3+0x72>
     464:	94 30       	cpi	r25, 0x04	; 4
     466:	19 f4       	brne	.+6      	; 0x46e <__mulsf3+0x4a>
     468:	82 30       	cpi	r24, 0x02	; 2
     46a:	51 f4       	brne	.+20     	; 0x480 <__mulsf3+0x5c>
     46c:	04 c0       	rjmp	.+8      	; 0x476 <__mulsf3+0x52>
     46e:	84 30       	cpi	r24, 0x04	; 4
     470:	29 f4       	brne	.+10     	; 0x47c <__mulsf3+0x58>
     472:	92 30       	cpi	r25, 0x02	; 2
     474:	81 f4       	brne	.+32     	; 0x496 <__mulsf3+0x72>
     476:	85 ef       	ldi	r24, 0xF5	; 245
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	c6 c0       	rjmp	.+396    	; 0x608 <__mulsf3+0x1e4>
     47c:	92 30       	cpi	r25, 0x02	; 2
     47e:	49 f4       	brne	.+18     	; 0x492 <__mulsf3+0x6e>
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	9a 85       	ldd	r25, Y+10	; 0x0a
     484:	8a 89       	ldd	r24, Y+18	; 0x12
     486:	98 13       	cpse	r25, r24
     488:	21 e0       	ldi	r18, 0x01	; 1
     48a:	2a 87       	std	Y+10, r18	; 0x0a
     48c:	ce 01       	movw	r24, r28
     48e:	09 96       	adiw	r24, 0x09	; 9
     490:	bb c0       	rjmp	.+374    	; 0x608 <__mulsf3+0x1e4>
     492:	82 30       	cpi	r24, 0x02	; 2
     494:	49 f4       	brne	.+18     	; 0x4a8 <__mulsf3+0x84>
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	9a 85       	ldd	r25, Y+10	; 0x0a
     49a:	8a 89       	ldd	r24, Y+18	; 0x12
     49c:	98 13       	cpse	r25, r24
     49e:	21 e0       	ldi	r18, 0x01	; 1
     4a0:	2a 8b       	std	Y+18, r18	; 0x12
     4a2:	ce 01       	movw	r24, r28
     4a4:	41 96       	adiw	r24, 0x11	; 17
     4a6:	b0 c0       	rjmp	.+352    	; 0x608 <__mulsf3+0x1e4>
     4a8:	2d 84       	ldd	r2, Y+13	; 0x0d
     4aa:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ac:	4f 84       	ldd	r4, Y+15	; 0x0f
     4ae:	58 88       	ldd	r5, Y+16	; 0x10
     4b0:	6d 88       	ldd	r6, Y+21	; 0x15
     4b2:	7e 88       	ldd	r7, Y+22	; 0x16
     4b4:	8f 88       	ldd	r8, Y+23	; 0x17
     4b6:	98 8c       	ldd	r9, Y+24	; 0x18
     4b8:	ee 24       	eor	r14, r14
     4ba:	ff 24       	eor	r15, r15
     4bc:	87 01       	movw	r16, r14
     4be:	aa 24       	eor	r10, r10
     4c0:	bb 24       	eor	r11, r11
     4c2:	65 01       	movw	r12, r10
     4c4:	40 e0       	ldi	r20, 0x00	; 0
     4c6:	50 e0       	ldi	r21, 0x00	; 0
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	70 e0       	ldi	r23, 0x00	; 0
     4cc:	e0 e0       	ldi	r30, 0x00	; 0
     4ce:	f0 e0       	ldi	r31, 0x00	; 0
     4d0:	c1 01       	movw	r24, r2
     4d2:	81 70       	andi	r24, 0x01	; 1
     4d4:	90 70       	andi	r25, 0x00	; 0
     4d6:	89 2b       	or	r24, r25
     4d8:	e9 f0       	breq	.+58     	; 0x514 <__mulsf3+0xf0>
     4da:	e6 0c       	add	r14, r6
     4dc:	f7 1c       	adc	r15, r7
     4de:	08 1d       	adc	r16, r8
     4e0:	19 1d       	adc	r17, r9
     4e2:	9a 01       	movw	r18, r20
     4e4:	ab 01       	movw	r20, r22
     4e6:	2a 0d       	add	r18, r10
     4e8:	3b 1d       	adc	r19, r11
     4ea:	4c 1d       	adc	r20, r12
     4ec:	5d 1d       	adc	r21, r13
     4ee:	80 e0       	ldi	r24, 0x00	; 0
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	a0 e0       	ldi	r26, 0x00	; 0
     4f4:	b0 e0       	ldi	r27, 0x00	; 0
     4f6:	e6 14       	cp	r14, r6
     4f8:	f7 04       	cpc	r15, r7
     4fa:	08 05       	cpc	r16, r8
     4fc:	19 05       	cpc	r17, r9
     4fe:	20 f4       	brcc	.+8      	; 0x508 <__mulsf3+0xe4>
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	a0 e0       	ldi	r26, 0x00	; 0
     506:	b0 e0       	ldi	r27, 0x00	; 0
     508:	ba 01       	movw	r22, r20
     50a:	a9 01       	movw	r20, r18
     50c:	48 0f       	add	r20, r24
     50e:	59 1f       	adc	r21, r25
     510:	6a 1f       	adc	r22, r26
     512:	7b 1f       	adc	r23, r27
     514:	aa 0c       	add	r10, r10
     516:	bb 1c       	adc	r11, r11
     518:	cc 1c       	adc	r12, r12
     51a:	dd 1c       	adc	r13, r13
     51c:	97 fe       	sbrs	r9, 7
     51e:	08 c0       	rjmp	.+16     	; 0x530 <__mulsf3+0x10c>
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	a0 e0       	ldi	r26, 0x00	; 0
     526:	b0 e0       	ldi	r27, 0x00	; 0
     528:	a8 2a       	or	r10, r24
     52a:	b9 2a       	or	r11, r25
     52c:	ca 2a       	or	r12, r26
     52e:	db 2a       	or	r13, r27
     530:	31 96       	adiw	r30, 0x01	; 1
     532:	e0 32       	cpi	r30, 0x20	; 32
     534:	f1 05       	cpc	r31, r1
     536:	49 f0       	breq	.+18     	; 0x54a <__mulsf3+0x126>
     538:	66 0c       	add	r6, r6
     53a:	77 1c       	adc	r7, r7
     53c:	88 1c       	adc	r8, r8
     53e:	99 1c       	adc	r9, r9
     540:	56 94       	lsr	r5
     542:	47 94       	ror	r4
     544:	37 94       	ror	r3
     546:	27 94       	ror	r2
     548:	c3 cf       	rjmp	.-122    	; 0x4d0 <__mulsf3+0xac>
     54a:	fa 85       	ldd	r31, Y+10	; 0x0a
     54c:	ea 89       	ldd	r30, Y+18	; 0x12
     54e:	2b 89       	ldd	r18, Y+19	; 0x13
     550:	3c 89       	ldd	r19, Y+20	; 0x14
     552:	8b 85       	ldd	r24, Y+11	; 0x0b
     554:	9c 85       	ldd	r25, Y+12	; 0x0c
     556:	28 0f       	add	r18, r24
     558:	39 1f       	adc	r19, r25
     55a:	2e 5f       	subi	r18, 0xFE	; 254
     55c:	3f 4f       	sbci	r19, 0xFF	; 255
     55e:	17 c0       	rjmp	.+46     	; 0x58e <__mulsf3+0x16a>
     560:	ca 01       	movw	r24, r20
     562:	81 70       	andi	r24, 0x01	; 1
     564:	90 70       	andi	r25, 0x00	; 0
     566:	89 2b       	or	r24, r25
     568:	61 f0       	breq	.+24     	; 0x582 <__mulsf3+0x15e>
     56a:	16 95       	lsr	r17
     56c:	07 95       	ror	r16
     56e:	f7 94       	ror	r15
     570:	e7 94       	ror	r14
     572:	80 e0       	ldi	r24, 0x00	; 0
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	a0 e0       	ldi	r26, 0x00	; 0
     578:	b0 e8       	ldi	r27, 0x80	; 128
     57a:	e8 2a       	or	r14, r24
     57c:	f9 2a       	or	r15, r25
     57e:	0a 2b       	or	r16, r26
     580:	1b 2b       	or	r17, r27
     582:	76 95       	lsr	r23
     584:	67 95       	ror	r22
     586:	57 95       	ror	r21
     588:	47 95       	ror	r20
     58a:	2f 5f       	subi	r18, 0xFF	; 255
     58c:	3f 4f       	sbci	r19, 0xFF	; 255
     58e:	77 fd       	sbrc	r23, 7
     590:	e7 cf       	rjmp	.-50     	; 0x560 <__mulsf3+0x13c>
     592:	0c c0       	rjmp	.+24     	; 0x5ac <__mulsf3+0x188>
     594:	44 0f       	add	r20, r20
     596:	55 1f       	adc	r21, r21
     598:	66 1f       	adc	r22, r22
     59a:	77 1f       	adc	r23, r23
     59c:	17 fd       	sbrc	r17, 7
     59e:	41 60       	ori	r20, 0x01	; 1
     5a0:	ee 0c       	add	r14, r14
     5a2:	ff 1c       	adc	r15, r15
     5a4:	00 1f       	adc	r16, r16
     5a6:	11 1f       	adc	r17, r17
     5a8:	21 50       	subi	r18, 0x01	; 1
     5aa:	30 40       	sbci	r19, 0x00	; 0
     5ac:	40 30       	cpi	r20, 0x00	; 0
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	59 07       	cpc	r21, r25
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	69 07       	cpc	r22, r25
     5b6:	90 e4       	ldi	r25, 0x40	; 64
     5b8:	79 07       	cpc	r23, r25
     5ba:	60 f3       	brcs	.-40     	; 0x594 <__mulsf3+0x170>
     5bc:	2b 8f       	std	Y+27, r18	; 0x1b
     5be:	3c 8f       	std	Y+28, r19	; 0x1c
     5c0:	db 01       	movw	r26, r22
     5c2:	ca 01       	movw	r24, r20
     5c4:	8f 77       	andi	r24, 0x7F	; 127
     5c6:	90 70       	andi	r25, 0x00	; 0
     5c8:	a0 70       	andi	r26, 0x00	; 0
     5ca:	b0 70       	andi	r27, 0x00	; 0
     5cc:	80 34       	cpi	r24, 0x40	; 64
     5ce:	91 05       	cpc	r25, r1
     5d0:	a1 05       	cpc	r26, r1
     5d2:	b1 05       	cpc	r27, r1
     5d4:	61 f4       	brne	.+24     	; 0x5ee <__mulsf3+0x1ca>
     5d6:	47 fd       	sbrc	r20, 7
     5d8:	0a c0       	rjmp	.+20     	; 0x5ee <__mulsf3+0x1ca>
     5da:	e1 14       	cp	r14, r1
     5dc:	f1 04       	cpc	r15, r1
     5de:	01 05       	cpc	r16, r1
     5e0:	11 05       	cpc	r17, r1
     5e2:	29 f0       	breq	.+10     	; 0x5ee <__mulsf3+0x1ca>
     5e4:	40 5c       	subi	r20, 0xC0	; 192
     5e6:	5f 4f       	sbci	r21, 0xFF	; 255
     5e8:	6f 4f       	sbci	r22, 0xFF	; 255
     5ea:	7f 4f       	sbci	r23, 0xFF	; 255
     5ec:	40 78       	andi	r20, 0x80	; 128
     5ee:	1a 8e       	std	Y+26, r1	; 0x1a
     5f0:	fe 17       	cp	r31, r30
     5f2:	11 f0       	breq	.+4      	; 0x5f8 <__mulsf3+0x1d4>
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	8a 8f       	std	Y+26, r24	; 0x1a
     5f8:	4d 8f       	std	Y+29, r20	; 0x1d
     5fa:	5e 8f       	std	Y+30, r21	; 0x1e
     5fc:	6f 8f       	std	Y+31, r22	; 0x1f
     5fe:	78 a3       	std	Y+32, r23	; 0x20
     600:	83 e0       	ldi	r24, 0x03	; 3
     602:	89 8f       	std	Y+25, r24	; 0x19
     604:	ce 01       	movw	r24, r28
     606:	49 96       	adiw	r24, 0x19	; 25
     608:	32 d2       	rcall	.+1124   	; 0xa6e <__pack_f>
     60a:	a0 96       	adiw	r28, 0x20	; 32
     60c:	e2 e1       	ldi	r30, 0x12	; 18
     60e:	0c 94 a9 10 	jmp	0x2152	; 0x2152 <__epilogue_restores__>

00000612 <__divsf3>:
     612:	a8 e1       	ldi	r26, 0x18	; 24
     614:	b0 e0       	ldi	r27, 0x00	; 0
     616:	ef e0       	ldi	r30, 0x0F	; 15
     618:	f3 e0       	ldi	r31, 0x03	; 3
     61a:	0c 94 95 10 	jmp	0x212a	; 0x212a <__prologue_saves__+0x10>
     61e:	69 83       	std	Y+1, r22	; 0x01
     620:	7a 83       	std	Y+2, r23	; 0x02
     622:	8b 83       	std	Y+3, r24	; 0x03
     624:	9c 83       	std	Y+4, r25	; 0x04
     626:	2d 83       	std	Y+5, r18	; 0x05
     628:	3e 83       	std	Y+6, r19	; 0x06
     62a:	4f 83       	std	Y+7, r20	; 0x07
     62c:	58 87       	std	Y+8, r21	; 0x08
     62e:	b9 e0       	ldi	r27, 0x09	; 9
     630:	eb 2e       	mov	r14, r27
     632:	f1 2c       	mov	r15, r1
     634:	ec 0e       	add	r14, r28
     636:	fd 1e       	adc	r15, r29
     638:	ce 01       	movw	r24, r28
     63a:	01 96       	adiw	r24, 0x01	; 1
     63c:	b7 01       	movw	r22, r14
     63e:	ec d2       	rcall	.+1496   	; 0xc18 <__unpack_f>
     640:	8e 01       	movw	r16, r28
     642:	0f 5e       	subi	r16, 0xEF	; 239
     644:	1f 4f       	sbci	r17, 0xFF	; 255
     646:	ce 01       	movw	r24, r28
     648:	05 96       	adiw	r24, 0x05	; 5
     64a:	b8 01       	movw	r22, r16
     64c:	e5 d2       	rcall	.+1482   	; 0xc18 <__unpack_f>
     64e:	29 85       	ldd	r18, Y+9	; 0x09
     650:	22 30       	cpi	r18, 0x02	; 2
     652:	08 f4       	brcc	.+2      	; 0x656 <__divsf3+0x44>
     654:	7e c0       	rjmp	.+252    	; 0x752 <__divsf3+0x140>
     656:	39 89       	ldd	r19, Y+17	; 0x11
     658:	32 30       	cpi	r19, 0x02	; 2
     65a:	10 f4       	brcc	.+4      	; 0x660 <__divsf3+0x4e>
     65c:	b8 01       	movw	r22, r16
     65e:	7c c0       	rjmp	.+248    	; 0x758 <__divsf3+0x146>
     660:	8a 85       	ldd	r24, Y+10	; 0x0a
     662:	9a 89       	ldd	r25, Y+18	; 0x12
     664:	89 27       	eor	r24, r25
     666:	8a 87       	std	Y+10, r24	; 0x0a
     668:	24 30       	cpi	r18, 0x04	; 4
     66a:	11 f0       	breq	.+4      	; 0x670 <__divsf3+0x5e>
     66c:	22 30       	cpi	r18, 0x02	; 2
     66e:	31 f4       	brne	.+12     	; 0x67c <__divsf3+0x6a>
     670:	23 17       	cp	r18, r19
     672:	09 f0       	breq	.+2      	; 0x676 <__divsf3+0x64>
     674:	6e c0       	rjmp	.+220    	; 0x752 <__divsf3+0x140>
     676:	65 ef       	ldi	r22, 0xF5	; 245
     678:	70 e0       	ldi	r23, 0x00	; 0
     67a:	6e c0       	rjmp	.+220    	; 0x758 <__divsf3+0x146>
     67c:	34 30       	cpi	r19, 0x04	; 4
     67e:	39 f4       	brne	.+14     	; 0x68e <__divsf3+0x7c>
     680:	1d 86       	std	Y+13, r1	; 0x0d
     682:	1e 86       	std	Y+14, r1	; 0x0e
     684:	1f 86       	std	Y+15, r1	; 0x0f
     686:	18 8a       	std	Y+16, r1	; 0x10
     688:	1c 86       	std	Y+12, r1	; 0x0c
     68a:	1b 86       	std	Y+11, r1	; 0x0b
     68c:	04 c0       	rjmp	.+8      	; 0x696 <__divsf3+0x84>
     68e:	32 30       	cpi	r19, 0x02	; 2
     690:	21 f4       	brne	.+8      	; 0x69a <__divsf3+0x88>
     692:	84 e0       	ldi	r24, 0x04	; 4
     694:	89 87       	std	Y+9, r24	; 0x09
     696:	b7 01       	movw	r22, r14
     698:	5f c0       	rjmp	.+190    	; 0x758 <__divsf3+0x146>
     69a:	2b 85       	ldd	r18, Y+11	; 0x0b
     69c:	3c 85       	ldd	r19, Y+12	; 0x0c
     69e:	8b 89       	ldd	r24, Y+19	; 0x13
     6a0:	9c 89       	ldd	r25, Y+20	; 0x14
     6a2:	28 1b       	sub	r18, r24
     6a4:	39 0b       	sbc	r19, r25
     6a6:	3c 87       	std	Y+12, r19	; 0x0c
     6a8:	2b 87       	std	Y+11, r18	; 0x0b
     6aa:	ed 84       	ldd	r14, Y+13	; 0x0d
     6ac:	fe 84       	ldd	r15, Y+14	; 0x0e
     6ae:	0f 85       	ldd	r16, Y+15	; 0x0f
     6b0:	18 89       	ldd	r17, Y+16	; 0x10
     6b2:	ad 88       	ldd	r10, Y+21	; 0x15
     6b4:	be 88       	ldd	r11, Y+22	; 0x16
     6b6:	cf 88       	ldd	r12, Y+23	; 0x17
     6b8:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ba:	ea 14       	cp	r14, r10
     6bc:	fb 04       	cpc	r15, r11
     6be:	0c 05       	cpc	r16, r12
     6c0:	1d 05       	cpc	r17, r13
     6c2:	40 f4       	brcc	.+16     	; 0x6d4 <__divsf3+0xc2>
     6c4:	ee 0c       	add	r14, r14
     6c6:	ff 1c       	adc	r15, r15
     6c8:	00 1f       	adc	r16, r16
     6ca:	11 1f       	adc	r17, r17
     6cc:	21 50       	subi	r18, 0x01	; 1
     6ce:	30 40       	sbci	r19, 0x00	; 0
     6d0:	3c 87       	std	Y+12, r19	; 0x0c
     6d2:	2b 87       	std	Y+11, r18	; 0x0b
     6d4:	20 e0       	ldi	r18, 0x00	; 0
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	40 e0       	ldi	r20, 0x00	; 0
     6da:	50 e0       	ldi	r21, 0x00	; 0
     6dc:	80 e0       	ldi	r24, 0x00	; 0
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	a0 e0       	ldi	r26, 0x00	; 0
     6e2:	b0 e4       	ldi	r27, 0x40	; 64
     6e4:	60 e0       	ldi	r22, 0x00	; 0
     6e6:	70 e0       	ldi	r23, 0x00	; 0
     6e8:	ea 14       	cp	r14, r10
     6ea:	fb 04       	cpc	r15, r11
     6ec:	0c 05       	cpc	r16, r12
     6ee:	1d 05       	cpc	r17, r13
     6f0:	40 f0       	brcs	.+16     	; 0x702 <__divsf3+0xf0>
     6f2:	28 2b       	or	r18, r24
     6f4:	39 2b       	or	r19, r25
     6f6:	4a 2b       	or	r20, r26
     6f8:	5b 2b       	or	r21, r27
     6fa:	ea 18       	sub	r14, r10
     6fc:	fb 08       	sbc	r15, r11
     6fe:	0c 09       	sbc	r16, r12
     700:	1d 09       	sbc	r17, r13
     702:	b6 95       	lsr	r27
     704:	a7 95       	ror	r26
     706:	97 95       	ror	r25
     708:	87 95       	ror	r24
     70a:	ee 0c       	add	r14, r14
     70c:	ff 1c       	adc	r15, r15
     70e:	00 1f       	adc	r16, r16
     710:	11 1f       	adc	r17, r17
     712:	6f 5f       	subi	r22, 0xFF	; 255
     714:	7f 4f       	sbci	r23, 0xFF	; 255
     716:	6f 31       	cpi	r22, 0x1F	; 31
     718:	71 05       	cpc	r23, r1
     71a:	31 f7       	brne	.-52     	; 0x6e8 <__divsf3+0xd6>
     71c:	da 01       	movw	r26, r20
     71e:	c9 01       	movw	r24, r18
     720:	8f 77       	andi	r24, 0x7F	; 127
     722:	90 70       	andi	r25, 0x00	; 0
     724:	a0 70       	andi	r26, 0x00	; 0
     726:	b0 70       	andi	r27, 0x00	; 0
     728:	80 34       	cpi	r24, 0x40	; 64
     72a:	91 05       	cpc	r25, r1
     72c:	a1 05       	cpc	r26, r1
     72e:	b1 05       	cpc	r27, r1
     730:	61 f4       	brne	.+24     	; 0x74a <__divsf3+0x138>
     732:	27 fd       	sbrc	r18, 7
     734:	0a c0       	rjmp	.+20     	; 0x74a <__divsf3+0x138>
     736:	e1 14       	cp	r14, r1
     738:	f1 04       	cpc	r15, r1
     73a:	01 05       	cpc	r16, r1
     73c:	11 05       	cpc	r17, r1
     73e:	29 f0       	breq	.+10     	; 0x74a <__divsf3+0x138>
     740:	20 5c       	subi	r18, 0xC0	; 192
     742:	3f 4f       	sbci	r19, 0xFF	; 255
     744:	4f 4f       	sbci	r20, 0xFF	; 255
     746:	5f 4f       	sbci	r21, 0xFF	; 255
     748:	20 78       	andi	r18, 0x80	; 128
     74a:	2d 87       	std	Y+13, r18	; 0x0d
     74c:	3e 87       	std	Y+14, r19	; 0x0e
     74e:	4f 87       	std	Y+15, r20	; 0x0f
     750:	58 8b       	std	Y+16, r21	; 0x10
     752:	be 01       	movw	r22, r28
     754:	67 5f       	subi	r22, 0xF7	; 247
     756:	7f 4f       	sbci	r23, 0xFF	; 255
     758:	cb 01       	movw	r24, r22
     75a:	89 d1       	rcall	.+786    	; 0xa6e <__pack_f>
     75c:	68 96       	adiw	r28, 0x18	; 24
     75e:	ea e0       	ldi	r30, 0x0A	; 10
     760:	0c 94 b1 10 	jmp	0x2162	; 0x2162 <__epilogue_restores__+0x10>

00000764 <__gtsf2>:
     764:	a8 e1       	ldi	r26, 0x18	; 24
     766:	b0 e0       	ldi	r27, 0x00	; 0
     768:	e8 eb       	ldi	r30, 0xB8	; 184
     76a:	f3 e0       	ldi	r31, 0x03	; 3
     76c:	0c 94 99 10 	jmp	0x2132	; 0x2132 <__prologue_saves__+0x18>
     770:	69 83       	std	Y+1, r22	; 0x01
     772:	7a 83       	std	Y+2, r23	; 0x02
     774:	8b 83       	std	Y+3, r24	; 0x03
     776:	9c 83       	std	Y+4, r25	; 0x04
     778:	2d 83       	std	Y+5, r18	; 0x05
     77a:	3e 83       	std	Y+6, r19	; 0x06
     77c:	4f 83       	std	Y+7, r20	; 0x07
     77e:	58 87       	std	Y+8, r21	; 0x08
     780:	89 e0       	ldi	r24, 0x09	; 9
     782:	e8 2e       	mov	r14, r24
     784:	f1 2c       	mov	r15, r1
     786:	ec 0e       	add	r14, r28
     788:	fd 1e       	adc	r15, r29
     78a:	ce 01       	movw	r24, r28
     78c:	01 96       	adiw	r24, 0x01	; 1
     78e:	b7 01       	movw	r22, r14
     790:	43 d2       	rcall	.+1158   	; 0xc18 <__unpack_f>
     792:	8e 01       	movw	r16, r28
     794:	0f 5e       	subi	r16, 0xEF	; 239
     796:	1f 4f       	sbci	r17, 0xFF	; 255
     798:	ce 01       	movw	r24, r28
     79a:	05 96       	adiw	r24, 0x05	; 5
     79c:	b8 01       	movw	r22, r16
     79e:	3c d2       	rcall	.+1144   	; 0xc18 <__unpack_f>
     7a0:	89 85       	ldd	r24, Y+9	; 0x09
     7a2:	82 30       	cpi	r24, 0x02	; 2
     7a4:	38 f0       	brcs	.+14     	; 0x7b4 <__gtsf2+0x50>
     7a6:	89 89       	ldd	r24, Y+17	; 0x11
     7a8:	82 30       	cpi	r24, 0x02	; 2
     7aa:	20 f0       	brcs	.+8      	; 0x7b4 <__gtsf2+0x50>
     7ac:	c7 01       	movw	r24, r14
     7ae:	b8 01       	movw	r22, r16
     7b0:	ab d2       	rcall	.+1366   	; 0xd08 <__fpcmp_parts_f>
     7b2:	01 c0       	rjmp	.+2      	; 0x7b6 <__gtsf2+0x52>
     7b4:	8f ef       	ldi	r24, 0xFF	; 255
     7b6:	68 96       	adiw	r28, 0x18	; 24
     7b8:	e6 e0       	ldi	r30, 0x06	; 6
     7ba:	0c 94 b5 10 	jmp	0x216a	; 0x216a <__epilogue_restores__+0x18>

000007be <__gesf2>:
     7be:	a8 e1       	ldi	r26, 0x18	; 24
     7c0:	b0 e0       	ldi	r27, 0x00	; 0
     7c2:	e5 ee       	ldi	r30, 0xE5	; 229
     7c4:	f3 e0       	ldi	r31, 0x03	; 3
     7c6:	0c 94 99 10 	jmp	0x2132	; 0x2132 <__prologue_saves__+0x18>
     7ca:	69 83       	std	Y+1, r22	; 0x01
     7cc:	7a 83       	std	Y+2, r23	; 0x02
     7ce:	8b 83       	std	Y+3, r24	; 0x03
     7d0:	9c 83       	std	Y+4, r25	; 0x04
     7d2:	2d 83       	std	Y+5, r18	; 0x05
     7d4:	3e 83       	std	Y+6, r19	; 0x06
     7d6:	4f 83       	std	Y+7, r20	; 0x07
     7d8:	58 87       	std	Y+8, r21	; 0x08
     7da:	89 e0       	ldi	r24, 0x09	; 9
     7dc:	e8 2e       	mov	r14, r24
     7de:	f1 2c       	mov	r15, r1
     7e0:	ec 0e       	add	r14, r28
     7e2:	fd 1e       	adc	r15, r29
     7e4:	ce 01       	movw	r24, r28
     7e6:	01 96       	adiw	r24, 0x01	; 1
     7e8:	b7 01       	movw	r22, r14
     7ea:	16 d2       	rcall	.+1068   	; 0xc18 <__unpack_f>
     7ec:	8e 01       	movw	r16, r28
     7ee:	0f 5e       	subi	r16, 0xEF	; 239
     7f0:	1f 4f       	sbci	r17, 0xFF	; 255
     7f2:	ce 01       	movw	r24, r28
     7f4:	05 96       	adiw	r24, 0x05	; 5
     7f6:	b8 01       	movw	r22, r16
     7f8:	0f d2       	rcall	.+1054   	; 0xc18 <__unpack_f>
     7fa:	89 85       	ldd	r24, Y+9	; 0x09
     7fc:	82 30       	cpi	r24, 0x02	; 2
     7fe:	38 f0       	brcs	.+14     	; 0x80e <__gesf2+0x50>
     800:	89 89       	ldd	r24, Y+17	; 0x11
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	20 f0       	brcs	.+8      	; 0x80e <__gesf2+0x50>
     806:	c7 01       	movw	r24, r14
     808:	b8 01       	movw	r22, r16
     80a:	7e d2       	rcall	.+1276   	; 0xd08 <__fpcmp_parts_f>
     80c:	01 c0       	rjmp	.+2      	; 0x810 <__gesf2+0x52>
     80e:	8f ef       	ldi	r24, 0xFF	; 255
     810:	68 96       	adiw	r28, 0x18	; 24
     812:	e6 e0       	ldi	r30, 0x06	; 6
     814:	0c 94 b5 10 	jmp	0x216a	; 0x216a <__epilogue_restores__+0x18>

00000818 <__ltsf2>:
     818:	a8 e1       	ldi	r26, 0x18	; 24
     81a:	b0 e0       	ldi	r27, 0x00	; 0
     81c:	e2 e1       	ldi	r30, 0x12	; 18
     81e:	f4 e0       	ldi	r31, 0x04	; 4
     820:	0c 94 99 10 	jmp	0x2132	; 0x2132 <__prologue_saves__+0x18>
     824:	69 83       	std	Y+1, r22	; 0x01
     826:	7a 83       	std	Y+2, r23	; 0x02
     828:	8b 83       	std	Y+3, r24	; 0x03
     82a:	9c 83       	std	Y+4, r25	; 0x04
     82c:	2d 83       	std	Y+5, r18	; 0x05
     82e:	3e 83       	std	Y+6, r19	; 0x06
     830:	4f 83       	std	Y+7, r20	; 0x07
     832:	58 87       	std	Y+8, r21	; 0x08
     834:	89 e0       	ldi	r24, 0x09	; 9
     836:	e8 2e       	mov	r14, r24
     838:	f1 2c       	mov	r15, r1
     83a:	ec 0e       	add	r14, r28
     83c:	fd 1e       	adc	r15, r29
     83e:	ce 01       	movw	r24, r28
     840:	01 96       	adiw	r24, 0x01	; 1
     842:	b7 01       	movw	r22, r14
     844:	e9 d1       	rcall	.+978    	; 0xc18 <__unpack_f>
     846:	8e 01       	movw	r16, r28
     848:	0f 5e       	subi	r16, 0xEF	; 239
     84a:	1f 4f       	sbci	r17, 0xFF	; 255
     84c:	ce 01       	movw	r24, r28
     84e:	05 96       	adiw	r24, 0x05	; 5
     850:	b8 01       	movw	r22, r16
     852:	e2 d1       	rcall	.+964    	; 0xc18 <__unpack_f>
     854:	89 85       	ldd	r24, Y+9	; 0x09
     856:	82 30       	cpi	r24, 0x02	; 2
     858:	38 f0       	brcs	.+14     	; 0x868 <__stack+0x9>
     85a:	89 89       	ldd	r24, Y+17	; 0x11
     85c:	82 30       	cpi	r24, 0x02	; 2
     85e:	20 f0       	brcs	.+8      	; 0x868 <__stack+0x9>
     860:	c7 01       	movw	r24, r14
     862:	b8 01       	movw	r22, r16
     864:	51 d2       	rcall	.+1186   	; 0xd08 <__fpcmp_parts_f>
     866:	01 c0       	rjmp	.+2      	; 0x86a <__stack+0xb>
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	68 96       	adiw	r28, 0x18	; 24
     86c:	e6 e0       	ldi	r30, 0x06	; 6
     86e:	0c 94 b5 10 	jmp	0x216a	; 0x216a <__epilogue_restores__+0x18>

00000872 <__floatsisf>:
     872:	a8 e0       	ldi	r26, 0x08	; 8
     874:	b0 e0       	ldi	r27, 0x00	; 0
     876:	ef e3       	ldi	r30, 0x3F	; 63
     878:	f4 e0       	ldi	r31, 0x04	; 4
     87a:	0c 94 96 10 	jmp	0x212c	; 0x212c <__prologue_saves__+0x12>
     87e:	9b 01       	movw	r18, r22
     880:	ac 01       	movw	r20, r24
     882:	83 e0       	ldi	r24, 0x03	; 3
     884:	89 83       	std	Y+1, r24	; 0x01
     886:	da 01       	movw	r26, r20
     888:	c9 01       	movw	r24, r18
     88a:	88 27       	eor	r24, r24
     88c:	b7 fd       	sbrc	r27, 7
     88e:	83 95       	inc	r24
     890:	99 27       	eor	r25, r25
     892:	aa 27       	eor	r26, r26
     894:	bb 27       	eor	r27, r27
     896:	b8 2e       	mov	r11, r24
     898:	21 15       	cp	r18, r1
     89a:	31 05       	cpc	r19, r1
     89c:	41 05       	cpc	r20, r1
     89e:	51 05       	cpc	r21, r1
     8a0:	19 f4       	brne	.+6      	; 0x8a8 <__floatsisf+0x36>
     8a2:	82 e0       	ldi	r24, 0x02	; 2
     8a4:	89 83       	std	Y+1, r24	; 0x01
     8a6:	39 c0       	rjmp	.+114    	; 0x91a <__floatsisf+0xa8>
     8a8:	88 23       	and	r24, r24
     8aa:	a9 f0       	breq	.+42     	; 0x8d6 <__floatsisf+0x64>
     8ac:	20 30       	cpi	r18, 0x00	; 0
     8ae:	80 e0       	ldi	r24, 0x00	; 0
     8b0:	38 07       	cpc	r19, r24
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	48 07       	cpc	r20, r24
     8b6:	80 e8       	ldi	r24, 0x80	; 128
     8b8:	58 07       	cpc	r21, r24
     8ba:	29 f4       	brne	.+10     	; 0x8c6 <__floatsisf+0x54>
     8bc:	60 e0       	ldi	r22, 0x00	; 0
     8be:	70 e0       	ldi	r23, 0x00	; 0
     8c0:	80 e0       	ldi	r24, 0x00	; 0
     8c2:	9f ec       	ldi	r25, 0xCF	; 207
     8c4:	2e c0       	rjmp	.+92     	; 0x922 <__floatsisf+0xb0>
     8c6:	ee 24       	eor	r14, r14
     8c8:	ff 24       	eor	r15, r15
     8ca:	87 01       	movw	r16, r14
     8cc:	e2 1a       	sub	r14, r18
     8ce:	f3 0a       	sbc	r15, r19
     8d0:	04 0b       	sbc	r16, r20
     8d2:	15 0b       	sbc	r17, r21
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <__floatsisf+0x68>
     8d6:	79 01       	movw	r14, r18
     8d8:	8a 01       	movw	r16, r20
     8da:	8e e1       	ldi	r24, 0x1E	; 30
     8dc:	c8 2e       	mov	r12, r24
     8de:	d1 2c       	mov	r13, r1
     8e0:	dc 82       	std	Y+4, r13	; 0x04
     8e2:	cb 82       	std	Y+3, r12	; 0x03
     8e4:	ed 82       	std	Y+5, r14	; 0x05
     8e6:	fe 82       	std	Y+6, r15	; 0x06
     8e8:	0f 83       	std	Y+7, r16	; 0x07
     8ea:	18 87       	std	Y+8, r17	; 0x08
     8ec:	c8 01       	movw	r24, r16
     8ee:	b7 01       	movw	r22, r14
     8f0:	6f d0       	rcall	.+222    	; 0x9d0 <__clzsi2>
     8f2:	01 97       	sbiw	r24, 0x01	; 1
     8f4:	18 16       	cp	r1, r24
     8f6:	19 06       	cpc	r1, r25
     8f8:	84 f4       	brge	.+32     	; 0x91a <__floatsisf+0xa8>
     8fa:	08 2e       	mov	r0, r24
     8fc:	04 c0       	rjmp	.+8      	; 0x906 <__floatsisf+0x94>
     8fe:	ee 0c       	add	r14, r14
     900:	ff 1c       	adc	r15, r15
     902:	00 1f       	adc	r16, r16
     904:	11 1f       	adc	r17, r17
     906:	0a 94       	dec	r0
     908:	d2 f7       	brpl	.-12     	; 0x8fe <__floatsisf+0x8c>
     90a:	ed 82       	std	Y+5, r14	; 0x05
     90c:	fe 82       	std	Y+6, r15	; 0x06
     90e:	0f 83       	std	Y+7, r16	; 0x07
     910:	18 87       	std	Y+8, r17	; 0x08
     912:	c8 1a       	sub	r12, r24
     914:	d9 0a       	sbc	r13, r25
     916:	dc 82       	std	Y+4, r13	; 0x04
     918:	cb 82       	std	Y+3, r12	; 0x03
     91a:	ba 82       	std	Y+2, r11	; 0x02
     91c:	ce 01       	movw	r24, r28
     91e:	01 96       	adiw	r24, 0x01	; 1
     920:	a6 d0       	rcall	.+332    	; 0xa6e <__pack_f>
     922:	28 96       	adiw	r28, 0x08	; 8
     924:	e9 e0       	ldi	r30, 0x09	; 9
     926:	0c 94 b2 10 	jmp	0x2164	; 0x2164 <__epilogue_restores__+0x12>

0000092a <__fixsfsi>:
     92a:	ac e0       	ldi	r26, 0x0C	; 12
     92c:	b0 e0       	ldi	r27, 0x00	; 0
     92e:	eb e9       	ldi	r30, 0x9B	; 155
     930:	f4 e0       	ldi	r31, 0x04	; 4
     932:	0c 94 9d 10 	jmp	0x213a	; 0x213a <__prologue_saves__+0x20>
     936:	69 83       	std	Y+1, r22	; 0x01
     938:	7a 83       	std	Y+2, r23	; 0x02
     93a:	8b 83       	std	Y+3, r24	; 0x03
     93c:	9c 83       	std	Y+4, r25	; 0x04
     93e:	ce 01       	movw	r24, r28
     940:	01 96       	adiw	r24, 0x01	; 1
     942:	be 01       	movw	r22, r28
     944:	6b 5f       	subi	r22, 0xFB	; 251
     946:	7f 4f       	sbci	r23, 0xFF	; 255
     948:	67 d1       	rcall	.+718    	; 0xc18 <__unpack_f>
     94a:	8d 81       	ldd	r24, Y+5	; 0x05
     94c:	82 30       	cpi	r24, 0x02	; 2
     94e:	61 f1       	breq	.+88     	; 0x9a8 <__fixsfsi+0x7e>
     950:	82 30       	cpi	r24, 0x02	; 2
     952:	50 f1       	brcs	.+84     	; 0x9a8 <__fixsfsi+0x7e>
     954:	84 30       	cpi	r24, 0x04	; 4
     956:	21 f4       	brne	.+8      	; 0x960 <__fixsfsi+0x36>
     958:	8e 81       	ldd	r24, Y+6	; 0x06
     95a:	88 23       	and	r24, r24
     95c:	51 f1       	breq	.+84     	; 0x9b2 <__fixsfsi+0x88>
     95e:	2e c0       	rjmp	.+92     	; 0x9bc <__fixsfsi+0x92>
     960:	2f 81       	ldd	r18, Y+7	; 0x07
     962:	38 85       	ldd	r19, Y+8	; 0x08
     964:	37 fd       	sbrc	r19, 7
     966:	20 c0       	rjmp	.+64     	; 0x9a8 <__fixsfsi+0x7e>
     968:	6e 81       	ldd	r22, Y+6	; 0x06
     96a:	2f 31       	cpi	r18, 0x1F	; 31
     96c:	31 05       	cpc	r19, r1
     96e:	1c f0       	brlt	.+6      	; 0x976 <__fixsfsi+0x4c>
     970:	66 23       	and	r22, r22
     972:	f9 f0       	breq	.+62     	; 0x9b2 <__fixsfsi+0x88>
     974:	23 c0       	rjmp	.+70     	; 0x9bc <__fixsfsi+0x92>
     976:	8e e1       	ldi	r24, 0x1E	; 30
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	82 1b       	sub	r24, r18
     97c:	93 0b       	sbc	r25, r19
     97e:	29 85       	ldd	r18, Y+9	; 0x09
     980:	3a 85       	ldd	r19, Y+10	; 0x0a
     982:	4b 85       	ldd	r20, Y+11	; 0x0b
     984:	5c 85       	ldd	r21, Y+12	; 0x0c
     986:	04 c0       	rjmp	.+8      	; 0x990 <__fixsfsi+0x66>
     988:	56 95       	lsr	r21
     98a:	47 95       	ror	r20
     98c:	37 95       	ror	r19
     98e:	27 95       	ror	r18
     990:	8a 95       	dec	r24
     992:	d2 f7       	brpl	.-12     	; 0x988 <__fixsfsi+0x5e>
     994:	66 23       	and	r22, r22
     996:	b1 f0       	breq	.+44     	; 0x9c4 <__fixsfsi+0x9a>
     998:	50 95       	com	r21
     99a:	40 95       	com	r20
     99c:	30 95       	com	r19
     99e:	21 95       	neg	r18
     9a0:	3f 4f       	sbci	r19, 0xFF	; 255
     9a2:	4f 4f       	sbci	r20, 0xFF	; 255
     9a4:	5f 4f       	sbci	r21, 0xFF	; 255
     9a6:	0e c0       	rjmp	.+28     	; 0x9c4 <__fixsfsi+0x9a>
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	40 e0       	ldi	r20, 0x00	; 0
     9ae:	50 e0       	ldi	r21, 0x00	; 0
     9b0:	09 c0       	rjmp	.+18     	; 0x9c4 <__fixsfsi+0x9a>
     9b2:	2f ef       	ldi	r18, 0xFF	; 255
     9b4:	3f ef       	ldi	r19, 0xFF	; 255
     9b6:	4f ef       	ldi	r20, 0xFF	; 255
     9b8:	5f e7       	ldi	r21, 0x7F	; 127
     9ba:	04 c0       	rjmp	.+8      	; 0x9c4 <__fixsfsi+0x9a>
     9bc:	20 e0       	ldi	r18, 0x00	; 0
     9be:	30 e0       	ldi	r19, 0x00	; 0
     9c0:	40 e0       	ldi	r20, 0x00	; 0
     9c2:	50 e8       	ldi	r21, 0x80	; 128
     9c4:	b9 01       	movw	r22, r18
     9c6:	ca 01       	movw	r24, r20
     9c8:	2c 96       	adiw	r28, 0x0c	; 12
     9ca:	e2 e0       	ldi	r30, 0x02	; 2
     9cc:	0c 94 b9 10 	jmp	0x2172	; 0x2172 <__epilogue_restores__+0x20>

000009d0 <__clzsi2>:
     9d0:	ef 92       	push	r14
     9d2:	ff 92       	push	r15
     9d4:	0f 93       	push	r16
     9d6:	1f 93       	push	r17
     9d8:	7b 01       	movw	r14, r22
     9da:	8c 01       	movw	r16, r24
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	e8 16       	cp	r14, r24
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	f8 06       	cpc	r15, r24
     9e4:	81 e0       	ldi	r24, 0x01	; 1
     9e6:	08 07       	cpc	r16, r24
     9e8:	80 e0       	ldi	r24, 0x00	; 0
     9ea:	18 07       	cpc	r17, r24
     9ec:	88 f4       	brcc	.+34     	; 0xa10 <__clzsi2+0x40>
     9ee:	8f ef       	ldi	r24, 0xFF	; 255
     9f0:	e8 16       	cp	r14, r24
     9f2:	f1 04       	cpc	r15, r1
     9f4:	01 05       	cpc	r16, r1
     9f6:	11 05       	cpc	r17, r1
     9f8:	31 f0       	breq	.+12     	; 0xa06 <__clzsi2+0x36>
     9fa:	28 f0       	brcs	.+10     	; 0xa06 <__clzsi2+0x36>
     9fc:	88 e0       	ldi	r24, 0x08	; 8
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	a0 e0       	ldi	r26, 0x00	; 0
     a02:	b0 e0       	ldi	r27, 0x00	; 0
     a04:	17 c0       	rjmp	.+46     	; 0xa34 <__clzsi2+0x64>
     a06:	80 e0       	ldi	r24, 0x00	; 0
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	a0 e0       	ldi	r26, 0x00	; 0
     a0c:	b0 e0       	ldi	r27, 0x00	; 0
     a0e:	12 c0       	rjmp	.+36     	; 0xa34 <__clzsi2+0x64>
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	e8 16       	cp	r14, r24
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	f8 06       	cpc	r15, r24
     a18:	80 e0       	ldi	r24, 0x00	; 0
     a1a:	08 07       	cpc	r16, r24
     a1c:	81 e0       	ldi	r24, 0x01	; 1
     a1e:	18 07       	cpc	r17, r24
     a20:	28 f0       	brcs	.+10     	; 0xa2c <__clzsi2+0x5c>
     a22:	88 e1       	ldi	r24, 0x18	; 24
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	a0 e0       	ldi	r26, 0x00	; 0
     a28:	b0 e0       	ldi	r27, 0x00	; 0
     a2a:	04 c0       	rjmp	.+8      	; 0xa34 <__clzsi2+0x64>
     a2c:	80 e1       	ldi	r24, 0x10	; 16
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	a0 e0       	ldi	r26, 0x00	; 0
     a32:	b0 e0       	ldi	r27, 0x00	; 0
     a34:	20 e2       	ldi	r18, 0x20	; 32
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	40 e0       	ldi	r20, 0x00	; 0
     a3a:	50 e0       	ldi	r21, 0x00	; 0
     a3c:	28 1b       	sub	r18, r24
     a3e:	39 0b       	sbc	r19, r25
     a40:	4a 0b       	sbc	r20, r26
     a42:	5b 0b       	sbc	r21, r27
     a44:	04 c0       	rjmp	.+8      	; 0xa4e <__clzsi2+0x7e>
     a46:	16 95       	lsr	r17
     a48:	07 95       	ror	r16
     a4a:	f7 94       	ror	r15
     a4c:	e7 94       	ror	r14
     a4e:	8a 95       	dec	r24
     a50:	d2 f7       	brpl	.-12     	; 0xa46 <__clzsi2+0x76>
     a52:	f7 01       	movw	r30, r14
     a54:	e3 50       	subi	r30, 0x03	; 3
     a56:	ff 4f       	sbci	r31, 0xFF	; 255
     a58:	80 81       	ld	r24, Z
     a5a:	28 1b       	sub	r18, r24
     a5c:	31 09       	sbc	r19, r1
     a5e:	41 09       	sbc	r20, r1
     a60:	51 09       	sbc	r21, r1
     a62:	c9 01       	movw	r24, r18
     a64:	1f 91       	pop	r17
     a66:	0f 91       	pop	r16
     a68:	ff 90       	pop	r15
     a6a:	ef 90       	pop	r14
     a6c:	08 95       	ret

00000a6e <__pack_f>:
     a6e:	df 92       	push	r13
     a70:	ef 92       	push	r14
     a72:	ff 92       	push	r15
     a74:	0f 93       	push	r16
     a76:	1f 93       	push	r17
     a78:	fc 01       	movw	r30, r24
     a7a:	e4 80       	ldd	r14, Z+4	; 0x04
     a7c:	f5 80       	ldd	r15, Z+5	; 0x05
     a7e:	06 81       	ldd	r16, Z+6	; 0x06
     a80:	17 81       	ldd	r17, Z+7	; 0x07
     a82:	d1 80       	ldd	r13, Z+1	; 0x01
     a84:	80 81       	ld	r24, Z
     a86:	82 30       	cpi	r24, 0x02	; 2
     a88:	48 f4       	brcc	.+18     	; 0xa9c <__pack_f+0x2e>
     a8a:	80 e0       	ldi	r24, 0x00	; 0
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	a0 e1       	ldi	r26, 0x10	; 16
     a90:	b0 e0       	ldi	r27, 0x00	; 0
     a92:	e8 2a       	or	r14, r24
     a94:	f9 2a       	or	r15, r25
     a96:	0a 2b       	or	r16, r26
     a98:	1b 2b       	or	r17, r27
     a9a:	a5 c0       	rjmp	.+330    	; 0xbe6 <__pack_f+0x178>
     a9c:	84 30       	cpi	r24, 0x04	; 4
     a9e:	09 f4       	brne	.+2      	; 0xaa2 <__pack_f+0x34>
     aa0:	9f c0       	rjmp	.+318    	; 0xbe0 <__pack_f+0x172>
     aa2:	82 30       	cpi	r24, 0x02	; 2
     aa4:	21 f4       	brne	.+8      	; 0xaae <__pack_f+0x40>
     aa6:	ee 24       	eor	r14, r14
     aa8:	ff 24       	eor	r15, r15
     aaa:	87 01       	movw	r16, r14
     aac:	05 c0       	rjmp	.+10     	; 0xab8 <__pack_f+0x4a>
     aae:	e1 14       	cp	r14, r1
     ab0:	f1 04       	cpc	r15, r1
     ab2:	01 05       	cpc	r16, r1
     ab4:	11 05       	cpc	r17, r1
     ab6:	19 f4       	brne	.+6      	; 0xabe <__pack_f+0x50>
     ab8:	e0 e0       	ldi	r30, 0x00	; 0
     aba:	f0 e0       	ldi	r31, 0x00	; 0
     abc:	96 c0       	rjmp	.+300    	; 0xbea <__pack_f+0x17c>
     abe:	62 81       	ldd	r22, Z+2	; 0x02
     ac0:	73 81       	ldd	r23, Z+3	; 0x03
     ac2:	9f ef       	ldi	r25, 0xFF	; 255
     ac4:	62 38       	cpi	r22, 0x82	; 130
     ac6:	79 07       	cpc	r23, r25
     ac8:	0c f0       	brlt	.+2      	; 0xacc <__pack_f+0x5e>
     aca:	5b c0       	rjmp	.+182    	; 0xb82 <__pack_f+0x114>
     acc:	22 e8       	ldi	r18, 0x82	; 130
     ace:	3f ef       	ldi	r19, 0xFF	; 255
     ad0:	26 1b       	sub	r18, r22
     ad2:	37 0b       	sbc	r19, r23
     ad4:	2a 31       	cpi	r18, 0x1A	; 26
     ad6:	31 05       	cpc	r19, r1
     ad8:	2c f0       	brlt	.+10     	; 0xae4 <__pack_f+0x76>
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	40 e0       	ldi	r20, 0x00	; 0
     ae0:	50 e0       	ldi	r21, 0x00	; 0
     ae2:	2a c0       	rjmp	.+84     	; 0xb38 <__pack_f+0xca>
     ae4:	b8 01       	movw	r22, r16
     ae6:	a7 01       	movw	r20, r14
     ae8:	02 2e       	mov	r0, r18
     aea:	04 c0       	rjmp	.+8      	; 0xaf4 <__pack_f+0x86>
     aec:	76 95       	lsr	r23
     aee:	67 95       	ror	r22
     af0:	57 95       	ror	r21
     af2:	47 95       	ror	r20
     af4:	0a 94       	dec	r0
     af6:	d2 f7       	brpl	.-12     	; 0xaec <__pack_f+0x7e>
     af8:	81 e0       	ldi	r24, 0x01	; 1
     afa:	90 e0       	ldi	r25, 0x00	; 0
     afc:	a0 e0       	ldi	r26, 0x00	; 0
     afe:	b0 e0       	ldi	r27, 0x00	; 0
     b00:	04 c0       	rjmp	.+8      	; 0xb0a <__pack_f+0x9c>
     b02:	88 0f       	add	r24, r24
     b04:	99 1f       	adc	r25, r25
     b06:	aa 1f       	adc	r26, r26
     b08:	bb 1f       	adc	r27, r27
     b0a:	2a 95       	dec	r18
     b0c:	d2 f7       	brpl	.-12     	; 0xb02 <__pack_f+0x94>
     b0e:	01 97       	sbiw	r24, 0x01	; 1
     b10:	a1 09       	sbc	r26, r1
     b12:	b1 09       	sbc	r27, r1
     b14:	8e 21       	and	r24, r14
     b16:	9f 21       	and	r25, r15
     b18:	a0 23       	and	r26, r16
     b1a:	b1 23       	and	r27, r17
     b1c:	00 97       	sbiw	r24, 0x00	; 0
     b1e:	a1 05       	cpc	r26, r1
     b20:	b1 05       	cpc	r27, r1
     b22:	21 f0       	breq	.+8      	; 0xb2c <__pack_f+0xbe>
     b24:	81 e0       	ldi	r24, 0x01	; 1
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	a0 e0       	ldi	r26, 0x00	; 0
     b2a:	b0 e0       	ldi	r27, 0x00	; 0
     b2c:	9a 01       	movw	r18, r20
     b2e:	ab 01       	movw	r20, r22
     b30:	28 2b       	or	r18, r24
     b32:	39 2b       	or	r19, r25
     b34:	4a 2b       	or	r20, r26
     b36:	5b 2b       	or	r21, r27
     b38:	da 01       	movw	r26, r20
     b3a:	c9 01       	movw	r24, r18
     b3c:	8f 77       	andi	r24, 0x7F	; 127
     b3e:	90 70       	andi	r25, 0x00	; 0
     b40:	a0 70       	andi	r26, 0x00	; 0
     b42:	b0 70       	andi	r27, 0x00	; 0
     b44:	80 34       	cpi	r24, 0x40	; 64
     b46:	91 05       	cpc	r25, r1
     b48:	a1 05       	cpc	r26, r1
     b4a:	b1 05       	cpc	r27, r1
     b4c:	39 f4       	brne	.+14     	; 0xb5c <__pack_f+0xee>
     b4e:	27 ff       	sbrs	r18, 7
     b50:	09 c0       	rjmp	.+18     	; 0xb64 <__pack_f+0xf6>
     b52:	20 5c       	subi	r18, 0xC0	; 192
     b54:	3f 4f       	sbci	r19, 0xFF	; 255
     b56:	4f 4f       	sbci	r20, 0xFF	; 255
     b58:	5f 4f       	sbci	r21, 0xFF	; 255
     b5a:	04 c0       	rjmp	.+8      	; 0xb64 <__pack_f+0xf6>
     b5c:	21 5c       	subi	r18, 0xC1	; 193
     b5e:	3f 4f       	sbci	r19, 0xFF	; 255
     b60:	4f 4f       	sbci	r20, 0xFF	; 255
     b62:	5f 4f       	sbci	r21, 0xFF	; 255
     b64:	e0 e0       	ldi	r30, 0x00	; 0
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	20 30       	cpi	r18, 0x00	; 0
     b6a:	a0 e0       	ldi	r26, 0x00	; 0
     b6c:	3a 07       	cpc	r19, r26
     b6e:	a0 e0       	ldi	r26, 0x00	; 0
     b70:	4a 07       	cpc	r20, r26
     b72:	a0 e4       	ldi	r26, 0x40	; 64
     b74:	5a 07       	cpc	r21, r26
     b76:	10 f0       	brcs	.+4      	; 0xb7c <__pack_f+0x10e>
     b78:	e1 e0       	ldi	r30, 0x01	; 1
     b7a:	f0 e0       	ldi	r31, 0x00	; 0
     b7c:	79 01       	movw	r14, r18
     b7e:	8a 01       	movw	r16, r20
     b80:	27 c0       	rjmp	.+78     	; 0xbd0 <__pack_f+0x162>
     b82:	60 38       	cpi	r22, 0x80	; 128
     b84:	71 05       	cpc	r23, r1
     b86:	64 f5       	brge	.+88     	; 0xbe0 <__pack_f+0x172>
     b88:	fb 01       	movw	r30, r22
     b8a:	e1 58       	subi	r30, 0x81	; 129
     b8c:	ff 4f       	sbci	r31, 0xFF	; 255
     b8e:	d8 01       	movw	r26, r16
     b90:	c7 01       	movw	r24, r14
     b92:	8f 77       	andi	r24, 0x7F	; 127
     b94:	90 70       	andi	r25, 0x00	; 0
     b96:	a0 70       	andi	r26, 0x00	; 0
     b98:	b0 70       	andi	r27, 0x00	; 0
     b9a:	80 34       	cpi	r24, 0x40	; 64
     b9c:	91 05       	cpc	r25, r1
     b9e:	a1 05       	cpc	r26, r1
     ba0:	b1 05       	cpc	r27, r1
     ba2:	39 f4       	brne	.+14     	; 0xbb2 <__pack_f+0x144>
     ba4:	e7 fe       	sbrs	r14, 7
     ba6:	0d c0       	rjmp	.+26     	; 0xbc2 <__pack_f+0x154>
     ba8:	80 e4       	ldi	r24, 0x40	; 64
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	a0 e0       	ldi	r26, 0x00	; 0
     bae:	b0 e0       	ldi	r27, 0x00	; 0
     bb0:	04 c0       	rjmp	.+8      	; 0xbba <__pack_f+0x14c>
     bb2:	8f e3       	ldi	r24, 0x3F	; 63
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	a0 e0       	ldi	r26, 0x00	; 0
     bb8:	b0 e0       	ldi	r27, 0x00	; 0
     bba:	e8 0e       	add	r14, r24
     bbc:	f9 1e       	adc	r15, r25
     bbe:	0a 1f       	adc	r16, r26
     bc0:	1b 1f       	adc	r17, r27
     bc2:	17 ff       	sbrs	r17, 7
     bc4:	05 c0       	rjmp	.+10     	; 0xbd0 <__pack_f+0x162>
     bc6:	16 95       	lsr	r17
     bc8:	07 95       	ror	r16
     bca:	f7 94       	ror	r15
     bcc:	e7 94       	ror	r14
     bce:	31 96       	adiw	r30, 0x01	; 1
     bd0:	87 e0       	ldi	r24, 0x07	; 7
     bd2:	16 95       	lsr	r17
     bd4:	07 95       	ror	r16
     bd6:	f7 94       	ror	r15
     bd8:	e7 94       	ror	r14
     bda:	8a 95       	dec	r24
     bdc:	d1 f7       	brne	.-12     	; 0xbd2 <__pack_f+0x164>
     bde:	05 c0       	rjmp	.+10     	; 0xbea <__pack_f+0x17c>
     be0:	ee 24       	eor	r14, r14
     be2:	ff 24       	eor	r15, r15
     be4:	87 01       	movw	r16, r14
     be6:	ef ef       	ldi	r30, 0xFF	; 255
     be8:	f0 e0       	ldi	r31, 0x00	; 0
     bea:	6e 2f       	mov	r22, r30
     bec:	67 95       	ror	r22
     bee:	66 27       	eor	r22, r22
     bf0:	67 95       	ror	r22
     bf2:	90 2f       	mov	r25, r16
     bf4:	9f 77       	andi	r25, 0x7F	; 127
     bf6:	d7 94       	ror	r13
     bf8:	dd 24       	eor	r13, r13
     bfa:	d7 94       	ror	r13
     bfc:	8e 2f       	mov	r24, r30
     bfe:	86 95       	lsr	r24
     c00:	49 2f       	mov	r20, r25
     c02:	46 2b       	or	r20, r22
     c04:	58 2f       	mov	r21, r24
     c06:	5d 29       	or	r21, r13
     c08:	b7 01       	movw	r22, r14
     c0a:	ca 01       	movw	r24, r20
     c0c:	1f 91       	pop	r17
     c0e:	0f 91       	pop	r16
     c10:	ff 90       	pop	r15
     c12:	ef 90       	pop	r14
     c14:	df 90       	pop	r13
     c16:	08 95       	ret

00000c18 <__unpack_f>:
     c18:	fc 01       	movw	r30, r24
     c1a:	db 01       	movw	r26, r22
     c1c:	40 81       	ld	r20, Z
     c1e:	51 81       	ldd	r21, Z+1	; 0x01
     c20:	22 81       	ldd	r18, Z+2	; 0x02
     c22:	62 2f       	mov	r22, r18
     c24:	6f 77       	andi	r22, 0x7F	; 127
     c26:	70 e0       	ldi	r23, 0x00	; 0
     c28:	22 1f       	adc	r18, r18
     c2a:	22 27       	eor	r18, r18
     c2c:	22 1f       	adc	r18, r18
     c2e:	93 81       	ldd	r25, Z+3	; 0x03
     c30:	89 2f       	mov	r24, r25
     c32:	88 0f       	add	r24, r24
     c34:	82 2b       	or	r24, r18
     c36:	28 2f       	mov	r18, r24
     c38:	30 e0       	ldi	r19, 0x00	; 0
     c3a:	99 1f       	adc	r25, r25
     c3c:	99 27       	eor	r25, r25
     c3e:	99 1f       	adc	r25, r25
     c40:	11 96       	adiw	r26, 0x01	; 1
     c42:	9c 93       	st	X, r25
     c44:	11 97       	sbiw	r26, 0x01	; 1
     c46:	21 15       	cp	r18, r1
     c48:	31 05       	cpc	r19, r1
     c4a:	a9 f5       	brne	.+106    	; 0xcb6 <__unpack_f+0x9e>
     c4c:	41 15       	cp	r20, r1
     c4e:	51 05       	cpc	r21, r1
     c50:	61 05       	cpc	r22, r1
     c52:	71 05       	cpc	r23, r1
     c54:	11 f4       	brne	.+4      	; 0xc5a <__unpack_f+0x42>
     c56:	82 e0       	ldi	r24, 0x02	; 2
     c58:	37 c0       	rjmp	.+110    	; 0xcc8 <__unpack_f+0xb0>
     c5a:	82 e8       	ldi	r24, 0x82	; 130
     c5c:	9f ef       	ldi	r25, 0xFF	; 255
     c5e:	13 96       	adiw	r26, 0x03	; 3
     c60:	9c 93       	st	X, r25
     c62:	8e 93       	st	-X, r24
     c64:	12 97       	sbiw	r26, 0x02	; 2
     c66:	9a 01       	movw	r18, r20
     c68:	ab 01       	movw	r20, r22
     c6a:	67 e0       	ldi	r22, 0x07	; 7
     c6c:	22 0f       	add	r18, r18
     c6e:	33 1f       	adc	r19, r19
     c70:	44 1f       	adc	r20, r20
     c72:	55 1f       	adc	r21, r21
     c74:	6a 95       	dec	r22
     c76:	d1 f7       	brne	.-12     	; 0xc6c <__unpack_f+0x54>
     c78:	83 e0       	ldi	r24, 0x03	; 3
     c7a:	8c 93       	st	X, r24
     c7c:	0d c0       	rjmp	.+26     	; 0xc98 <__unpack_f+0x80>
     c7e:	22 0f       	add	r18, r18
     c80:	33 1f       	adc	r19, r19
     c82:	44 1f       	adc	r20, r20
     c84:	55 1f       	adc	r21, r21
     c86:	12 96       	adiw	r26, 0x02	; 2
     c88:	8d 91       	ld	r24, X+
     c8a:	9c 91       	ld	r25, X
     c8c:	13 97       	sbiw	r26, 0x03	; 3
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	13 96       	adiw	r26, 0x03	; 3
     c92:	9c 93       	st	X, r25
     c94:	8e 93       	st	-X, r24
     c96:	12 97       	sbiw	r26, 0x02	; 2
     c98:	20 30       	cpi	r18, 0x00	; 0
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	38 07       	cpc	r19, r24
     c9e:	80 e0       	ldi	r24, 0x00	; 0
     ca0:	48 07       	cpc	r20, r24
     ca2:	80 e4       	ldi	r24, 0x40	; 64
     ca4:	58 07       	cpc	r21, r24
     ca6:	58 f3       	brcs	.-42     	; 0xc7e <__unpack_f+0x66>
     ca8:	14 96       	adiw	r26, 0x04	; 4
     caa:	2d 93       	st	X+, r18
     cac:	3d 93       	st	X+, r19
     cae:	4d 93       	st	X+, r20
     cb0:	5c 93       	st	X, r21
     cb2:	17 97       	sbiw	r26, 0x07	; 7
     cb4:	08 95       	ret
     cb6:	2f 3f       	cpi	r18, 0xFF	; 255
     cb8:	31 05       	cpc	r19, r1
     cba:	79 f4       	brne	.+30     	; 0xcda <__unpack_f+0xc2>
     cbc:	41 15       	cp	r20, r1
     cbe:	51 05       	cpc	r21, r1
     cc0:	61 05       	cpc	r22, r1
     cc2:	71 05       	cpc	r23, r1
     cc4:	19 f4       	brne	.+6      	; 0xccc <__unpack_f+0xb4>
     cc6:	84 e0       	ldi	r24, 0x04	; 4
     cc8:	8c 93       	st	X, r24
     cca:	08 95       	ret
     ccc:	64 ff       	sbrs	r22, 4
     cce:	03 c0       	rjmp	.+6      	; 0xcd6 <__unpack_f+0xbe>
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	8c 93       	st	X, r24
     cd4:	12 c0       	rjmp	.+36     	; 0xcfa <__unpack_f+0xe2>
     cd6:	1c 92       	st	X, r1
     cd8:	10 c0       	rjmp	.+32     	; 0xcfa <__unpack_f+0xe2>
     cda:	2f 57       	subi	r18, 0x7F	; 127
     cdc:	30 40       	sbci	r19, 0x00	; 0
     cde:	13 96       	adiw	r26, 0x03	; 3
     ce0:	3c 93       	st	X, r19
     ce2:	2e 93       	st	-X, r18
     ce4:	12 97       	sbiw	r26, 0x02	; 2
     ce6:	83 e0       	ldi	r24, 0x03	; 3
     ce8:	8c 93       	st	X, r24
     cea:	87 e0       	ldi	r24, 0x07	; 7
     cec:	44 0f       	add	r20, r20
     cee:	55 1f       	adc	r21, r21
     cf0:	66 1f       	adc	r22, r22
     cf2:	77 1f       	adc	r23, r23
     cf4:	8a 95       	dec	r24
     cf6:	d1 f7       	brne	.-12     	; 0xcec <__unpack_f+0xd4>
     cf8:	70 64       	ori	r23, 0x40	; 64
     cfa:	14 96       	adiw	r26, 0x04	; 4
     cfc:	4d 93       	st	X+, r20
     cfe:	5d 93       	st	X+, r21
     d00:	6d 93       	st	X+, r22
     d02:	7c 93       	st	X, r23
     d04:	17 97       	sbiw	r26, 0x07	; 7
     d06:	08 95       	ret

00000d08 <__fpcmp_parts_f>:
     d08:	1f 93       	push	r17
     d0a:	dc 01       	movw	r26, r24
     d0c:	fb 01       	movw	r30, r22
     d0e:	9c 91       	ld	r25, X
     d10:	92 30       	cpi	r25, 0x02	; 2
     d12:	08 f4       	brcc	.+2      	; 0xd16 <__fpcmp_parts_f+0xe>
     d14:	47 c0       	rjmp	.+142    	; 0xda4 <__fpcmp_parts_f+0x9c>
     d16:	80 81       	ld	r24, Z
     d18:	82 30       	cpi	r24, 0x02	; 2
     d1a:	08 f4       	brcc	.+2      	; 0xd1e <__fpcmp_parts_f+0x16>
     d1c:	43 c0       	rjmp	.+134    	; 0xda4 <__fpcmp_parts_f+0x9c>
     d1e:	94 30       	cpi	r25, 0x04	; 4
     d20:	51 f4       	brne	.+20     	; 0xd36 <__fpcmp_parts_f+0x2e>
     d22:	11 96       	adiw	r26, 0x01	; 1
     d24:	1c 91       	ld	r17, X
     d26:	84 30       	cpi	r24, 0x04	; 4
     d28:	99 f5       	brne	.+102    	; 0xd90 <__fpcmp_parts_f+0x88>
     d2a:	81 81       	ldd	r24, Z+1	; 0x01
     d2c:	68 2f       	mov	r22, r24
     d2e:	70 e0       	ldi	r23, 0x00	; 0
     d30:	61 1b       	sub	r22, r17
     d32:	71 09       	sbc	r23, r1
     d34:	3f c0       	rjmp	.+126    	; 0xdb4 <__fpcmp_parts_f+0xac>
     d36:	84 30       	cpi	r24, 0x04	; 4
     d38:	21 f0       	breq	.+8      	; 0xd42 <__fpcmp_parts_f+0x3a>
     d3a:	92 30       	cpi	r25, 0x02	; 2
     d3c:	31 f4       	brne	.+12     	; 0xd4a <__fpcmp_parts_f+0x42>
     d3e:	82 30       	cpi	r24, 0x02	; 2
     d40:	b9 f1       	breq	.+110    	; 0xdb0 <__fpcmp_parts_f+0xa8>
     d42:	81 81       	ldd	r24, Z+1	; 0x01
     d44:	88 23       	and	r24, r24
     d46:	89 f1       	breq	.+98     	; 0xdaa <__fpcmp_parts_f+0xa2>
     d48:	2d c0       	rjmp	.+90     	; 0xda4 <__fpcmp_parts_f+0x9c>
     d4a:	11 96       	adiw	r26, 0x01	; 1
     d4c:	1c 91       	ld	r17, X
     d4e:	11 97       	sbiw	r26, 0x01	; 1
     d50:	82 30       	cpi	r24, 0x02	; 2
     d52:	f1 f0       	breq	.+60     	; 0xd90 <__fpcmp_parts_f+0x88>
     d54:	81 81       	ldd	r24, Z+1	; 0x01
     d56:	18 17       	cp	r17, r24
     d58:	d9 f4       	brne	.+54     	; 0xd90 <__fpcmp_parts_f+0x88>
     d5a:	12 96       	adiw	r26, 0x02	; 2
     d5c:	2d 91       	ld	r18, X+
     d5e:	3c 91       	ld	r19, X
     d60:	13 97       	sbiw	r26, 0x03	; 3
     d62:	82 81       	ldd	r24, Z+2	; 0x02
     d64:	93 81       	ldd	r25, Z+3	; 0x03
     d66:	82 17       	cp	r24, r18
     d68:	93 07       	cpc	r25, r19
     d6a:	94 f0       	brlt	.+36     	; 0xd90 <__fpcmp_parts_f+0x88>
     d6c:	28 17       	cp	r18, r24
     d6e:	39 07       	cpc	r19, r25
     d70:	bc f0       	brlt	.+46     	; 0xda0 <__fpcmp_parts_f+0x98>
     d72:	14 96       	adiw	r26, 0x04	; 4
     d74:	8d 91       	ld	r24, X+
     d76:	9d 91       	ld	r25, X+
     d78:	0d 90       	ld	r0, X+
     d7a:	bc 91       	ld	r27, X
     d7c:	a0 2d       	mov	r26, r0
     d7e:	24 81       	ldd	r18, Z+4	; 0x04
     d80:	35 81       	ldd	r19, Z+5	; 0x05
     d82:	46 81       	ldd	r20, Z+6	; 0x06
     d84:	57 81       	ldd	r21, Z+7	; 0x07
     d86:	28 17       	cp	r18, r24
     d88:	39 07       	cpc	r19, r25
     d8a:	4a 07       	cpc	r20, r26
     d8c:	5b 07       	cpc	r21, r27
     d8e:	18 f4       	brcc	.+6      	; 0xd96 <__fpcmp_parts_f+0x8e>
     d90:	11 23       	and	r17, r17
     d92:	41 f0       	breq	.+16     	; 0xda4 <__fpcmp_parts_f+0x9c>
     d94:	0a c0       	rjmp	.+20     	; 0xdaa <__fpcmp_parts_f+0xa2>
     d96:	82 17       	cp	r24, r18
     d98:	93 07       	cpc	r25, r19
     d9a:	a4 07       	cpc	r26, r20
     d9c:	b5 07       	cpc	r27, r21
     d9e:	40 f4       	brcc	.+16     	; 0xdb0 <__fpcmp_parts_f+0xa8>
     da0:	11 23       	and	r17, r17
     da2:	19 f0       	breq	.+6      	; 0xdaa <__fpcmp_parts_f+0xa2>
     da4:	61 e0       	ldi	r22, 0x01	; 1
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	05 c0       	rjmp	.+10     	; 0xdb4 <__fpcmp_parts_f+0xac>
     daa:	6f ef       	ldi	r22, 0xFF	; 255
     dac:	7f ef       	ldi	r23, 0xFF	; 255
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <__fpcmp_parts_f+0xac>
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	70 e0       	ldi	r23, 0x00	; 0
     db4:	cb 01       	movw	r24, r22
     db6:	1f 91       	pop	r17
     db8:	08 95       	ret

00000dba <_ZN11LCD_HD447809outNibbleEh>:
//-------------------------------------------------------------------------------------------------
//
// Funkcja wystawiaj�ca p�bajt na magistral� danych
//
//-------------------------------------------------------------------------------------------------
void LCD_HD44780::outNibble(unsigned char nibbleToWrite) {
     dba:	df 93       	push	r29
     dbc:	cf 93       	push	r28
     dbe:	0f 92       	push	r0
     dc0:	cd b7       	in	r28, 0x3d	; 61
     dc2:	de b7       	in	r29, 0x3e	; 62
     dc4:	89 83       	std	Y+1, r24	; 0x01
	if (nibbleToWrite & 0x01)
     dc6:	89 81       	ldd	r24, Y+1	; 0x01
     dc8:	88 2f       	mov	r24, r24
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	81 70       	andi	r24, 0x01	; 1
     dce:	90 70       	andi	r25, 0x00	; 0
     dd0:	88 23       	and	r24, r24
     dd2:	41 f0       	breq	.+16     	; 0xde4 <_ZN11LCD_HD447809outNibbleEh+0x2a>
		LCD_DB4_PORT |= LCD_DB4;
     dd4:	a8 e3       	ldi	r26, 0x38	; 56
     dd6:	b0 e0       	ldi	r27, 0x00	; 0
     dd8:	e8 e3       	ldi	r30, 0x38	; 56
     dda:	f0 e0       	ldi	r31, 0x00	; 0
     ddc:	80 81       	ld	r24, Z
     dde:	84 60       	ori	r24, 0x04	; 4
     de0:	8c 93       	st	X, r24
     de2:	07 c0       	rjmp	.+14     	; 0xdf2 <_ZN11LCD_HD447809outNibbleEh+0x38>
	else
		LCD_DB4_PORT &= ~LCD_DB4;
     de4:	a8 e3       	ldi	r26, 0x38	; 56
     de6:	b0 e0       	ldi	r27, 0x00	; 0
     de8:	e8 e3       	ldi	r30, 0x38	; 56
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	80 81       	ld	r24, Z
     dee:	8b 7f       	andi	r24, 0xFB	; 251
     df0:	8c 93       	st	X, r24

	if (nibbleToWrite & 0x02)
     df2:	89 81       	ldd	r24, Y+1	; 0x01
     df4:	88 2f       	mov	r24, r24
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	82 70       	andi	r24, 0x02	; 2
     dfa:	90 70       	andi	r25, 0x00	; 0
     dfc:	00 97       	sbiw	r24, 0x00	; 0
     dfe:	41 f0       	breq	.+16     	; 0xe10 <_ZN11LCD_HD447809outNibbleEh+0x56>
		LCD_DB5_PORT |= LCD_DB5;
     e00:	a8 e3       	ldi	r26, 0x38	; 56
     e02:	b0 e0       	ldi	r27, 0x00	; 0
     e04:	e8 e3       	ldi	r30, 0x38	; 56
     e06:	f0 e0       	ldi	r31, 0x00	; 0
     e08:	80 81       	ld	r24, Z
     e0a:	88 60       	ori	r24, 0x08	; 8
     e0c:	8c 93       	st	X, r24
     e0e:	07 c0       	rjmp	.+14     	; 0xe1e <_ZN11LCD_HD447809outNibbleEh+0x64>
	else
		LCD_DB5_PORT &= ~LCD_DB5;
     e10:	a8 e3       	ldi	r26, 0x38	; 56
     e12:	b0 e0       	ldi	r27, 0x00	; 0
     e14:	e8 e3       	ldi	r30, 0x38	; 56
     e16:	f0 e0       	ldi	r31, 0x00	; 0
     e18:	80 81       	ld	r24, Z
     e1a:	87 7f       	andi	r24, 0xF7	; 247
     e1c:	8c 93       	st	X, r24

	if (nibbleToWrite & 0x04)
     e1e:	89 81       	ldd	r24, Y+1	; 0x01
     e20:	88 2f       	mov	r24, r24
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	84 70       	andi	r24, 0x04	; 4
     e26:	90 70       	andi	r25, 0x00	; 0
     e28:	00 97       	sbiw	r24, 0x00	; 0
     e2a:	41 f0       	breq	.+16     	; 0xe3c <_ZN11LCD_HD447809outNibbleEh+0x82>
		LCD_DB6_PORT |= LCD_DB6;
     e2c:	a8 e3       	ldi	r26, 0x38	; 56
     e2e:	b0 e0       	ldi	r27, 0x00	; 0
     e30:	e8 e3       	ldi	r30, 0x38	; 56
     e32:	f0 e0       	ldi	r31, 0x00	; 0
     e34:	80 81       	ld	r24, Z
     e36:	80 61       	ori	r24, 0x10	; 16
     e38:	8c 93       	st	X, r24
     e3a:	07 c0       	rjmp	.+14     	; 0xe4a <_ZN11LCD_HD447809outNibbleEh+0x90>
	else
		LCD_DB6_PORT &= ~LCD_DB6;
     e3c:	a8 e3       	ldi	r26, 0x38	; 56
     e3e:	b0 e0       	ldi	r27, 0x00	; 0
     e40:	e8 e3       	ldi	r30, 0x38	; 56
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	80 81       	ld	r24, Z
     e46:	8f 7e       	andi	r24, 0xEF	; 239
     e48:	8c 93       	st	X, r24

	if (nibbleToWrite & 0x08)
     e4a:	89 81       	ldd	r24, Y+1	; 0x01
     e4c:	88 2f       	mov	r24, r24
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	88 70       	andi	r24, 0x08	; 8
     e52:	90 70       	andi	r25, 0x00	; 0
     e54:	00 97       	sbiw	r24, 0x00	; 0
     e56:	41 f0       	breq	.+16     	; 0xe68 <_ZN11LCD_HD447809outNibbleEh+0xae>
		LCD_DB7_PORT |= LCD_DB7;
     e58:	a8 e3       	ldi	r26, 0x38	; 56
     e5a:	b0 e0       	ldi	r27, 0x00	; 0
     e5c:	e8 e3       	ldi	r30, 0x38	; 56
     e5e:	f0 e0       	ldi	r31, 0x00	; 0
     e60:	80 81       	ld	r24, Z
     e62:	80 62       	ori	r24, 0x20	; 32
     e64:	8c 93       	st	X, r24
     e66:	07 c0       	rjmp	.+14     	; 0xe76 <_ZN11LCD_HD447809outNibbleEh+0xbc>
	else
		LCD_DB7_PORT &= ~LCD_DB7;
     e68:	a8 e3       	ldi	r26, 0x38	; 56
     e6a:	b0 e0       	ldi	r27, 0x00	; 0
     e6c:	e8 e3       	ldi	r30, 0x38	; 56
     e6e:	f0 e0       	ldi	r31, 0x00	; 0
     e70:	80 81       	ld	r24, Z
     e72:	8f 7d       	andi	r24, 0xDF	; 223
     e74:	8c 93       	st	X, r24
}
     e76:	0f 90       	pop	r0
     e78:	cf 91       	pop	r28
     e7a:	df 91       	pop	r29
     e7c:	08 95       	ret

00000e7e <_ZN11LCD_HD447805writeEh>:
//-------------------------------------------------------------------------------------------------
//
// Funkcja zapisu bajtu do wy�wietacza (bez rozr�nienia instrukcja/dane).
//
//-------------------------------------------------------------------------------------------------
void LCD_HD44780::write(unsigned char dataToWrite) {
     e7e:	df 93       	push	r29
     e80:	cf 93       	push	r28
     e82:	cd b7       	in	r28, 0x3d	; 61
     e84:	de b7       	in	r29, 0x3e	; 62
     e86:	69 97       	sbiw	r28, 0x19	; 25
     e88:	0f b6       	in	r0, 0x3f	; 63
     e8a:	f8 94       	cli
     e8c:	de bf       	out	0x3e, r29	; 62
     e8e:	0f be       	out	0x3f, r0	; 63
     e90:	cd bf       	out	0x3d, r28	; 61
     e92:	89 8f       	std	Y+25, r24	; 0x19
	LCD_E_PORT |= LCD_E;
     e94:	a8 e3       	ldi	r26, 0x38	; 56
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	e8 e3       	ldi	r30, 0x38	; 56
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	80 81       	ld	r24, Z
     e9e:	82 60       	ori	r24, 0x02	; 2
     ea0:	8c 93       	st	X, r24
	LCD_HD44780::outNibble(dataToWrite >> 4);
     ea2:	89 8d       	ldd	r24, Y+25	; 0x19
     ea4:	88 2f       	mov	r24, r24
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	95 95       	asr	r25
     eaa:	87 95       	ror	r24
     eac:	95 95       	asr	r25
     eae:	87 95       	ror	r24
     eb0:	95 95       	asr	r25
     eb2:	87 95       	ror	r24
     eb4:	95 95       	asr	r25
     eb6:	87 95       	ror	r24
     eb8:	80 df       	rcall	.-256    	; 0xdba <_ZN11LCD_HD447809outNibbleEh>
     eba:	a8 e3       	ldi	r26, 0x38	; 56
	LCD_E_PORT &= ~LCD_E;
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	e8 e3       	ldi	r30, 0x38	; 56
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	80 81       	ld	r24, Z
     ec4:	8d 7f       	andi	r24, 0xFD	; 253
     ec6:	8c 93       	st	X, r24
     ec8:	a8 e3       	ldi	r26, 0x38	; 56
	LCD_E_PORT |= LCD_E;
     eca:	b0 e0       	ldi	r27, 0x00	; 0
     ecc:	e8 e3       	ldi	r30, 0x38	; 56
     ece:	f0 e0       	ldi	r31, 0x00	; 0
     ed0:	80 81       	ld	r24, Z
     ed2:	82 60       	ori	r24, 0x02	; 2
     ed4:	8c 93       	st	X, r24
     ed6:	89 8d       	ldd	r24, Y+25	; 0x19
	LCD_HD44780::outNibble(dataToWrite);
     ed8:	70 df       	rcall	.-288    	; 0xdba <_ZN11LCD_HD447809outNibbleEh>
     eda:	a8 e3       	ldi	r26, 0x38	; 56
     edc:	b0 e0       	ldi	r27, 0x00	; 0
	LCD_E_PORT &= ~LCD_E;
     ede:	e8 e3       	ldi	r30, 0x38	; 56
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	80 81       	ld	r24, Z
     ee4:	8d 7f       	andi	r24, 0xFD	; 253
     ee6:	8c 93       	st	X, r24
     ee8:	80 e0       	ldi	r24, 0x00	; 0
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	a8 e4       	ldi	r26, 0x48	; 72
     eee:	b2 e4       	ldi	r27, 0x42	; 66
     ef0:	8d 8b       	std	Y+21, r24	; 0x15
     ef2:	9e 8b       	std	Y+22, r25	; 0x16
     ef4:	af 8b       	std	Y+23, r26	; 0x17
     ef6:	b8 8f       	std	Y+24, r27	; 0x18
     ef8:	6d 89       	ldd	r22, Y+21	; 0x15
     efa:	7e 89       	ldd	r23, Y+22	; 0x16
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     efc:	8f 89       	ldd	r24, Y+23	; 0x17
     efe:	98 8d       	ldd	r25, Y+24	; 0x18
     f00:	2b ea       	ldi	r18, 0xAB	; 171
     f02:	3a ea       	ldi	r19, 0xAA	; 170
     f04:	4a e2       	ldi	r20, 0x2A	; 42
     f06:	50 e4       	ldi	r21, 0x40	; 64
     f08:	8d da       	rcall	.-2790   	; 0x424 <__mulsf3>
     f0a:	dc 01       	movw	r26, r24
     f0c:	cb 01       	movw	r24, r22
     f0e:	89 8b       	std	Y+17, r24	; 0x11
     f10:	9a 8b       	std	Y+18, r25	; 0x12
     f12:	ab 8b       	std	Y+19, r26	; 0x13
     f14:	bc 8b       	std	Y+20, r27	; 0x14
     f16:	69 89       	ldd	r22, Y+17	; 0x11
     f18:	7a 89       	ldd	r23, Y+18	; 0x12
     f1a:	8b 89       	ldd	r24, Y+19	; 0x13
	if (__tmp < 1.0)
     f1c:	9c 89       	ldd	r25, Y+20	; 0x14
     f1e:	20 e0       	ldi	r18, 0x00	; 0
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	40 e8       	ldi	r20, 0x80	; 128
     f24:	5f e3       	ldi	r21, 0x3F	; 63
     f26:	78 dc       	rcall	.-1808   	; 0x818 <__ltsf2>
     f28:	88 23       	and	r24, r24
     f2a:	1c f4       	brge	.+6      	; 0xf32 <_ZN11LCD_HD447805writeEh+0xb4>
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	88 8b       	std	Y+16, r24	; 0x10
     f30:	88 c0       	rjmp	.+272    	; 0x1042 <_ZN11LCD_HD447805writeEh+0x1c4>
     f32:	69 89       	ldd	r22, Y+17	; 0x11
		__ticks = 1;
     f34:	7a 89       	ldd	r23, Y+18	; 0x12
     f36:	8b 89       	ldd	r24, Y+19	; 0x13
     f38:	9c 89       	ldd	r25, Y+20	; 0x14
	else if (__tmp > 255)
     f3a:	20 e0       	ldi	r18, 0x00	; 0
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	4f e7       	ldi	r20, 0x7F	; 127
     f40:	53 e4       	ldi	r21, 0x43	; 67
     f42:	10 dc       	rcall	.-2016   	; 0x764 <__gtsf2>
     f44:	18 16       	cp	r1, r24
     f46:	0c f0       	brlt	.+2      	; 0xf4a <_ZN11LCD_HD447805writeEh+0xcc>
     f48:	74 c0       	rjmp	.+232    	; 0x1032 <_ZN11LCD_HD447805writeEh+0x1b4>
     f4a:	6d 89       	ldd	r22, Y+21	; 0x15
     f4c:	7e 89       	ldd	r23, Y+22	; 0x16
     f4e:	8f 89       	ldd	r24, Y+23	; 0x17
     f50:	98 8d       	ldd	r25, Y+24	; 0x18
     f52:	20 e0       	ldi	r18, 0x00	; 0
	{
		_delay_ms(__us / 1000.0);
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	4a e7       	ldi	r20, 0x7A	; 122
     f58:	54 e4       	ldi	r21, 0x44	; 68
     f5a:	5b db       	rcall	.-2378   	; 0x612 <__divsf3>
     f5c:	dc 01       	movw	r26, r24
     f5e:	cb 01       	movw	r24, r22
     f60:	8c 87       	std	Y+12, r24	; 0x0c
     f62:	9d 87       	std	Y+13, r25	; 0x0d
     f64:	ae 87       	std	Y+14, r26	; 0x0e
     f66:	bf 87       	std	Y+15, r27	; 0x0f
     f68:	6c 85       	ldd	r22, Y+12	; 0x0c
     f6a:	7d 85       	ldd	r23, Y+13	; 0x0d
     f6c:	8e 85       	ldd	r24, Y+14	; 0x0e
     f6e:	9f 85       	ldd	r25, Y+15	; 0x0f
     f70:	20 e0       	ldi	r18, 0x00	; 0
     f72:	30 e0       	ldi	r19, 0x00	; 0
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f74:	4a ef       	ldi	r20, 0xFA	; 250
     f76:	54 e4       	ldi	r21, 0x44	; 68
     f78:	55 da       	rcall	.-2902   	; 0x424 <__mulsf3>
     f7a:	dc 01       	movw	r26, r24
     f7c:	cb 01       	movw	r24, r22
     f7e:	88 87       	std	Y+8, r24	; 0x08
     f80:	99 87       	std	Y+9, r25	; 0x09
     f82:	aa 87       	std	Y+10, r26	; 0x0a
     f84:	bb 87       	std	Y+11, r27	; 0x0b
     f86:	68 85       	ldd	r22, Y+8	; 0x08
     f88:	79 85       	ldd	r23, Y+9	; 0x09
     f8a:	8a 85       	ldd	r24, Y+10	; 0x0a
     f8c:	9b 85       	ldd	r25, Y+11	; 0x0b
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	40 e8       	ldi	r20, 0x80	; 128
	if (__tmp < 1.0)
     f94:	5f e3       	ldi	r21, 0x3F	; 63
     f96:	40 dc       	rcall	.-1920   	; 0x818 <__ltsf2>
     f98:	88 23       	and	r24, r24
     f9a:	2c f4       	brge	.+10     	; 0xfa6 <_ZN11LCD_HD447805writeEh+0x128>
     f9c:	81 e0       	ldi	r24, 0x01	; 1
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	9f 83       	std	Y+7, r25	; 0x07
     fa2:	8e 83       	std	Y+6, r24	; 0x06
     fa4:	3b c0       	rjmp	.+118    	; 0x101c <_ZN11LCD_HD447805writeEh+0x19e>
     fa6:	68 85       	ldd	r22, Y+8	; 0x08
     fa8:	79 85       	ldd	r23, Y+9	; 0x09
     faa:	8a 85       	ldd	r24, Y+10	; 0x0a
		__ticks = 1;
     fac:	9b 85       	ldd	r25, Y+11	; 0x0b
     fae:	20 e0       	ldi	r18, 0x00	; 0
     fb0:	3f ef       	ldi	r19, 0xFF	; 255
     fb2:	4f e7       	ldi	r20, 0x7F	; 127
     fb4:	57 e4       	ldi	r21, 0x47	; 71
	else if (__tmp > 65535)
     fb6:	d6 db       	rcall	.-2132   	; 0x764 <__gtsf2>
     fb8:	18 16       	cp	r1, r24
     fba:	3c f5       	brge	.+78     	; 0x100a <_ZN11LCD_HD447805writeEh+0x18c>
     fbc:	6c 85       	ldd	r22, Y+12	; 0x0c
     fbe:	7d 85       	ldd	r23, Y+13	; 0x0d
     fc0:	8e 85       	ldd	r24, Y+14	; 0x0e
     fc2:	9f 85       	ldd	r25, Y+15	; 0x0f
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	40 e2       	ldi	r20, 0x20	; 32
     fca:	51 e4       	ldi	r21, 0x41	; 65
     fcc:	2b da       	rcall	.-2986   	; 0x424 <__mulsf3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fce:	dc 01       	movw	r26, r24
     fd0:	cb 01       	movw	r24, r22
     fd2:	bc 01       	movw	r22, r24
     fd4:	cd 01       	movw	r24, r26
     fd6:	5c d8       	rcall	.-3912   	; 0x90 <__fixunssfsi>
     fd8:	dc 01       	movw	r26, r24
     fda:	cb 01       	movw	r24, r22
     fdc:	9f 83       	std	Y+7, r25	; 0x07
     fde:	8e 83       	std	Y+6, r24	; 0x06
     fe0:	0f c0       	rjmp	.+30     	; 0x1000 <_ZN11LCD_HD447805writeEh+0x182>
     fe2:	88 ec       	ldi	r24, 0xC8	; 200
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	9d 83       	std	Y+5, r25	; 0x05
     fe8:	8c 83       	std	Y+4, r24	; 0x04
     fea:	8c 81       	ldd	r24, Y+4	; 0x04
     fec:	9d 81       	ldd	r25, Y+5	; 0x05
     fee:	01 97       	sbiw	r24, 0x01	; 1
     ff0:	f1 f7       	brne	.-4      	; 0xfee <_ZN11LCD_HD447805writeEh+0x170>
     ff2:	9d 83       	std	Y+5, r25	; 0x05
     ff4:	8c 83       	std	Y+4, r24	; 0x04
     ff6:	8e 81       	ldd	r24, Y+6	; 0x06
     ff8:	9f 81       	ldd	r25, Y+7	; 0x07
     ffa:	01 97       	sbiw	r24, 0x01	; 1
     ffc:	9f 83       	std	Y+7, r25	; 0x07
     ffe:	8e 83       	std	Y+6, r24	; 0x06
    1000:	8e 81       	ldd	r24, Y+6	; 0x06
    1002:	9f 81       	ldd	r25, Y+7	; 0x07
    1004:	00 97       	sbiw	r24, 0x00	; 0
    1006:	69 f7       	brne	.-38     	; 0xfe2 <_ZN11LCD_HD447805writeEh+0x164>
    1008:	22 c0       	rjmp	.+68     	; 0x104e <_ZN11LCD_HD447805writeEh+0x1d0>
    100a:	68 85       	ldd	r22, Y+8	; 0x08
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    100c:	79 85       	ldd	r23, Y+9	; 0x09
    100e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1010:	9b 85       	ldd	r25, Y+11	; 0x0b
    1012:	3e d8       	rcall	.-3972   	; 0x90 <__fixunssfsi>
    1014:	dc 01       	movw	r26, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1016:	cb 01       	movw	r24, r22
    1018:	9f 83       	std	Y+7, r25	; 0x07
    101a:	8e 83       	std	Y+6, r24	; 0x06
    101c:	8e 81       	ldd	r24, Y+6	; 0x06
    101e:	9f 81       	ldd	r25, Y+7	; 0x07
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1020:	9b 83       	std	Y+3, r25	; 0x03
    1022:	8a 83       	std	Y+2, r24	; 0x02
    1024:	8a 81       	ldd	r24, Y+2	; 0x02
    1026:	9b 81       	ldd	r25, Y+3	; 0x03
    1028:	01 97       	sbiw	r24, 0x01	; 1
    102a:	f1 f7       	brne	.-4      	; 0x1028 <_ZN11LCD_HD447805writeEh+0x1aa>
    102c:	9b 83       	std	Y+3, r25	; 0x03
    102e:	8a 83       	std	Y+2, r24	; 0x02
    1030:	0e c0       	rjmp	.+28     	; 0x104e <_ZN11LCD_HD447805writeEh+0x1d0>
    1032:	69 89       	ldd	r22, Y+17	; 0x11
    1034:	7a 89       	ldd	r23, Y+18	; 0x12
    1036:	8b 89       	ldd	r24, Y+19	; 0x13
    1038:	9c 89       	ldd	r25, Y+20	; 0x14
    103a:	2a d8       	rcall	.-4012   	; 0x90 <__fixunssfsi>
    103c:	dc 01       	movw	r26, r24
    103e:	cb 01       	movw	r24, r22
    1040:	88 8b       	std	Y+16, r24	; 0x10
    1042:	88 89       	ldd	r24, Y+16	; 0x10
    1044:	89 83       	std	Y+1, r24	; 0x01
    1046:	89 81       	ldd	r24, Y+1	; 0x01
    1048:	8a 95       	dec	r24
    104a:	f1 f7       	brne	.-4      	; 0x1048 <_ZN11LCD_HD447805writeEh+0x1ca>
    104c:	89 83       	std	Y+1, r24	; 0x01
    104e:	69 96       	adiw	r28, 0x19	; 25
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	f8 94       	cli
    1054:	de bf       	out	0x3e, r29	; 62
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	cd bf       	out	0x3d, r28	; 61
    105a:	cf 91       	pop	r28
    105c:	df 91       	pop	r29
    105e:	08 95       	ret

00001060 <_ZN11LCD_HD4478012writeCommandEh>:
//-------------------------------------------------------------------------------------------------
//
// Funkcja zapisu rozkazu do wy�wietlacza
//
//-------------------------------------------------------------------------------------------------
void LCD_HD44780::writeCommand(unsigned char commandToWrite) {
    1060:	df 93       	push	r29
    1062:	cf 93       	push	r28
    1064:	0f 92       	push	r0
    1066:	cd b7       	in	r28, 0x3d	; 61
    1068:	de b7       	in	r29, 0x3e	; 62
    106a:	89 83       	std	Y+1, r24	; 0x01
	LCD_RS_PORT &= ~LCD_RS;
    106c:	a8 e3       	ldi	r26, 0x38	; 56
    106e:	b0 e0       	ldi	r27, 0x00	; 0
    1070:	e8 e3       	ldi	r30, 0x38	; 56
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	80 81       	ld	r24, Z
    1076:	8e 7f       	andi	r24, 0xFE	; 254
    1078:	8c 93       	st	X, r24
	LCD_HD44780::write(commandToWrite);
    107a:	89 81       	ldd	r24, Y+1	; 0x01
    107c:	00 df       	rcall	.-512    	; 0xe7e <_ZN11LCD_HD447805writeEh>
    107e:	0f 90       	pop	r0
}
    1080:	cf 91       	pop	r28
    1082:	df 91       	pop	r29
    1084:	08 95       	ret

00001086 <_ZN11LCD_HD447804goToEhh>:
//-------------------------------------------------------------------------------------------------
//
// Funkcja ustawienia wsp�rz�dnych ekranowych
//
//-------------------------------------------------------------------------------------------------
void LCD_HD44780::goTo(unsigned char x, unsigned char y) {
    1086:	df 93       	push	r29
    1088:	cf 93       	push	r28
    108a:	00 d0       	rcall	.+0      	; 0x108c <_ZN11LCD_HD447804goToEhh+0x6>
    108c:	cd b7       	in	r28, 0x3d	; 61
    108e:	de b7       	in	r29, 0x3e	; 62
    1090:	89 83       	std	Y+1, r24	; 0x01
    1092:	6a 83       	std	Y+2, r22	; 0x02
	LCD_HD44780::writeCommand(HD44780_DDRAM_SET | (x + (0x40 * y)));
    1094:	8a 81       	ldd	r24, Y+2	; 0x02
    1096:	88 2f       	mov	r24, r24
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	00 24       	eor	r0, r0
    109c:	96 95       	lsr	r25
    109e:	87 95       	ror	r24
    10a0:	07 94       	ror	r0
    10a2:	96 95       	lsr	r25
    10a4:	87 95       	ror	r24
    10a6:	07 94       	ror	r0
    10a8:	98 2f       	mov	r25, r24
    10aa:	80 2d       	mov	r24, r0
    10ac:	98 2f       	mov	r25, r24
    10ae:	89 81       	ldd	r24, Y+1	; 0x01
    10b0:	89 0f       	add	r24, r25
    10b2:	80 68       	ori	r24, 0x80	; 128
    10b4:	d5 df       	rcall	.-86     	; 0x1060 <_ZN11LCD_HD4478012writeCommandEh>
    10b6:	0f 90       	pop	r0
}
    10b8:	0f 90       	pop	r0
    10ba:	cf 91       	pop	r28
    10bc:	df 91       	pop	r29
    10be:	08 95       	ret

000010c0 <_ZN11LCD_HD447809writeDataEh>:
//-------------------------------------------------------------------------------------------------
//
// Funkcja zapisu danych do pami�ci wy�wietlacza
//
//-------------------------------------------------------------------------------------------------
void LCD_HD44780::writeData(unsigned char dataToWrite) {
    10c0:	df 93       	push	r29
    10c2:	cf 93       	push	r28
    10c4:	0f 92       	push	r0
    10c6:	cd b7       	in	r28, 0x3d	; 61
    10c8:	de b7       	in	r29, 0x3e	; 62
    10ca:	89 83       	std	Y+1, r24	; 0x01
	LCD_RS_PORT |= LCD_RS;
    10cc:	a8 e3       	ldi	r26, 0x38	; 56
    10ce:	b0 e0       	ldi	r27, 0x00	; 0
    10d0:	e8 e3       	ldi	r30, 0x38	; 56
    10d2:	f0 e0       	ldi	r31, 0x00	; 0
    10d4:	80 81       	ld	r24, Z
    10d6:	81 60       	ori	r24, 0x01	; 1
    10d8:	8c 93       	st	X, r24
	LCD_HD44780::write(dataToWrite);
    10da:	89 81       	ldd	r24, Y+1	; 0x01
    10dc:	d0 de       	rcall	.-608    	; 0xe7e <_ZN11LCD_HD447805writeEh>
    10de:	0f 90       	pop	r0
}
    10e0:	cf 91       	pop	r28
    10e2:	df 91       	pop	r29
    10e4:	08 95       	ret

000010e6 <_ZN11LCD_HD447809writeTextEPc>:
//-------------------------------------------------------------------------------------------------
//
// Funkcja wy�wietlenia napisu na wyswietlaczu.
//
//-------------------------------------------------------------------------------------------------
void LCD_HD44780::writeText(char * text) {
    10e6:	df 93       	push	r29
    10e8:	cf 93       	push	r28
    10ea:	00 d0       	rcall	.+0      	; 0x10ec <_ZN11LCD_HD447809writeTextEPc+0x6>
    10ec:	cd b7       	in	r28, 0x3d	; 61
    10ee:	de b7       	in	r29, 0x3e	; 62
    10f0:	9a 83       	std	Y+2, r25	; 0x02
    10f2:	89 83       	std	Y+1, r24	; 0x01
    10f4:	0a c0       	rjmp	.+20     	; 0x110a <_ZN11LCD_HD447809writeTextEPc+0x24>
	while (*text)
		LCD_HD44780::writeData(*text++);
    10f6:	e9 81       	ldd	r30, Y+1	; 0x01
    10f8:	fa 81       	ldd	r31, Y+2	; 0x02
    10fa:	20 81       	ld	r18, Z
    10fc:	89 81       	ldd	r24, Y+1	; 0x01
    10fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1100:	01 96       	adiw	r24, 0x01	; 1
    1102:	9a 83       	std	Y+2, r25	; 0x02
    1104:	89 83       	std	Y+1, r24	; 0x01
    1106:	82 2f       	mov	r24, r18
    1108:	db df       	rcall	.-74     	; 0x10c0 <_ZN11LCD_HD447809writeDataEh>
    110a:	e9 81       	ldd	r30, Y+1	; 0x01
//
// Funkcja wy�wietlenia napisu na wyswietlaczu.
//
//-------------------------------------------------------------------------------------------------
void LCD_HD44780::writeText(char * text) {
	while (*text)
    110c:	fa 81       	ldd	r31, Y+2	; 0x02
    110e:	80 81       	ld	r24, Z
    1110:	88 23       	and	r24, r24
    1112:	89 f7       	brne	.-30     	; 0x10f6 <_ZN11LCD_HD447809writeTextEPc+0x10>
    1114:	0f 90       	pop	r0
		LCD_HD44780::writeData(*text++);
}
    1116:	0f 90       	pop	r0
    1118:	cf 91       	pop	r28
    111a:	df 91       	pop	r29
    111c:	08 95       	ret

0000111e <_ZN11LCD_HD4478010showNumberEl>:
	LCD_HD44780::writeCommand(HD44780_HOME);
	_delay_ms(2);
}
//
//Wyswietla na wyswietlaczu LCD liczbe przekazana w argumencie funkcji
void LCD_HD44780::showNumber(int32_t liczba) {
    111e:	df 93       	push	r29
    1120:	cf 93       	push	r28
    1122:	cd b7       	in	r28, 0x3d	; 61
    1124:	de b7       	in	r29, 0x3e	; 62
    1126:	64 97       	sbiw	r28, 0x14	; 20
    1128:	0f b6       	in	r0, 0x3f	; 63
    112a:	f8 94       	cli
    112c:	de bf       	out	0x3e, r29	; 62
    112e:	0f be       	out	0x3f, r0	; 63
    1130:	cd bf       	out	0x3d, r28	; 61
    1132:	69 8b       	std	Y+17, r22	; 0x11
    1134:	7a 8b       	std	Y+18, r23	; 0x12
    1136:	8b 8b       	std	Y+19, r24	; 0x13
    1138:	9c 8b       	std	Y+20, r25	; 0x14

	char text[16];
	sprintf(text, "%d", liczba);
    113a:	8d b7       	in	r24, 0x3d	; 61
    113c:	9e b7       	in	r25, 0x3e	; 62
    113e:	08 97       	sbiw	r24, 0x08	; 8
    1140:	0f b6       	in	r0, 0x3f	; 63
    1142:	f8 94       	cli
    1144:	9e bf       	out	0x3e, r25	; 62
    1146:	0f be       	out	0x3f, r0	; 63
    1148:	8d bf       	out	0x3d, r24	; 61
    114a:	ed b7       	in	r30, 0x3d	; 61
    114c:	fe b7       	in	r31, 0x3e	; 62
    114e:	31 96       	adiw	r30, 0x01	; 1
    1150:	ce 01       	movw	r24, r28
    1152:	01 96       	adiw	r24, 0x01	; 1
    1154:	91 83       	std	Z+1, r25	; 0x01
    1156:	80 83       	st	Z, r24
    1158:	80 e6       	ldi	r24, 0x60	; 96
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	93 83       	std	Z+3, r25	; 0x03
    115e:	82 83       	std	Z+2, r24	; 0x02
    1160:	89 89       	ldd	r24, Y+17	; 0x11
    1162:	9a 89       	ldd	r25, Y+18	; 0x12
    1164:	ab 89       	ldd	r26, Y+19	; 0x13
    1166:	bc 89       	ldd	r27, Y+20	; 0x14
    1168:	84 83       	std	Z+4, r24	; 0x04
    116a:	95 83       	std	Z+5, r25	; 0x05
    116c:	a6 83       	std	Z+6, r26	; 0x06
    116e:	b7 83       	std	Z+7, r27	; 0x07
    1170:	0e 94 00 11 	call	0x2200	; 0x2200 <sprintf>
    1174:	8d b7       	in	r24, 0x3d	; 61
    1176:	9e b7       	in	r25, 0x3e	; 62
    1178:	08 96       	adiw	r24, 0x08	; 8
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	f8 94       	cli
    117e:	9e bf       	out	0x3e, r25	; 62
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	8d bf       	out	0x3d, r24	; 61
	LCD_HD44780::writeText(text);
    1184:	ce 01       	movw	r24, r28
    1186:	01 96       	adiw	r24, 0x01	; 1
    1188:	ae df       	rcall	.-164    	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    118a:	64 96       	adiw	r28, 0x14	; 20
}
    118c:	0f b6       	in	r0, 0x3f	; 63
    118e:	f8 94       	cli
    1190:	de bf       	out	0x3e, r29	; 62
    1192:	0f be       	out	0x3f, r0	; 63
    1194:	cd bf       	out	0x3d, r28	; 61
    1196:	cf 91       	pop	r28
    1198:	df 91       	pop	r29
    119a:	08 95       	ret

0000119c <_ZN11LCD_HD447805clearEv>:
//-------------------------------------------------------------------------------------------------
//
// Funkcja czyszczenia ekranu wy�wietlacza.
//
//-------------------------------------------------------------------------------------------------
void LCD_HD44780::clear(void) {
    119c:	df 93       	push	r29
    119e:	cf 93       	push	r28
    11a0:	cd b7       	in	r28, 0x3d	; 61
    11a2:	de b7       	in	r29, 0x3e	; 62
    11a4:	2e 97       	sbiw	r28, 0x0e	; 14
    11a6:	0f b6       	in	r0, 0x3f	; 63
    11a8:	f8 94       	cli
    11aa:	de bf       	out	0x3e, r29	; 62
    11ac:	0f be       	out	0x3f, r0	; 63
    11ae:	cd bf       	out	0x3d, r28	; 61
	LCD_HD44780::writeCommand(HD44780_CLEAR);
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	56 df       	rcall	.-340    	; 0x1060 <_ZN11LCD_HD4478012writeCommandEh>
    11b4:	80 e0       	ldi	r24, 0x00	; 0
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	a0 e0       	ldi	r26, 0x00	; 0
    11ba:	b0 e4       	ldi	r27, 0x40	; 64
    11bc:	8b 87       	std	Y+11, r24	; 0x0b
    11be:	9c 87       	std	Y+12, r25	; 0x0c
    11c0:	ad 87       	std	Y+13, r26	; 0x0d
    11c2:	be 87       	std	Y+14, r27	; 0x0e
    11c4:	6b 85       	ldd	r22, Y+11	; 0x0b
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11c6:	7c 85       	ldd	r23, Y+12	; 0x0c
    11c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    11ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    11cc:	20 e0       	ldi	r18, 0x00	; 0
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	4a ef       	ldi	r20, 0xFA	; 250
    11d2:	54 e4       	ldi	r21, 0x44	; 68
    11d4:	27 d9       	rcall	.-3506   	; 0x424 <__mulsf3>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	8f 83       	std	Y+7, r24	; 0x07
    11dc:	98 87       	std	Y+8, r25	; 0x08
    11de:	a9 87       	std	Y+9, r26	; 0x09
    11e0:	ba 87       	std	Y+10, r27	; 0x0a
    11e2:	6f 81       	ldd	r22, Y+7	; 0x07
    11e4:	78 85       	ldd	r23, Y+8	; 0x08
	if (__tmp < 1.0)
    11e6:	89 85       	ldd	r24, Y+9	; 0x09
    11e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ea:	20 e0       	ldi	r18, 0x00	; 0
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	40 e8       	ldi	r20, 0x80	; 128
    11f0:	5f e3       	ldi	r21, 0x3F	; 63
    11f2:	12 db       	rcall	.-2524   	; 0x818 <__ltsf2>
    11f4:	88 23       	and	r24, r24
    11f6:	2c f4       	brge	.+10     	; 0x1202 <_ZN11LCD_HD447805clearEv+0x66>
    11f8:	81 e0       	ldi	r24, 0x01	; 1
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	9e 83       	std	Y+6, r25	; 0x06
		__ticks = 1;
    11fe:	8d 83       	std	Y+5, r24	; 0x05
    1200:	3d c0       	rjmp	.+122    	; 0x127c <_ZN11LCD_HD447805clearEv+0xe0>
    1202:	6f 81       	ldd	r22, Y+7	; 0x07
    1204:	78 85       	ldd	r23, Y+8	; 0x08
    1206:	89 85       	ldd	r24, Y+9	; 0x09
	else if (__tmp > 65535)
    1208:	9a 85       	ldd	r25, Y+10	; 0x0a
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	3f ef       	ldi	r19, 0xFF	; 255
    120e:	4f e7       	ldi	r20, 0x7F	; 127
    1210:	57 e4       	ldi	r21, 0x47	; 71
    1212:	a8 da       	rcall	.-2736   	; 0x764 <__gtsf2>
    1214:	18 16       	cp	r1, r24
    1216:	44 f5       	brge	.+80     	; 0x1268 <_ZN11LCD_HD447805clearEv+0xcc>
    1218:	6b 85       	ldd	r22, Y+11	; 0x0b
    121a:	7c 85       	ldd	r23, Y+12	; 0x0c
    121c:	8d 85       	ldd	r24, Y+13	; 0x0d
    121e:	9e 85       	ldd	r25, Y+14	; 0x0e
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1220:	20 e0       	ldi	r18, 0x00	; 0
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	40 e2       	ldi	r20, 0x20	; 32
    1226:	51 e4       	ldi	r21, 0x41	; 65
    1228:	fd d8       	rcall	.-3590   	; 0x424 <__mulsf3>
    122a:	dc 01       	movw	r26, r24
    122c:	cb 01       	movw	r24, r22
    122e:	bc 01       	movw	r22, r24
    1230:	cd 01       	movw	r24, r26
    1232:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1236:	dc 01       	movw	r26, r24
    1238:	cb 01       	movw	r24, r22
    123a:	9e 83       	std	Y+6, r25	; 0x06
    123c:	8d 83       	std	Y+5, r24	; 0x05
    123e:	0f c0       	rjmp	.+30     	; 0x125e <_ZN11LCD_HD447805clearEv+0xc2>
    1240:	88 ec       	ldi	r24, 0xC8	; 200
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	9c 83       	std	Y+4, r25	; 0x04
    1246:	8b 83       	std	Y+3, r24	; 0x03
    1248:	8b 81       	ldd	r24, Y+3	; 0x03
    124a:	9c 81       	ldd	r25, Y+4	; 0x04
    124c:	01 97       	sbiw	r24, 0x01	; 1
    124e:	f1 f7       	brne	.-4      	; 0x124c <_ZN11LCD_HD447805clearEv+0xb0>
    1250:	9c 83       	std	Y+4, r25	; 0x04
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    1252:	8b 83       	std	Y+3, r24	; 0x03
    1254:	8d 81       	ldd	r24, Y+5	; 0x05
    1256:	9e 81       	ldd	r25, Y+6	; 0x06
    1258:	01 97       	sbiw	r24, 0x01	; 1
    125a:	9e 83       	std	Y+6, r25	; 0x06
    125c:	8d 83       	std	Y+5, r24	; 0x05
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    125e:	8d 81       	ldd	r24, Y+5	; 0x05
    1260:	9e 81       	ldd	r25, Y+6	; 0x06
    1262:	00 97       	sbiw	r24, 0x00	; 0
    1264:	69 f7       	brne	.-38     	; 0x1240 <_ZN11LCD_HD447805clearEv+0xa4>
    1266:	14 c0       	rjmp	.+40     	; 0x1290 <_ZN11LCD_HD447805clearEv+0xf4>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1268:	6f 81       	ldd	r22, Y+7	; 0x07
    126a:	78 85       	ldd	r23, Y+8	; 0x08
    126c:	89 85       	ldd	r24, Y+9	; 0x09
    126e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1270:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1274:	dc 01       	movw	r26, r24
    1276:	cb 01       	movw	r24, r22
    1278:	9e 83       	std	Y+6, r25	; 0x06
    127a:	8d 83       	std	Y+5, r24	; 0x05
    127c:	8d 81       	ldd	r24, Y+5	; 0x05
    127e:	9e 81       	ldd	r25, Y+6	; 0x06
    1280:	9a 83       	std	Y+2, r25	; 0x02
    1282:	89 83       	std	Y+1, r24	; 0x01
    1284:	89 81       	ldd	r24, Y+1	; 0x01
    1286:	9a 81       	ldd	r25, Y+2	; 0x02
    1288:	01 97       	sbiw	r24, 0x01	; 1
    128a:	f1 f7       	brne	.-4      	; 0x1288 <_ZN11LCD_HD447805clearEv+0xec>
    128c:	9a 83       	std	Y+2, r25	; 0x02
    128e:	89 83       	std	Y+1, r24	; 0x01
    1290:	2e 96       	adiw	r28, 0x0e	; 14
    1292:	0f b6       	in	r0, 0x3f	; 63
    1294:	f8 94       	cli
    1296:	de bf       	out	0x3e, r29	; 62
    1298:	0f be       	out	0x3f, r0	; 63
	_delay_ms(2);
}
    129a:	cd bf       	out	0x3d, r28	; 61
    129c:	cf 91       	pop	r28
    129e:	df 91       	pop	r29
    12a0:	08 95       	ret

000012a2 <_ZN11LCD_HD447804initEv>:
//-------------------------------------------------------------------------------------------------
//
// Procedura inicjalizacji kontrolera HD44780.
//
//-------------------------------------------------------------------------------------------------
void LCD_HD44780::init(void) {
    12a2:	df 93       	push	r29
    12a4:	cf 93       	push	r28
    12a6:	cd b7       	in	r28, 0x3d	; 61
    12a8:	de b7       	in	r29, 0x3e	; 62
    12aa:	e9 97       	sbiw	r28, 0x39	; 57
    12ac:	0f b6       	in	r0, 0x3f	; 63
    12ae:	f8 94       	cli
    12b0:	de bf       	out	0x3e, r29	; 62
    12b2:	0f be       	out	0x3f, r0	; 63
    12b4:	cd bf       	out	0x3d, r28	; 61
	unsigned char i;
	LCD_DB4_DIR |= LCD_DB4; // Konfiguracja kierunku pracy wyprowadze�
    12b6:	a7 e3       	ldi	r26, 0x37	; 55
    12b8:	b0 e0       	ldi	r27, 0x00	; 0
    12ba:	e7 e3       	ldi	r30, 0x37	; 55
    12bc:	f0 e0       	ldi	r31, 0x00	; 0
    12be:	80 81       	ld	r24, Z
    12c0:	84 60       	ori	r24, 0x04	; 4
    12c2:	8c 93       	st	X, r24
	LCD_DB5_DIR |= LCD_DB5; //
    12c4:	a7 e3       	ldi	r26, 0x37	; 55
    12c6:	b0 e0       	ldi	r27, 0x00	; 0
    12c8:	e7 e3       	ldi	r30, 0x37	; 55
    12ca:	f0 e0       	ldi	r31, 0x00	; 0
    12cc:	80 81       	ld	r24, Z
    12ce:	88 60       	ori	r24, 0x08	; 8
    12d0:	8c 93       	st	X, r24
	LCD_DB6_DIR |= LCD_DB6; //
    12d2:	a7 e3       	ldi	r26, 0x37	; 55
    12d4:	b0 e0       	ldi	r27, 0x00	; 0
    12d6:	e7 e3       	ldi	r30, 0x37	; 55
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	80 81       	ld	r24, Z
    12dc:	80 61       	ori	r24, 0x10	; 16
    12de:	8c 93       	st	X, r24
	LCD_DB7_DIR |= LCD_DB7; //
    12e0:	a7 e3       	ldi	r26, 0x37	; 55
    12e2:	b0 e0       	ldi	r27, 0x00	; 0
    12e4:	e7 e3       	ldi	r30, 0x37	; 55
    12e6:	f0 e0       	ldi	r31, 0x00	; 0
    12e8:	80 81       	ld	r24, Z
    12ea:	80 62       	ori	r24, 0x20	; 32
    12ec:	8c 93       	st	X, r24
	LCD_E_DIR |= LCD_E;   //
    12ee:	a7 e3       	ldi	r26, 0x37	; 55
    12f0:	b0 e0       	ldi	r27, 0x00	; 0
    12f2:	e7 e3       	ldi	r30, 0x37	; 55
    12f4:	f0 e0       	ldi	r31, 0x00	; 0
    12f6:	80 81       	ld	r24, Z
    12f8:	82 60       	ori	r24, 0x02	; 2
    12fa:	8c 93       	st	X, r24
	LCD_RS_DIR |= LCD_RS;  //
    12fc:	a7 e3       	ldi	r26, 0x37	; 55
    12fe:	b0 e0       	ldi	r27, 0x00	; 0
    1300:	e7 e3       	ldi	r30, 0x37	; 55
    1302:	f0 e0       	ldi	r31, 0x00	; 0
    1304:	80 81       	ld	r24, Z
    1306:	81 60       	ori	r24, 0x01	; 1
    1308:	8c 93       	st	X, r24
    130a:	80 e0       	ldi	r24, 0x00	; 0
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	a0 e7       	ldi	r26, 0x70	; 112
    1310:	b1 e4       	ldi	r27, 0x41	; 65
    1312:	8d ab       	std	Y+53, r24	; 0x35
    1314:	9e ab       	std	Y+54, r25	; 0x36
    1316:	af ab       	std	Y+55, r26	; 0x37
    1318:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    131a:	6d a9       	ldd	r22, Y+53	; 0x35
    131c:	7e a9       	ldd	r23, Y+54	; 0x36
    131e:	8f a9       	ldd	r24, Y+55	; 0x37
    1320:	98 ad       	ldd	r25, Y+56	; 0x38
    1322:	20 e0       	ldi	r18, 0x00	; 0
    1324:	30 e0       	ldi	r19, 0x00	; 0
    1326:	4a ef       	ldi	r20, 0xFA	; 250
    1328:	54 e4       	ldi	r21, 0x44	; 68
    132a:	7c d8       	rcall	.-3848   	; 0x424 <__mulsf3>
    132c:	dc 01       	movw	r26, r24
    132e:	cb 01       	movw	r24, r22
    1330:	89 ab       	std	Y+49, r24	; 0x31
    1332:	9a ab       	std	Y+50, r25	; 0x32
    1334:	ab ab       	std	Y+51, r26	; 0x33
    1336:	bc ab       	std	Y+52, r27	; 0x34
    1338:	69 a9       	ldd	r22, Y+49	; 0x31
	if (__tmp < 1.0)
    133a:	7a a9       	ldd	r23, Y+50	; 0x32
    133c:	8b a9       	ldd	r24, Y+51	; 0x33
    133e:	9c a9       	ldd	r25, Y+52	; 0x34
    1340:	20 e0       	ldi	r18, 0x00	; 0
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	40 e8       	ldi	r20, 0x80	; 128
    1346:	5f e3       	ldi	r21, 0x3F	; 63
    1348:	67 da       	rcall	.-2866   	; 0x818 <__ltsf2>
    134a:	88 23       	and	r24, r24
    134c:	2c f4       	brge	.+10     	; 0x1358 <_ZN11LCD_HD447804initEv+0xb6>
    134e:	81 e0       	ldi	r24, 0x01	; 1
    1350:	90 e0       	ldi	r25, 0x00	; 0
		__ticks = 1;
    1352:	98 ab       	std	Y+48, r25	; 0x30
    1354:	8f a7       	std	Y+47, r24	; 0x2f
    1356:	3d c0       	rjmp	.+122    	; 0x13d2 <_ZN11LCD_HD447804initEv+0x130>
    1358:	69 a9       	ldd	r22, Y+49	; 0x31
    135a:	7a a9       	ldd	r23, Y+50	; 0x32
	else if (__tmp > 65535)
    135c:	8b a9       	ldd	r24, Y+51	; 0x33
    135e:	9c a9       	ldd	r25, Y+52	; 0x34
    1360:	20 e0       	ldi	r18, 0x00	; 0
    1362:	3f ef       	ldi	r19, 0xFF	; 255
    1364:	4f e7       	ldi	r20, 0x7F	; 127
    1366:	57 e4       	ldi	r21, 0x47	; 71
    1368:	fd d9       	rcall	.-3078   	; 0x764 <__gtsf2>
    136a:	18 16       	cp	r1, r24
    136c:	44 f5       	brge	.+80     	; 0x13be <_ZN11LCD_HD447804initEv+0x11c>
    136e:	6d a9       	ldd	r22, Y+53	; 0x35
    1370:	7e a9       	ldd	r23, Y+54	; 0x36
    1372:	8f a9       	ldd	r24, Y+55	; 0x37
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1374:	98 ad       	ldd	r25, Y+56	; 0x38
    1376:	20 e0       	ldi	r18, 0x00	; 0
    1378:	30 e0       	ldi	r19, 0x00	; 0
    137a:	40 e2       	ldi	r20, 0x20	; 32
    137c:	51 e4       	ldi	r21, 0x41	; 65
    137e:	52 d8       	rcall	.-3932   	; 0x424 <__mulsf3>
    1380:	dc 01       	movw	r26, r24
    1382:	cb 01       	movw	r24, r22
    1384:	bc 01       	movw	r22, r24
    1386:	cd 01       	movw	r24, r26
    1388:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    138c:	dc 01       	movw	r26, r24
    138e:	cb 01       	movw	r24, r22
    1390:	98 ab       	std	Y+48, r25	; 0x30
    1392:	8f a7       	std	Y+47, r24	; 0x2f
    1394:	0f c0       	rjmp	.+30     	; 0x13b4 <_ZN11LCD_HD447804initEv+0x112>
    1396:	88 ec       	ldi	r24, 0xC8	; 200
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	9e a7       	std	Y+46, r25	; 0x2e
    139c:	8d a7       	std	Y+45, r24	; 0x2d
    139e:	8d a5       	ldd	r24, Y+45	; 0x2d
    13a0:	9e a5       	ldd	r25, Y+46	; 0x2e
    13a2:	01 97       	sbiw	r24, 0x01	; 1
    13a4:	f1 f7       	brne	.-4      	; 0x13a2 <_ZN11LCD_HD447804initEv+0x100>
    13a6:	9e a7       	std	Y+46, r25	; 0x2e
    13a8:	8d a7       	std	Y+45, r24	; 0x2d
    13aa:	8f a5       	ldd	r24, Y+47	; 0x2f
    13ac:	98 a9       	ldd	r25, Y+48	; 0x30
    13ae:	01 97       	sbiw	r24, 0x01	; 1
    13b0:	98 ab       	std	Y+48, r25	; 0x30
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13b2:	8f a7       	std	Y+47, r24	; 0x2f
    13b4:	8f a5       	ldd	r24, Y+47	; 0x2f
    13b6:	98 a9       	ldd	r25, Y+48	; 0x30
    13b8:	00 97       	sbiw	r24, 0x00	; 0
    13ba:	69 f7       	brne	.-38     	; 0x1396 <_ZN11LCD_HD447804initEv+0xf4>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13bc:	14 c0       	rjmp	.+40     	; 0x13e6 <_ZN11LCD_HD447804initEv+0x144>
    13be:	69 a9       	ldd	r22, Y+49	; 0x31
    13c0:	7a a9       	ldd	r23, Y+50	; 0x32
    13c2:	8b a9       	ldd	r24, Y+51	; 0x33
    13c4:	9c a9       	ldd	r25, Y+52	; 0x34
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13c6:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    13ca:	dc 01       	movw	r26, r24
    13cc:	cb 01       	movw	r24, r22
    13ce:	98 ab       	std	Y+48, r25	; 0x30
    13d0:	8f a7       	std	Y+47, r24	; 0x2f
    13d2:	8f a5       	ldd	r24, Y+47	; 0x2f
    13d4:	98 a9       	ldd	r25, Y+48	; 0x30
    13d6:	9c a7       	std	Y+44, r25	; 0x2c
    13d8:	8b a7       	std	Y+43, r24	; 0x2b
    13da:	8b a5       	ldd	r24, Y+43	; 0x2b
    13dc:	9c a5       	ldd	r25, Y+44	; 0x2c
    13de:	01 97       	sbiw	r24, 0x01	; 1
    13e0:	f1 f7       	brne	.-4      	; 0x13de <_ZN11LCD_HD447804initEv+0x13c>
    13e2:	9c a7       	std	Y+44, r25	; 0x2c
    13e4:	8b a7       	std	Y+43, r24	; 0x2b
    13e6:	a8 e3       	ldi	r26, 0x38	; 56
    13e8:	b0 e0       	ldi	r27, 0x00	; 0
    13ea:	e8 e3       	ldi	r30, 0x38	; 56
    13ec:	f0 e0       	ldi	r31, 0x00	; 0
	_delay_ms(15); // oczekiwanie na ustalibizowanie si� napiecia zasilajacego
	LCD_RS_PORT &= ~LCD_RS; // wyzerowanie linii RS
    13ee:	80 81       	ld	r24, Z
    13f0:	8e 7f       	andi	r24, 0xFE	; 254
    13f2:	8c 93       	st	X, r24
    13f4:	a8 e3       	ldi	r26, 0x38	; 56
    13f6:	b0 e0       	ldi	r27, 0x00	; 0
    13f8:	e8 e3       	ldi	r30, 0x38	; 56
    13fa:	f0 e0       	ldi	r31, 0x00	; 0
	LCD_E_PORT &= ~LCD_E;  // wyzerowanie linii E
    13fc:	80 81       	ld	r24, Z
    13fe:	8d 7f       	andi	r24, 0xFD	; 253
    1400:	8c 93       	st	X, r24
    1402:	19 ae       	std	Y+57, r1	; 0x39
    1404:	83 c0       	rjmp	.+262    	; 0x150c <_ZN11LCD_HD447804initEv+0x26a>
    1406:	a8 e3       	ldi	r26, 0x38	; 56
    1408:	b0 e0       	ldi	r27, 0x00	; 0

	for (i = 0; i < 3; i++) // trzykrotne powt�rzenie bloku instrukcji
    140a:	e8 e3       	ldi	r30, 0x38	; 56
    140c:	f0 e0       	ldi	r31, 0x00	; 0
			{
		LCD_E_PORT |= LCD_E; //  E = 1
    140e:	80 81       	ld	r24, Z
    1410:	82 60       	ori	r24, 0x02	; 2
    1412:	8c 93       	st	X, r24
    1414:	83 e0       	ldi	r24, 0x03	; 3
    1416:	d1 dc       	rcall	.-1630   	; 0xdba <_ZN11LCD_HD447809outNibbleEh>
    1418:	a8 e3       	ldi	r26, 0x38	; 56
    141a:	b0 e0       	ldi	r27, 0x00	; 0
		LCD_HD44780::outNibble(0x03); // tryb 8-bitowy
    141c:	e8 e3       	ldi	r30, 0x38	; 56
    141e:	f0 e0       	ldi	r31, 0x00	; 0
    1420:	80 81       	ld	r24, Z
		LCD_E_PORT &= ~LCD_E; // E = 0
    1422:	8d 7f       	andi	r24, 0xFD	; 253
    1424:	8c 93       	st	X, r24
    1426:	80 e0       	ldi	r24, 0x00	; 0
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	a0 ea       	ldi	r26, 0xA0	; 160
    142c:	b0 e4       	ldi	r27, 0x40	; 64
    142e:	8f a3       	std	Y+39, r24	; 0x27
    1430:	98 a7       	std	Y+40, r25	; 0x28
    1432:	a9 a7       	std	Y+41, r26	; 0x29
    1434:	ba a7       	std	Y+42, r27	; 0x2a
    1436:	6f a1       	ldd	r22, Y+39	; 0x27
    1438:	78 a5       	ldd	r23, Y+40	; 0x28
    143a:	89 a5       	ldd	r24, Y+41	; 0x29
    143c:	9a a5       	ldd	r25, Y+42	; 0x2a
    143e:	20 e0       	ldi	r18, 0x00	; 0
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1440:	30 e0       	ldi	r19, 0x00	; 0
    1442:	4a ef       	ldi	r20, 0xFA	; 250
    1444:	54 e4       	ldi	r21, 0x44	; 68
    1446:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    144a:	dc 01       	movw	r26, r24
    144c:	cb 01       	movw	r24, r22
    144e:	8b a3       	std	Y+35, r24	; 0x23
    1450:	9c a3       	std	Y+36, r25	; 0x24
    1452:	ad a3       	std	Y+37, r26	; 0x25
    1454:	be a3       	std	Y+38, r27	; 0x26
    1456:	6b a1       	ldd	r22, Y+35	; 0x23
    1458:	7c a1       	ldd	r23, Y+36	; 0x24
    145a:	8d a1       	ldd	r24, Y+37	; 0x25
    145c:	9e a1       	ldd	r25, Y+38	; 0x26
    145e:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
    1460:	30 e0       	ldi	r19, 0x00	; 0
    1462:	40 e8       	ldi	r20, 0x80	; 128
    1464:	5f e3       	ldi	r21, 0x3F	; 63
    1466:	d8 d9       	rcall	.-3152   	; 0x818 <__ltsf2>
    1468:	88 23       	and	r24, r24
    146a:	2c f4       	brge	.+10     	; 0x1476 <_ZN11LCD_HD447804initEv+0x1d4>
    146c:	81 e0       	ldi	r24, 0x01	; 1
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	9a a3       	std	Y+34, r25	; 0x22
    1472:	89 a3       	std	Y+33, r24	; 0x21
    1474:	3e c0       	rjmp	.+124    	; 0x14f2 <_ZN11LCD_HD447804initEv+0x250>
    1476:	6b a1       	ldd	r22, Y+35	; 0x23
		__ticks = 1;
    1478:	7c a1       	ldd	r23, Y+36	; 0x24
    147a:	8d a1       	ldd	r24, Y+37	; 0x25
    147c:	9e a1       	ldd	r25, Y+38	; 0x26
    147e:	20 e0       	ldi	r18, 0x00	; 0
    1480:	3f ef       	ldi	r19, 0xFF	; 255
	else if (__tmp > 65535)
    1482:	4f e7       	ldi	r20, 0x7F	; 127
    1484:	57 e4       	ldi	r21, 0x47	; 71
    1486:	6e d9       	rcall	.-3364   	; 0x764 <__gtsf2>
    1488:	18 16       	cp	r1, r24
    148a:	4c f5       	brge	.+82     	; 0x14de <_ZN11LCD_HD447804initEv+0x23c>
    148c:	6f a1       	ldd	r22, Y+39	; 0x27
    148e:	78 a5       	ldd	r23, Y+40	; 0x28
    1490:	89 a5       	ldd	r24, Y+41	; 0x29
    1492:	9a a5       	ldd	r25, Y+42	; 0x2a
    1494:	20 e0       	ldi	r18, 0x00	; 0
    1496:	30 e0       	ldi	r19, 0x00	; 0
    1498:	40 e2       	ldi	r20, 0x20	; 32
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    149a:	51 e4       	ldi	r21, 0x41	; 65
    149c:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    14a0:	dc 01       	movw	r26, r24
    14a2:	cb 01       	movw	r24, r22
    14a4:	bc 01       	movw	r22, r24
    14a6:	cd 01       	movw	r24, r26
    14a8:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    14ac:	dc 01       	movw	r26, r24
    14ae:	cb 01       	movw	r24, r22
    14b0:	9a a3       	std	Y+34, r25	; 0x22
    14b2:	89 a3       	std	Y+33, r24	; 0x21
    14b4:	0f c0       	rjmp	.+30     	; 0x14d4 <_ZN11LCD_HD447804initEv+0x232>
    14b6:	88 ec       	ldi	r24, 0xC8	; 200
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	98 a3       	std	Y+32, r25	; 0x20
    14bc:	8f 8f       	std	Y+31, r24	; 0x1f
    14be:	8f 8d       	ldd	r24, Y+31	; 0x1f
    14c0:	98 a1       	ldd	r25, Y+32	; 0x20
    14c2:	01 97       	sbiw	r24, 0x01	; 1
    14c4:	f1 f7       	brne	.-4      	; 0x14c2 <_ZN11LCD_HD447804initEv+0x220>
    14c6:	98 a3       	std	Y+32, r25	; 0x20
    14c8:	8f 8f       	std	Y+31, r24	; 0x1f
    14ca:	89 a1       	ldd	r24, Y+33	; 0x21
    14cc:	9a a1       	ldd	r25, Y+34	; 0x22
    14ce:	01 97       	sbiw	r24, 0x01	; 1
    14d0:	9a a3       	std	Y+34, r25	; 0x22
    14d2:	89 a3       	std	Y+33, r24	; 0x21
    14d4:	89 a1       	ldd	r24, Y+33	; 0x21
    14d6:	9a a1       	ldd	r25, Y+34	; 0x22
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14d8:	00 97       	sbiw	r24, 0x00	; 0
    14da:	69 f7       	brne	.-38     	; 0x14b6 <_ZN11LCD_HD447804initEv+0x214>
    14dc:	14 c0       	rjmp	.+40     	; 0x1506 <_ZN11LCD_HD447804initEv+0x264>
    14de:	6b a1       	ldd	r22, Y+35	; 0x23
    14e0:	7c a1       	ldd	r23, Y+36	; 0x24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14e2:	8d a1       	ldd	r24, Y+37	; 0x25
    14e4:	9e a1       	ldd	r25, Y+38	; 0x26
    14e6:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    14ea:	dc 01       	movw	r26, r24
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14ec:	cb 01       	movw	r24, r22
    14ee:	9a a3       	std	Y+34, r25	; 0x22
    14f0:	89 a3       	std	Y+33, r24	; 0x21
    14f2:	89 a1       	ldd	r24, Y+33	; 0x21
    14f4:	9a a1       	ldd	r25, Y+34	; 0x22
    14f6:	9e 8f       	std	Y+30, r25	; 0x1e
    14f8:	8d 8f       	std	Y+29, r24	; 0x1d
    14fa:	8d 8d       	ldd	r24, Y+29	; 0x1d
    14fc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    14fe:	01 97       	sbiw	r24, 0x01	; 1
    1500:	f1 f7       	brne	.-4      	; 0x14fe <_ZN11LCD_HD447804initEv+0x25c>
    1502:	9e 8f       	std	Y+30, r25	; 0x1e
    1504:	8d 8f       	std	Y+29, r24	; 0x1d
    1506:	89 ad       	ldd	r24, Y+57	; 0x39
    1508:	8f 5f       	subi	r24, 0xFF	; 255
    150a:	89 af       	std	Y+57, r24	; 0x39
    150c:	89 ad       	ldd	r24, Y+57	; 0x39
    150e:	83 30       	cpi	r24, 0x03	; 3
    1510:	08 f4       	brcc	.+2      	; 0x1514 <_ZN11LCD_HD447804initEv+0x272>
    1512:	79 cf       	rjmp	.-270    	; 0x1406 <_ZN11LCD_HD447804initEv+0x164>
	LCD_RS_DIR |= LCD_RS;  //
	_delay_ms(15); // oczekiwanie na ustalibizowanie si� napiecia zasilajacego
	LCD_RS_PORT &= ~LCD_RS; // wyzerowanie linii RS
	LCD_E_PORT &= ~LCD_E;  // wyzerowanie linii E

	for (i = 0; i < 3; i++) // trzykrotne powt�rzenie bloku instrukcji
    1514:	a8 e3       	ldi	r26, 0x38	; 56
    1516:	b0 e0       	ldi	r27, 0x00	; 0
    1518:	e8 e3       	ldi	r30, 0x38	; 56
    151a:	f0 e0       	ldi	r31, 0x00	; 0
    151c:	80 81       	ld	r24, Z
    151e:	82 60       	ori	r24, 0x02	; 2
    1520:	8c 93       	st	X, r24
		LCD_HD44780::outNibble(0x03); // tryb 8-bitowy
		LCD_E_PORT &= ~LCD_E; // E = 0
		_delay_ms(5); // czekaj 5ms
	}

	LCD_E_PORT |= LCD_E; // E = 1
    1522:	82 e0       	ldi	r24, 0x02	; 2
    1524:	4a dc       	rcall	.-1900   	; 0xdba <_ZN11LCD_HD447809outNibbleEh>
    1526:	a8 e3       	ldi	r26, 0x38	; 56
    1528:	b0 e0       	ldi	r27, 0x00	; 0
    152a:	e8 e3       	ldi	r30, 0x38	; 56
    152c:	f0 e0       	ldi	r31, 0x00	; 0
    152e:	80 81       	ld	r24, Z
	LCD_HD44780::outNibble(0x02); // tryb 4-bitowy
    1530:	8d 7f       	andi	r24, 0xFD	; 253
    1532:	8c 93       	st	X, r24
    1534:	80 e0       	ldi	r24, 0x00	; 0
	LCD_E_PORT &= ~LCD_E; // E = 0
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	a0 e8       	ldi	r26, 0x80	; 128
    153a:	bf e3       	ldi	r27, 0x3F	; 63
    153c:	89 8f       	std	Y+25, r24	; 0x19
    153e:	9a 8f       	std	Y+26, r25	; 0x1a
    1540:	ab 8f       	std	Y+27, r26	; 0x1b
    1542:	bc 8f       	std	Y+28, r27	; 0x1c
    1544:	69 8d       	ldd	r22, Y+25	; 0x19
    1546:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1548:	8b 8d       	ldd	r24, Y+27	; 0x1b
    154a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    154c:	20 e0       	ldi	r18, 0x00	; 0
    154e:	30 e0       	ldi	r19, 0x00	; 0
    1550:	4a ef       	ldi	r20, 0xFA	; 250
    1552:	54 e4       	ldi	r21, 0x44	; 68
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1554:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1558:	dc 01       	movw	r26, r24
    155a:	cb 01       	movw	r24, r22
    155c:	8d 8b       	std	Y+21, r24	; 0x15
    155e:	9e 8b       	std	Y+22, r25	; 0x16
    1560:	af 8b       	std	Y+23, r26	; 0x17
    1562:	b8 8f       	std	Y+24, r27	; 0x18
    1564:	6d 89       	ldd	r22, Y+21	; 0x15
    1566:	7e 89       	ldd	r23, Y+22	; 0x16
    1568:	8f 89       	ldd	r24, Y+23	; 0x17
    156a:	98 8d       	ldd	r25, Y+24	; 0x18
    156c:	20 e0       	ldi	r18, 0x00	; 0
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	40 e8       	ldi	r20, 0x80	; 128
    1572:	5f e3       	ldi	r21, 0x3F	; 63
	if (__tmp < 1.0)
    1574:	51 d9       	rcall	.-3422   	; 0x818 <__ltsf2>
    1576:	88 23       	and	r24, r24
    1578:	2c f4       	brge	.+10     	; 0x1584 <_ZN11LCD_HD447804initEv+0x2e2>
    157a:	81 e0       	ldi	r24, 0x01	; 1
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	9c 8b       	std	Y+20, r25	; 0x14
    1580:	8b 8b       	std	Y+19, r24	; 0x13
    1582:	3e c0       	rjmp	.+124    	; 0x1600 <_ZN11LCD_HD447804initEv+0x35e>
    1584:	6d 89       	ldd	r22, Y+21	; 0x15
    1586:	7e 89       	ldd	r23, Y+22	; 0x16
    1588:	8f 89       	ldd	r24, Y+23	; 0x17
    158a:	98 8d       	ldd	r25, Y+24	; 0x18
		__ticks = 1;
    158c:	20 e0       	ldi	r18, 0x00	; 0
    158e:	3f ef       	ldi	r19, 0xFF	; 255
    1590:	4f e7       	ldi	r20, 0x7F	; 127
    1592:	57 e4       	ldi	r21, 0x47	; 71
    1594:	e7 d8       	rcall	.-3634   	; 0x764 <__gtsf2>
	else if (__tmp > 65535)
    1596:	18 16       	cp	r1, r24
    1598:	4c f5       	brge	.+82     	; 0x15ec <_ZN11LCD_HD447804initEv+0x34a>
    159a:	69 8d       	ldd	r22, Y+25	; 0x19
    159c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    159e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15a2:	20 e0       	ldi	r18, 0x00	; 0
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	40 e2       	ldi	r20, 0x20	; 32
    15a8:	51 e4       	ldi	r21, 0x41	; 65
    15aa:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15ae:	dc 01       	movw	r26, r24
    15b0:	cb 01       	movw	r24, r22
    15b2:	bc 01       	movw	r22, r24
    15b4:	cd 01       	movw	r24, r26
    15b6:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    15ba:	dc 01       	movw	r26, r24
    15bc:	cb 01       	movw	r24, r22
    15be:	9c 8b       	std	Y+20, r25	; 0x14
    15c0:	8b 8b       	std	Y+19, r24	; 0x13
    15c2:	0f c0       	rjmp	.+30     	; 0x15e2 <_ZN11LCD_HD447804initEv+0x340>
    15c4:	88 ec       	ldi	r24, 0xC8	; 200
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	9a 8b       	std	Y+18, r25	; 0x12
    15ca:	89 8b       	std	Y+17, r24	; 0x11
    15cc:	89 89       	ldd	r24, Y+17	; 0x11
    15ce:	9a 89       	ldd	r25, Y+18	; 0x12
    15d0:	01 97       	sbiw	r24, 0x01	; 1
    15d2:	f1 f7       	brne	.-4      	; 0x15d0 <_ZN11LCD_HD447804initEv+0x32e>
    15d4:	9a 8b       	std	Y+18, r25	; 0x12
    15d6:	89 8b       	std	Y+17, r24	; 0x11
    15d8:	8b 89       	ldd	r24, Y+19	; 0x13
    15da:	9c 89       	ldd	r25, Y+20	; 0x14
    15dc:	01 97       	sbiw	r24, 0x01	; 1
    15de:	9c 8b       	std	Y+20, r25	; 0x14
    15e0:	8b 8b       	std	Y+19, r24	; 0x13
    15e2:	8b 89       	ldd	r24, Y+19	; 0x13
    15e4:	9c 89       	ldd	r25, Y+20	; 0x14
    15e6:	00 97       	sbiw	r24, 0x00	; 0
    15e8:	69 f7       	brne	.-38     	; 0x15c4 <_ZN11LCD_HD447804initEv+0x322>
    15ea:	14 c0       	rjmp	.+40     	; 0x1614 <_ZN11LCD_HD447804initEv+0x372>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ec:	6d 89       	ldd	r22, Y+21	; 0x15
    15ee:	7e 89       	ldd	r23, Y+22	; 0x16
    15f0:	8f 89       	ldd	r24, Y+23	; 0x17
    15f2:	98 8d       	ldd	r25, Y+24	; 0x18
    15f4:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15f8:	dc 01       	movw	r26, r24
    15fa:	cb 01       	movw	r24, r22
    15fc:	9c 8b       	std	Y+20, r25	; 0x14
    15fe:	8b 8b       	std	Y+19, r24	; 0x13
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1600:	8b 89       	ldd	r24, Y+19	; 0x13
    1602:	9c 89       	ldd	r25, Y+20	; 0x14
    1604:	98 8b       	std	Y+16, r25	; 0x10
    1606:	8f 87       	std	Y+15, r24	; 0x0f
    1608:	8f 85       	ldd	r24, Y+15	; 0x0f
    160a:	98 89       	ldd	r25, Y+16	; 0x10
    160c:	01 97       	sbiw	r24, 0x01	; 1
    160e:	f1 f7       	brne	.-4      	; 0x160c <_ZN11LCD_HD447804initEv+0x36a>
    1610:	98 8b       	std	Y+16, r25	; 0x10
    1612:	8f 87       	std	Y+15, r24	; 0x0f
    1614:	88 e2       	ldi	r24, 0x28	; 40
    1616:	24 dd       	rcall	.-1464   	; 0x1060 <_ZN11LCD_HD4478012writeCommandEh>
    1618:	88 e0       	ldi	r24, 0x08	; 8
    161a:	22 dd       	rcall	.-1468   	; 0x1060 <_ZN11LCD_HD4478012writeCommandEh>
    161c:	81 e0       	ldi	r24, 0x01	; 1
    161e:	20 dd       	rcall	.-1472   	; 0x1060 <_ZN11LCD_HD4478012writeCommandEh>
    1620:	80 e0       	ldi	r24, 0x00	; 0
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	a0 e0       	ldi	r26, 0x00	; 0
    1626:	b0 e4       	ldi	r27, 0x40	; 64

	_delay_ms(1); // czekaj 1ms
	LCD_HD44780::writeCommand(
			HD44780_FUNCTION_SET | HD44780_FONT5x7 | HD44780_TWO_LINE
					| HD44780_4_BIT); // interfejs 4-bity, 2-linie, znak 5x7
    1628:	8b 87       	std	Y+11, r24	; 0x0b
    162a:	9c 87       	std	Y+12, r25	; 0x0c
    162c:	ad 87       	std	Y+13, r26	; 0x0d
	LCD_HD44780::writeCommand(HD44780_DISPLAY_ONOFF | HD44780_DISPLAY_OFF); // wy��czenie wyswietlacza
    162e:	be 87       	std	Y+14, r27	; 0x0e
    1630:	6b 85       	ldd	r22, Y+11	; 0x0b
    1632:	7c 85       	ldd	r23, Y+12	; 0x0c
    1634:	8d 85       	ldd	r24, Y+13	; 0x0d
    1636:	9e 85       	ldd	r25, Y+14	; 0x0e
    1638:	20 e0       	ldi	r18, 0x00	; 0
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	4a ef       	ldi	r20, 0xFA	; 250
    163e:	54 e4       	ldi	r21, 0x44	; 68
    1640:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1644:	dc 01       	movw	r26, r24
    1646:	cb 01       	movw	r24, r22
    1648:	8f 83       	std	Y+7, r24	; 0x07
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    164a:	98 87       	std	Y+8, r25	; 0x08
    164c:	a9 87       	std	Y+9, r26	; 0x09
    164e:	ba 87       	std	Y+10, r27	; 0x0a
    1650:	6f 81       	ldd	r22, Y+7	; 0x07
    1652:	78 85       	ldd	r23, Y+8	; 0x08
    1654:	89 85       	ldd	r24, Y+9	; 0x09
    1656:	9a 85       	ldd	r25, Y+10	; 0x0a
    1658:	20 e0       	ldi	r18, 0x00	; 0
    165a:	30 e0       	ldi	r19, 0x00	; 0
    165c:	40 e8       	ldi	r20, 0x80	; 128
    165e:	5f e3       	ldi	r21, 0x3F	; 63
    1660:	db d8       	rcall	.-3658   	; 0x818 <__ltsf2>
    1662:	88 23       	and	r24, r24
    1664:	2c f4       	brge	.+10     	; 0x1670 <_ZN11LCD_HD447804initEv+0x3ce>
    1666:	81 e0       	ldi	r24, 0x01	; 1
    1668:	90 e0       	ldi	r25, 0x00	; 0
	if (__tmp < 1.0)
    166a:	9e 83       	std	Y+6, r25	; 0x06
    166c:	8d 83       	std	Y+5, r24	; 0x05
    166e:	3e c0       	rjmp	.+124    	; 0x16ec <_ZN11LCD_HD447804initEv+0x44a>
    1670:	6f 81       	ldd	r22, Y+7	; 0x07
    1672:	78 85       	ldd	r23, Y+8	; 0x08
    1674:	89 85       	ldd	r24, Y+9	; 0x09
    1676:	9a 85       	ldd	r25, Y+10	; 0x0a
    1678:	20 e0       	ldi	r18, 0x00	; 0
    167a:	3f ef       	ldi	r19, 0xFF	; 255
    167c:	4f e7       	ldi	r20, 0x7F	; 127
    167e:	57 e4       	ldi	r21, 0x47	; 71
    1680:	71 d8       	rcall	.-3870   	; 0x764 <__gtsf2>
		__ticks = 1;
    1682:	18 16       	cp	r1, r24
    1684:	4c f5       	brge	.+82     	; 0x16d8 <_ZN11LCD_HD447804initEv+0x436>
    1686:	6b 85       	ldd	r22, Y+11	; 0x0b
    1688:	7c 85       	ldd	r23, Y+12	; 0x0c
    168a:	8d 85       	ldd	r24, Y+13	; 0x0d
	else if (__tmp > 65535)
    168c:	9e 85       	ldd	r25, Y+14	; 0x0e
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	30 e0       	ldi	r19, 0x00	; 0
    1692:	40 e2       	ldi	r20, 0x20	; 32
    1694:	51 e4       	ldi	r21, 0x41	; 65
    1696:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    169a:	dc 01       	movw	r26, r24
    169c:	cb 01       	movw	r24, r22
    169e:	bc 01       	movw	r22, r24
    16a0:	cd 01       	movw	r24, r26
    16a2:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16a6:	dc 01       	movw	r26, r24
    16a8:	cb 01       	movw	r24, r22
    16aa:	9e 83       	std	Y+6, r25	; 0x06
    16ac:	8d 83       	std	Y+5, r24	; 0x05
    16ae:	0f c0       	rjmp	.+30     	; 0x16ce <_ZN11LCD_HD447804initEv+0x42c>
    16b0:	88 ec       	ldi	r24, 0xC8	; 200
    16b2:	90 e0       	ldi	r25, 0x00	; 0
    16b4:	9c 83       	std	Y+4, r25	; 0x04
    16b6:	8b 83       	std	Y+3, r24	; 0x03
    16b8:	8b 81       	ldd	r24, Y+3	; 0x03
    16ba:	9c 81       	ldd	r25, Y+4	; 0x04
    16bc:	01 97       	sbiw	r24, 0x01	; 1
    16be:	f1 f7       	brne	.-4      	; 0x16bc <_ZN11LCD_HD447804initEv+0x41a>
    16c0:	9c 83       	std	Y+4, r25	; 0x04
    16c2:	8b 83       	std	Y+3, r24	; 0x03
    16c4:	8d 81       	ldd	r24, Y+5	; 0x05
    16c6:	9e 81       	ldd	r25, Y+6	; 0x06
    16c8:	01 97       	sbiw	r24, 0x01	; 1
    16ca:	9e 83       	std	Y+6, r25	; 0x06
    16cc:	8d 83       	std	Y+5, r24	; 0x05
    16ce:	8d 81       	ldd	r24, Y+5	; 0x05
    16d0:	9e 81       	ldd	r25, Y+6	; 0x06
    16d2:	00 97       	sbiw	r24, 0x00	; 0
    16d4:	69 f7       	brne	.-38     	; 0x16b0 <_ZN11LCD_HD447804initEv+0x40e>
    16d6:	14 c0       	rjmp	.+40     	; 0x1700 <_ZN11LCD_HD447804initEv+0x45e>
    16d8:	6f 81       	ldd	r22, Y+7	; 0x07
    16da:	78 85       	ldd	r23, Y+8	; 0x08
    16dc:	89 85       	ldd	r24, Y+9	; 0x09
    16de:	9a 85       	ldd	r25, Y+10	; 0x0a
    16e0:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16e4:	dc 01       	movw	r26, r24
    16e6:	cb 01       	movw	r24, r22
    16e8:	9e 83       	std	Y+6, r25	; 0x06
    16ea:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16ec:	8d 81       	ldd	r24, Y+5	; 0x05
    16ee:	9e 81       	ldd	r25, Y+6	; 0x06
    16f0:	9a 83       	std	Y+2, r25	; 0x02
    16f2:	89 83       	std	Y+1, r24	; 0x01
    16f4:	89 81       	ldd	r24, Y+1	; 0x01
    16f6:	9a 81       	ldd	r25, Y+2	; 0x02
    16f8:	01 97       	sbiw	r24, 0x01	; 1
    16fa:	f1 f7       	brne	.-4      	; 0x16f8 <_ZN11LCD_HD447804initEv+0x456>
    16fc:	9a 83       	std	Y+2, r25	; 0x02
    16fe:	89 83       	std	Y+1, r24	; 0x01
    1700:	86 e0       	ldi	r24, 0x06	; 6
    1702:	ae dc       	rcall	.-1700   	; 0x1060 <_ZN11LCD_HD4478012writeCommandEh>
    1704:	8c e0       	ldi	r24, 0x0C	; 12
    1706:	ac dc       	rcall	.-1704   	; 0x1060 <_ZN11LCD_HD4478012writeCommandEh>
    1708:	e9 96       	adiw	r28, 0x39	; 57
    170a:	0f b6       	in	r0, 0x3f	; 63
    170c:	f8 94       	cli
    170e:	de bf       	out	0x3e, r29	; 62
    1710:	0f be       	out	0x3f, r0	; 63
    1712:	cd bf       	out	0x3d, r28	; 61
    1714:	cf 91       	pop	r28
    1716:	df 91       	pop	r29
    1718:	08 95       	ret

0000171a <_Z9num_roundf>:

bool do_Menu = true;
bool angleOk = false;
bool rotation = false;

int num_round(float number) { //zaokrąglanie floatów
    171a:	df 93       	push	r29
    171c:	cf 93       	push	r28
    171e:	00 d0       	rcall	.+0      	; 0x1720 <_Z9num_roundf+0x6>
    1720:	00 d0       	rcall	.+0      	; 0x1722 <_Z9num_roundf+0x8>
    1722:	00 d0       	rcall	.+0      	; 0x1724 <_Z9num_roundf+0xa>
    1724:	cd b7       	in	r28, 0x3d	; 61
    1726:	de b7       	in	r29, 0x3e	; 62
    1728:	69 83       	std	Y+1, r22	; 0x01
    172a:	7a 83       	std	Y+2, r23	; 0x02
    172c:	8b 83       	std	Y+3, r24	; 0x03
    172e:	9c 83       	std	Y+4, r25	; 0x04
   return (int) (number < 0 ? number - 0.5 : number + 0.5);
    1730:	69 81       	ldd	r22, Y+1	; 0x01
    1732:	7a 81       	ldd	r23, Y+2	; 0x02
    1734:	8b 81       	ldd	r24, Y+3	; 0x03
    1736:	9c 81       	ldd	r25, Y+4	; 0x04
    1738:	20 e0       	ldi	r18, 0x00	; 0
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	40 e0       	ldi	r20, 0x00	; 0
    173e:	50 e0       	ldi	r21, 0x00	; 0
    1740:	6b d8       	rcall	.-3882   	; 0x818 <__ltsf2>
    1742:	88 23       	and	r24, r24
    1744:	a4 f4       	brge	.+40     	; 0x176e <_Z9num_roundf+0x54>
    1746:	69 81       	ldd	r22, Y+1	; 0x01
    1748:	7a 81       	ldd	r23, Y+2	; 0x02
    174a:	8b 81       	ldd	r24, Y+3	; 0x03
    174c:	9c 81       	ldd	r25, Y+4	; 0x04
    174e:	20 e0       	ldi	r18, 0x00	; 0
    1750:	30 e0       	ldi	r19, 0x00	; 0
    1752:	40 e0       	ldi	r20, 0x00	; 0
    1754:	5f e3       	ldi	r21, 0x3F	; 63
    1756:	0e 94 bc 01 	call	0x378	; 0x378 <__subsf3>
    175a:	dc 01       	movw	r26, r24
    175c:	cb 01       	movw	r24, r22
    175e:	bc 01       	movw	r22, r24
    1760:	cd 01       	movw	r24, r26
    1762:	e3 d8       	rcall	.-3642   	; 0x92a <__fixsfsi>
    1764:	dc 01       	movw	r26, r24
    1766:	cb 01       	movw	r24, r22
    1768:	9e 83       	std	Y+6, r25	; 0x06
    176a:	8d 83       	std	Y+5, r24	; 0x05
    176c:	13 c0       	rjmp	.+38     	; 0x1794 <_Z9num_roundf+0x7a>
    176e:	69 81       	ldd	r22, Y+1	; 0x01
    1770:	7a 81       	ldd	r23, Y+2	; 0x02
    1772:	8b 81       	ldd	r24, Y+3	; 0x03
    1774:	9c 81       	ldd	r25, Y+4	; 0x04
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	40 e0       	ldi	r20, 0x00	; 0
    177c:	5f e3       	ldi	r21, 0x3F	; 63
    177e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__addsf3>
    1782:	dc 01       	movw	r26, r24
    1784:	cb 01       	movw	r24, r22
    1786:	bc 01       	movw	r22, r24
    1788:	cd 01       	movw	r24, r26
    178a:	cf d8       	rcall	.-3682   	; 0x92a <__fixsfsi>
    178c:	dc 01       	movw	r26, r24
    178e:	cb 01       	movw	r24, r22
    1790:	9e 83       	std	Y+6, r25	; 0x06
    1792:	8d 83       	std	Y+5, r24	; 0x05
    1794:	8d 81       	ldd	r24, Y+5	; 0x05
    1796:	9e 81       	ldd	r25, Y+6	; 0x06
    1798:	26 96       	adiw	r28, 0x06	; 6
    179a:	0f b6       	in	r0, 0x3f	; 63
    179c:	f8 94       	cli
}
    179e:	de bf       	out	0x3e, r29	; 62
    17a0:	0f be       	out	0x3f, r0	; 63
    17a2:	cd bf       	out	0x3d, r28	; 61
    17a4:	cf 91       	pop	r28
    17a6:	df 91       	pop	r29
    17a8:	08 95       	ret

000017aa <_Z8init_PWMv>:
        }
        cbi(PORTC, i);
    }
}

void init_PWM()
    17aa:	df 93       	push	r29
    17ac:	cf 93       	push	r28
    17ae:	cd b7       	in	r28, 0x3d	; 61
    17b0:	de b7       	in	r29, 0x3e	; 62
{
	TCCR1A |= (1 << WGM10) | (1 << WGM11) | (1 << COM1A1);
    17b2:	af e4       	ldi	r26, 0x4F	; 79
    17b4:	b0 e0       	ldi	r27, 0x00	; 0
    17b6:	ef e4       	ldi	r30, 0x4F	; 79
    17b8:	f0 e0       	ldi	r31, 0x00	; 0
    17ba:	80 81       	ld	r24, Z
    17bc:	83 68       	ori	r24, 0x83	; 131
    17be:	8c 93       	st	X, r24
	TCCR1B |= (1 << WGM12) | (1 << CS12); //prescaler na 256 bitów
    17c0:	ae e4       	ldi	r26, 0x4E	; 78
    17c2:	b0 e0       	ldi	r27, 0x00	; 0
    17c4:	ee e4       	ldi	r30, 0x4E	; 78
    17c6:	f0 e0       	ldi	r31, 0x00	; 0
    17c8:	80 81       	ld	r24, Z
    17ca:	8c 60       	ori	r24, 0x0C	; 12
    17cc:	8c 93       	st	X, r24
}
    17ce:	cf 91       	pop	r28
    17d0:	df 91       	pop	r29
    17d2:	08 95       	ret

000017d4 <_Z6getKeyPi>:

int num_round(float number) { //zaokrąglanie floatów
   return (int) (number < 0 ? number - 0.5 : number + 0.5);
}

void getKey(int *choice)
    17d4:	df 93       	push	r29
    17d6:	cf 93       	push	r28
    17d8:	cd b7       	in	r28, 0x3d	; 61
    17da:	de b7       	in	r29, 0x3e	; 62
    17dc:	28 97       	sbiw	r28, 0x08	; 8
    17de:	0f b6       	in	r0, 0x3f	; 63
    17e0:	f8 94       	cli
    17e2:	de bf       	out	0x3e, r29	; 62
    17e4:	0f be       	out	0x3f, r0	; 63
    17e6:	cd bf       	out	0x3d, r28	; 61
    17e8:	9c 83       	std	Y+4, r25	; 0x04
    17ea:	8b 83       	std	Y+3, r24	; 0x03
{
    for (int i = 0; i < 4; i++)
    17ec:	1a 82       	std	Y+2, r1	; 0x02
    17ee:	19 82       	std	Y+1, r1	; 0x01
    17f0:	21 c1       	rjmp	.+578    	; 0x1a34 <_Z6getKeyPi+0x260>
    {
        sbi(PORTC, i);
    17f2:	a5 e3       	ldi	r26, 0x35	; 53
    17f4:	b0 e0       	ldi	r27, 0x00	; 0
    17f6:	e5 e3       	ldi	r30, 0x35	; 53
    17f8:	f0 e0       	ldi	r31, 0x00	; 0
    17fa:	80 81       	ld	r24, Z
    17fc:	28 2f       	mov	r18, r24
    17fe:	81 e0       	ldi	r24, 0x01	; 1
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	09 80       	ldd	r0, Y+1	; 0x01
    1804:	02 c0       	rjmp	.+4      	; 0x180a <_Z6getKeyPi+0x36>
    1806:	88 0f       	add	r24, r24
    1808:	99 1f       	adc	r25, r25
    180a:	0a 94       	dec	r0
    180c:	e2 f7       	brpl	.-8      	; 0x1806 <_Z6getKeyPi+0x32>
    180e:	82 2b       	or	r24, r18
    1810:	8c 93       	st	X, r24
        if (bit_is_set(PINC, 4))
    1812:	e3 e3       	ldi	r30, 0x33	; 51
    1814:	f0 e0       	ldi	r31, 0x00	; 0
    1816:	80 81       	ld	r24, Z
    1818:	88 2f       	mov	r24, r24
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	80 71       	andi	r24, 0x10	; 16
    181e:	90 70       	andi	r25, 0x00	; 0
    1820:	18 86       	std	Y+8, r1	; 0x08
    1822:	00 97       	sbiw	r24, 0x00	; 0
    1824:	11 f0       	breq	.+4      	; 0x182a <_Z6getKeyPi+0x56>
    1826:	81 e0       	ldi	r24, 0x01	; 1
    1828:	88 87       	std	Y+8, r24	; 0x08
    182a:	88 85       	ldd	r24, Y+8	; 0x08
    182c:	88 23       	and	r24, r24
    182e:	d9 f1       	breq	.+118    	; 0x18a6 <_Z6getKeyPi+0xd2>
        {
            cbi(PORTC, i); // nr 7 na klawiaturze
    1830:	a5 e3       	ldi	r26, 0x35	; 53
    1832:	b0 e0       	ldi	r27, 0x00	; 0
    1834:	e5 e3       	ldi	r30, 0x35	; 53
    1836:	f0 e0       	ldi	r31, 0x00	; 0
    1838:	80 81       	ld	r24, Z
    183a:	28 2f       	mov	r18, r24
    183c:	81 e0       	ldi	r24, 0x01	; 1
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	09 80       	ldd	r0, Y+1	; 0x01
    1842:	02 c0       	rjmp	.+4      	; 0x1848 <_Z6getKeyPi+0x74>
    1844:	88 0f       	add	r24, r24
    1846:	99 1f       	adc	r25, r25
    1848:	0a 94       	dec	r0
    184a:	e2 f7       	brpl	.-8      	; 0x1844 <_Z6getKeyPi+0x70>
    184c:	80 95       	com	r24
    184e:	82 23       	and	r24, r18
    1850:	8c 93       	st	X, r24
            if (i == 0)
    1852:	89 81       	ldd	r24, Y+1	; 0x01
    1854:	9a 81       	ldd	r25, Y+2	; 0x02
    1856:	00 97       	sbiw	r24, 0x00	; 0
    1858:	31 f4       	brne	.+12     	; 0x1866 <_Z6getKeyPi+0x92>
            {
                //LCD_HD44780::showNumber(7);
            	*choice = 7;
    185a:	eb 81       	ldd	r30, Y+3	; 0x03
    185c:	fc 81       	ldd	r31, Y+4	; 0x04
    185e:	87 e0       	ldi	r24, 0x07	; 7
    1860:	90 e0       	ldi	r25, 0x00	; 0
    1862:	91 83       	std	Z+1, r25	; 0x01
    1864:	80 83       	st	Z, r24
            }
            if (i == 1) // nr 8 na klawiaturze
    1866:	89 81       	ldd	r24, Y+1	; 0x01
    1868:	9a 81       	ldd	r25, Y+2	; 0x02
    186a:	81 30       	cpi	r24, 0x01	; 1
    186c:	91 05       	cpc	r25, r1
    186e:	31 f4       	brne	.+12     	; 0x187c <_Z6getKeyPi+0xa8>
            {
                //LCD_HD44780::showNumber(8);
            	*choice = 8;
    1870:	eb 81       	ldd	r30, Y+3	; 0x03
    1872:	fc 81       	ldd	r31, Y+4	; 0x04
    1874:	88 e0       	ldi	r24, 0x08	; 8
    1876:	90 e0       	ldi	r25, 0x00	; 0
    1878:	91 83       	std	Z+1, r25	; 0x01
    187a:	80 83       	st	Z, r24

            }
            if (i == 2) // nr 9 na klawiaturze
    187c:	89 81       	ldd	r24, Y+1	; 0x01
    187e:	9a 81       	ldd	r25, Y+2	; 0x02
    1880:	82 30       	cpi	r24, 0x02	; 2
    1882:	91 05       	cpc	r25, r1
    1884:	31 f4       	brne	.+12     	; 0x1892 <_Z6getKeyPi+0xbe>
            {
                {
                    //LCD_HD44780::showNumber(9);
                	*choice = 9;
    1886:	eb 81       	ldd	r30, Y+3	; 0x03
    1888:	fc 81       	ldd	r31, Y+4	; 0x04
    188a:	89 e0       	ldi	r24, 0x09	; 9
    188c:	90 e0       	ldi	r25, 0x00	; 0
    188e:	91 83       	std	Z+1, r25	; 0x01
    1890:	80 83       	st	Z, r24
                }
            }
            if (i == 3)
    1892:	89 81       	ldd	r24, Y+1	; 0x01
    1894:	9a 81       	ldd	r25, Y+2	; 0x02
    1896:	83 30       	cpi	r24, 0x03	; 3
    1898:	91 05       	cpc	r25, r1
    189a:	09 f0       	breq	.+2      	; 0x189e <_Z6getKeyPi+0xca>
    189c:	b5 c0       	rjmp	.+362    	; 0x1a08 <_Z6getKeyPi+0x234>
            {
                {
                    LCD_HD44780::writeText("/");
    189e:	83 e6       	ldi	r24, 0x63	; 99
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	21 dc       	rcall	.-1982   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    18a4:	b1 c0       	rjmp	.+354    	; 0x1a08 <_Z6getKeyPi+0x234>
    18a6:	e3 e3       	ldi	r30, 0x33	; 51
                }
            }
        }
        else if (bit_is_set(PINC, 5))
    18a8:	f0 e0       	ldi	r31, 0x00	; 0
    18aa:	80 81       	ld	r24, Z
    18ac:	88 2f       	mov	r24, r24
    18ae:	90 e0       	ldi	r25, 0x00	; 0
    18b0:	80 72       	andi	r24, 0x20	; 32
    18b2:	90 70       	andi	r25, 0x00	; 0
    18b4:	1f 82       	std	Y+7, r1	; 0x07
    18b6:	00 97       	sbiw	r24, 0x00	; 0
    18b8:	11 f0       	breq	.+4      	; 0x18be <_Z6getKeyPi+0xea>
    18ba:	81 e0       	ldi	r24, 0x01	; 1
    18bc:	8f 83       	std	Y+7, r24	; 0x07
    18be:	8f 81       	ldd	r24, Y+7	; 0x07
    18c0:	88 23       	and	r24, r24
    18c2:	d9 f1       	breq	.+118    	; 0x193a <_Z6getKeyPi+0x166>
    18c4:	a5 e3       	ldi	r26, 0x35	; 53
        {
            cbi(PORTC, i);
    18c6:	b0 e0       	ldi	r27, 0x00	; 0
    18c8:	e5 e3       	ldi	r30, 0x35	; 53
    18ca:	f0 e0       	ldi	r31, 0x00	; 0
    18cc:	80 81       	ld	r24, Z
    18ce:	28 2f       	mov	r18, r24
    18d0:	81 e0       	ldi	r24, 0x01	; 1
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	09 80       	ldd	r0, Y+1	; 0x01
    18d6:	02 c0       	rjmp	.+4      	; 0x18dc <_Z6getKeyPi+0x108>
    18d8:	88 0f       	add	r24, r24
    18da:	99 1f       	adc	r25, r25
    18dc:	0a 94       	dec	r0
    18de:	e2 f7       	brpl	.-8      	; 0x18d8 <_Z6getKeyPi+0x104>
    18e0:	80 95       	com	r24
    18e2:	82 23       	and	r24, r18
    18e4:	8c 93       	st	X, r24
    18e6:	89 81       	ldd	r24, Y+1	; 0x01
            if (i == 0) // nr 4 na klawiaturze
    18e8:	9a 81       	ldd	r25, Y+2	; 0x02
    18ea:	00 97       	sbiw	r24, 0x00	; 0
    18ec:	31 f4       	brne	.+12     	; 0x18fa <_Z6getKeyPi+0x126>
    18ee:	eb 81       	ldd	r30, Y+3	; 0x03
            {
                //LCD_HD44780::showNumber(4);
            	*choice = 4;
    18f0:	fc 81       	ldd	r31, Y+4	; 0x04
    18f2:	84 e0       	ldi	r24, 0x04	; 4
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	91 83       	std	Z+1, r25	; 0x01
    18f8:	80 83       	st	Z, r24
    18fa:	89 81       	ldd	r24, Y+1	; 0x01
            }
            if (i == 1) // nr 5 na klawiaturze
    18fc:	9a 81       	ldd	r25, Y+2	; 0x02
    18fe:	81 30       	cpi	r24, 0x01	; 1
    1900:	91 05       	cpc	r25, r1
    1902:	31 f4       	brne	.+12     	; 0x1910 <_Z6getKeyPi+0x13c>
    1904:	eb 81       	ldd	r30, Y+3	; 0x03
            {
                //LCD_HD44780::showNumber(5);
            	//LCD_HD44780::clear();
            	*choice = 5;
    1906:	fc 81       	ldd	r31, Y+4	; 0x04
    1908:	85 e0       	ldi	r24, 0x05	; 5
    190a:	90 e0       	ldi	r25, 0x00	; 0
    190c:	91 83       	std	Z+1, r25	; 0x01
    190e:	80 83       	st	Z, r24
    1910:	89 81       	ldd	r24, Y+1	; 0x01

            }
            if (i == 2) // nr 6 na klawiaturze
    1912:	9a 81       	ldd	r25, Y+2	; 0x02
    1914:	82 30       	cpi	r24, 0x02	; 2
    1916:	91 05       	cpc	r25, r1
    1918:	31 f4       	brne	.+12     	; 0x1926 <_Z6getKeyPi+0x152>
    191a:	eb 81       	ldd	r30, Y+3	; 0x03
            {
                //LCD_HD44780::showNumber(6);
            	*choice = 6;
    191c:	fc 81       	ldd	r31, Y+4	; 0x04
    191e:	86 e0       	ldi	r24, 0x06	; 6
    1920:	90 e0       	ldi	r25, 0x00	; 0
    1922:	91 83       	std	Z+1, r25	; 0x01
    1924:	80 83       	st	Z, r24
    1926:	89 81       	ldd	r24, Y+1	; 0x01
            }
            if (i == 3)  // * na klawiaturze
    1928:	9a 81       	ldd	r25, Y+2	; 0x02
    192a:	83 30       	cpi	r24, 0x03	; 3
    192c:	91 05       	cpc	r25, r1
    192e:	09 f0       	breq	.+2      	; 0x1932 <_Z6getKeyPi+0x15e>
    1930:	6b c0       	rjmp	.+214    	; 0x1a08 <_Z6getKeyPi+0x234>
    1932:	85 e6       	ldi	r24, 0x65	; 101
            {
                LCD_HD44780::writeText("*");
    1934:	90 e0       	ldi	r25, 0x00	; 0
    1936:	d7 db       	rcall	.-2130   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    1938:	67 c0       	rjmp	.+206    	; 0x1a08 <_Z6getKeyPi+0x234>
    193a:	e3 e3       	ldi	r30, 0x33	; 51
    193c:	f0 e0       	ldi	r31, 0x00	; 0
            }
        }
        else if (bit_is_set(PINC, 6))
    193e:	80 81       	ld	r24, Z
    1940:	88 2f       	mov	r24, r24
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	80 74       	andi	r24, 0x40	; 64
    1946:	90 70       	andi	r25, 0x00	; 0
    1948:	1e 82       	std	Y+6, r1	; 0x06
    194a:	00 97       	sbiw	r24, 0x00	; 0
    194c:	11 f0       	breq	.+4      	; 0x1952 <_Z6getKeyPi+0x17e>
    194e:	81 e0       	ldi	r24, 0x01	; 1
    1950:	8e 83       	std	Y+6, r24	; 0x06
    1952:	8e 81       	ldd	r24, Y+6	; 0x06
    1954:	88 23       	and	r24, r24
    1956:	91 f1       	breq	.+100    	; 0x19bc <_Z6getKeyPi+0x1e8>
    1958:	a5 e3       	ldi	r26, 0x35	; 53
    195a:	b0 e0       	ldi	r27, 0x00	; 0
        {
            cbi(PORTC, i);
    195c:	e5 e3       	ldi	r30, 0x35	; 53
    195e:	f0 e0       	ldi	r31, 0x00	; 0
    1960:	80 81       	ld	r24, Z
    1962:	28 2f       	mov	r18, r24
    1964:	81 e0       	ldi	r24, 0x01	; 1
    1966:	90 e0       	ldi	r25, 0x00	; 0
    1968:	09 80       	ldd	r0, Y+1	; 0x01
    196a:	02 c0       	rjmp	.+4      	; 0x1970 <_Z6getKeyPi+0x19c>
    196c:	88 0f       	add	r24, r24
    196e:	99 1f       	adc	r25, r25
    1970:	0a 94       	dec	r0
    1972:	e2 f7       	brpl	.-8      	; 0x196c <_Z6getKeyPi+0x198>
    1974:	80 95       	com	r24
    1976:	82 23       	and	r24, r18
    1978:	8c 93       	st	X, r24
    197a:	89 81       	ldd	r24, Y+1	; 0x01
    197c:	9a 81       	ldd	r25, Y+2	; 0x02
            if (i == 0) // nr 1 na klawiaturze
    197e:	00 97       	sbiw	r24, 0x00	; 0
    1980:	31 f4       	brne	.+12     	; 0x198e <_Z6getKeyPi+0x1ba>
    1982:	eb 81       	ldd	r30, Y+3	; 0x03
    1984:	fc 81       	ldd	r31, Y+4	; 0x04
            {
                //LCD_HD44780::showNumber(1);
            	*choice = 1;
    1986:	81 e0       	ldi	r24, 0x01	; 1
    1988:	90 e0       	ldi	r25, 0x00	; 0
    198a:	91 83       	std	Z+1, r25	; 0x01
    198c:	80 83       	st	Z, r24
    198e:	89 81       	ldd	r24, Y+1	; 0x01
    1990:	9a 81       	ldd	r25, Y+2	; 0x02
            }
            if (i == 1) // nr 2 na klawiaturze
    1992:	81 30       	cpi	r24, 0x01	; 1
    1994:	91 05       	cpc	r25, r1
    1996:	31 f4       	brne	.+12     	; 0x19a4 <_Z6getKeyPi+0x1d0>
    1998:	eb 81       	ldd	r30, Y+3	; 0x03
    199a:	fc 81       	ldd	r31, Y+4	; 0x04
            {
                //LCD_HD44780::showNumber(2);
            	*choice = 2;
    199c:	82 e0       	ldi	r24, 0x02	; 2
    199e:	90 e0       	ldi	r25, 0x00	; 0
    19a0:	91 83       	std	Z+1, r25	; 0x01
    19a2:	80 83       	st	Z, r24
    19a4:	89 81       	ldd	r24, Y+1	; 0x01
    19a6:	9a 81       	ldd	r25, Y+2	; 0x02

            }
            if (i == 2) // nr 3 na klawiaturze
    19a8:	82 30       	cpi	r24, 0x02	; 2
    19aa:	91 05       	cpc	r25, r1
    19ac:	69 f5       	brne	.+90     	; 0x1a08 <_Z6getKeyPi+0x234>
    19ae:	eb 81       	ldd	r30, Y+3	; 0x03
    19b0:	fc 81       	ldd	r31, Y+4	; 0x04
            {
                //LCD_HD44780::showNumber(3);
            	*choice = 3;
    19b2:	83 e0       	ldi	r24, 0x03	; 3
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	91 83       	std	Z+1, r25	; 0x01
    19b8:	80 83       	st	Z, r24
    19ba:	26 c0       	rjmp	.+76     	; 0x1a08 <_Z6getKeyPi+0x234>
    19bc:	e3 e3       	ldi	r30, 0x33	; 51
    19be:	f0 e0       	ldi	r31, 0x00	; 0
            {
                //LCD_HD44780::writeText("-");

            }
        }
        else if (bit_is_set(PINC, 7))
    19c0:	80 81       	ld	r24, Z
    19c2:	1d 82       	std	Y+5, r1	; 0x05
    19c4:	88 23       	and	r24, r24
    19c6:	14 f4       	brge	.+4      	; 0x19cc <_Z6getKeyPi+0x1f8>
    19c8:	81 e0       	ldi	r24, 0x01	; 1
    19ca:	8d 83       	std	Y+5, r24	; 0x05
    19cc:	8d 81       	ldd	r24, Y+5	; 0x05
    19ce:	88 23       	and	r24, r24
    19d0:	d9 f0       	breq	.+54     	; 0x1a08 <_Z6getKeyPi+0x234>
    19d2:	89 81       	ldd	r24, Y+1	; 0x01
    19d4:	9a 81       	ldd	r25, Y+2	; 0x02
        {
            if (i == 0) // nr 0 na klawiaturze
    19d6:	00 97       	sbiw	r24, 0x00	; 0
    19d8:	21 f4       	brne	.+8      	; 0x19e2 <_Z6getKeyPi+0x20e>
    19da:	eb 81       	ldd	r30, Y+3	; 0x03
    19dc:	fc 81       	ldd	r31, Y+4	; 0x04
            {
                //LCD_HD44780::showNumber(0);

            	*choice = 0;
    19de:	11 82       	std	Z+1, r1	; 0x01
    19e0:	10 82       	st	Z, r1
    19e2:	89 81       	ldd	r24, Y+1	; 0x01
    19e4:	9a 81       	ldd	r25, Y+2	; 0x02
            }
            if (i == 1)
            {
                //LCD_HD44780::clear();
            }
            if (i == 2)
    19e6:	82 30       	cpi	r24, 0x02	; 2
    19e8:	91 05       	cpc	r25, r1
    19ea:	31 f4       	brne	.+12     	; 0x19f8 <_Z6getKeyPi+0x224>
    19ec:	eb 81       	ldd	r30, Y+3	; 0x03
    19ee:	fc 81       	ldd	r31, Y+4	; 0x04
            {

            	*choice = 11;
    19f0:	8b e0       	ldi	r24, 0x0B	; 11
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	91 83       	std	Z+1, r25	; 0x01
    19f6:	80 83       	st	Z, r24
    19f8:	89 81       	ldd	r24, Y+1	; 0x01
    19fa:	9a 81       	ldd	r25, Y+2	; 0x02
            }

            if (i == 3)
    19fc:	83 30       	cpi	r24, 0x03	; 3
    19fe:	91 05       	cpc	r25, r1
    1a00:	19 f4       	brne	.+6      	; 0x1a08 <_Z6getKeyPi+0x234>
    1a02:	87 e6       	ldi	r24, 0x67	; 103
    1a04:	90 e0       	ldi	r25, 0x00	; 0
            {
                LCD_HD44780::writeText("+");
    1a06:	6f db       	rcall	.-2338   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    1a08:	a5 e3       	ldi	r26, 0x35	; 53
    1a0a:	b0 e0       	ldi	r27, 0x00	; 0
    1a0c:	e5 e3       	ldi	r30, 0x35	; 53
            }
        }
        cbi(PORTC, i);
    1a0e:	f0 e0       	ldi	r31, 0x00	; 0
    1a10:	80 81       	ld	r24, Z
    1a12:	28 2f       	mov	r18, r24
    1a14:	81 e0       	ldi	r24, 0x01	; 1
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	09 80       	ldd	r0, Y+1	; 0x01
    1a1a:	02 c0       	rjmp	.+4      	; 0x1a20 <_Z6getKeyPi+0x24c>
    1a1c:	88 0f       	add	r24, r24
    1a1e:	99 1f       	adc	r25, r25
    1a20:	0a 94       	dec	r0
    1a22:	e2 f7       	brpl	.-8      	; 0x1a1c <_Z6getKeyPi+0x248>
    1a24:	80 95       	com	r24
    1a26:	82 23       	and	r24, r18
    1a28:	8c 93       	st	X, r24
    1a2a:	89 81       	ldd	r24, Y+1	; 0x01
    1a2c:	9a 81       	ldd	r25, Y+2	; 0x02
    1a2e:	01 96       	adiw	r24, 0x01	; 1
   return (int) (number < 0 ? number - 0.5 : number + 0.5);
}

void getKey(int *choice)
{
    for (int i = 0; i < 4; i++)
    1a30:	9a 83       	std	Y+2, r25	; 0x02
    1a32:	89 83       	std	Y+1, r24	; 0x01
    1a34:	89 81       	ldd	r24, Y+1	; 0x01
    1a36:	9a 81       	ldd	r25, Y+2	; 0x02
    1a38:	84 30       	cpi	r24, 0x04	; 4
    1a3a:	91 05       	cpc	r25, r1
    1a3c:	0c f4       	brge	.+2      	; 0x1a40 <_Z6getKeyPi+0x26c>
    1a3e:	d9 ce       	rjmp	.-590    	; 0x17f2 <_Z6getKeyPi+0x1e>
    1a40:	28 96       	adiw	r28, 0x08	; 8
    1a42:	0f b6       	in	r0, 0x3f	; 63
    1a44:	f8 94       	cli
                LCD_HD44780::writeText("+");
            }
        }
        cbi(PORTC, i);
    }
}
    1a46:	de bf       	out	0x3e, r29	; 62
    1a48:	0f be       	out	0x3f, r0	; 63
    1a4a:	cd bf       	out	0x3d, r28	; 61
    1a4c:	cf 91       	pop	r28
    1a4e:	df 91       	pop	r29
    1a50:	08 95       	ret

00001a52 <_Z4Spinv>:
	}
	_delay_ms(200);
}

/*chyba wywalic*/
void Spin(){ // Sta³e obracanie serwa
    1a52:	df 93       	push	r29
    1a54:	cf 93       	push	r28
    1a56:	cd b7       	in	r28, 0x3d	; 61
    1a58:	de b7       	in	r29, 0x3e	; 62
	LCD_HD44780::clear();
    1a5a:	a0 db       	rcall	.-2240   	; 0x119c <_ZN11LCD_HD447805clearEv>
    1a5c:	89 e6       	ldi	r24, 0x69	; 105
	LCD_HD44780::writeText("You spin me");
    1a5e:	90 e0       	ldi	r25, 0x00	; 0
    1a60:	42 db       	rcall	.-2428   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    1a62:	80 e0       	ldi	r24, 0x00	; 0
    1a64:	61 e0       	ldi	r22, 0x01	; 1
	LCD_HD44780::goTo(0,1);
    1a66:	0f db       	rcall	.-2530   	; 0x1086 <_ZN11LCD_HD447804goToEhh>
    1a68:	85 e7       	ldi	r24, 0x75	; 117
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	3c db       	rcall	.-2440   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
	//LCD_HD44780::clear();
	LCD_HD44780::writeText("Right round");
    1a6e:	cf 91       	pop	r28
    1a70:	df 91       	pop	r29
    1a72:	08 95       	ret

00001a74 <_Z6Bouncev>:
{
	TCCR1A |= (1 << WGM10) | (1 << WGM11) | (1 << COM1A1);
	TCCR1B |= (1 << WGM12) | (1 << CS12); //prescaler na 256 bitów
}

void Bounce(){ //  "Odbijanie" serwa
    1a74:	df 93       	push	r29
    1a76:	cf 93       	push	r28
    1a78:	cd b7       	in	r28, 0x3d	; 61
    1a7a:	de b7       	in	r29, 0x3e	; 62
	LCD_HD44780::clear();
    1a7c:	8f db       	rcall	.-2274   	; 0x119c <_ZN11LCD_HD447805clearEv>
    1a7e:	81 e8       	ldi	r24, 0x81	; 129
	LCD_HD44780::writeText("Bounce, bounce");
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	31 db       	rcall	.-2462   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    1a84:	80 e0       	ldi	r24, 0x00	; 0
    1a86:	61 e0       	ldi	r22, 0x01	; 1
	LCD_HD44780::goTo(0,1);
    1a88:	fe da       	rcall	.-2564   	; 0x1086 <_ZN11LCD_HD447804goToEhh>
    1a8a:	cf 91       	pop	r28
    1a8c:	df 91       	pop	r29
    1a8e:	08 95       	ret

00001a90 <_Z4Exitv>:
	LCD_HD44780::goTo(0,1);
	//LCD_HD44780::clear();
	LCD_HD44780::writeText("Right round");
}

void Exit(){ // Wy³¹czenie serwa i ekranu
    1a90:	df 93       	push	r29
    1a92:	cf 93       	push	r28
    1a94:	cd b7       	in	r28, 0x3d	; 61
    1a96:	de b7       	in	r29, 0x3e	; 62
	LCD_HD44780::writeCommand(HD44780_DISPLAY_ONOFF | HD44780_DISPLAY_OFF); // wy³¹czenie ekranu
    1a98:	88 e0       	ldi	r24, 0x08	; 8
    1a9a:	e2 da       	rcall	.-2620   	; 0x1060 <_ZN11LCD_HD4478012writeCommandEh>
    1a9c:	cf 91       	pop	r28
}
    1a9e:	df 91       	pop	r29
    1aa0:	08 95       	ret

00001aa2 <_Z4MenuPiS_PPc>:

void Menu(int *choice,int *page ,char *opcje1[]){
    1aa2:	df 93       	push	r29
    1aa4:	cf 93       	push	r28
    1aa6:	cd b7       	in	r28, 0x3d	; 61
    1aa8:	de b7       	in	r29, 0x3e	; 62
    1aaa:	66 97       	sbiw	r28, 0x16	; 22
    1aac:	0f b6       	in	r0, 0x3f	; 63
    1aae:	f8 94       	cli
    1ab0:	de bf       	out	0x3e, r29	; 62
    1ab2:	0f be       	out	0x3f, r0	; 63
    1ab4:	cd bf       	out	0x3d, r28	; 61
    1ab6:	98 8b       	std	Y+16, r25	; 0x10
    1ab8:	8f 87       	std	Y+15, r24	; 0x0f
    1aba:	7a 8b       	std	Y+18, r23	; 0x12
    1abc:	69 8b       	std	Y+17, r22	; 0x11
    1abe:	5c 8b       	std	Y+20, r21	; 0x14
    1ac0:	4b 8b       	std	Y+19, r20	; 0x13

	LCD_HD44780::clear();
    1ac2:	6c db       	rcall	.-2344   	; 0x119c <_ZN11LCD_HD447805clearEv>
    1ac4:	8f 85       	ldd	r24, Y+15	; 0x0f

	getKey(choice); //wybieranie opcji(3 mozliwosci: pokaz nastepna opcje, pokaz poprzednia opcje, wybierz opcje)
    1ac6:	98 89       	ldd	r25, Y+16	; 0x10
    1ac8:	85 de       	rcall	.-758    	; 0x17d4 <_Z6getKeyPi>
    1aca:	ef 85       	ldd	r30, Y+15	; 0x0f
    1acc:	f8 89       	ldd	r31, Y+16	; 0x10
	//LCD_HD44780::showNumber(*choice); // do debuggowania w razie problemow

	if(*choice == 8){
    1ace:	80 81       	ld	r24, Z
    1ad0:	91 81       	ldd	r25, Z+1	; 0x01
    1ad2:	88 30       	cpi	r24, 0x08	; 8
    1ad4:	91 05       	cpc	r25, r1
    1ad6:	d9 f4       	brne	.+54     	; 0x1b0e <_Z4MenuPiS_PPc+0x6c>
    1ad8:	e9 89       	ldd	r30, Y+17	; 0x11
    1ada:	fa 89       	ldd	r31, Y+18	; 0x12
		if(--(*page)<0)
    1adc:	80 81       	ld	r24, Z
    1ade:	91 81       	ldd	r25, Z+1	; 0x01
    1ae0:	01 97       	sbiw	r24, 0x01	; 1
    1ae2:	e9 89       	ldd	r30, Y+17	; 0x11
    1ae4:	fa 89       	ldd	r31, Y+18	; 0x12
    1ae6:	91 83       	std	Z+1, r25	; 0x01
    1ae8:	80 83       	st	Z, r24
    1aea:	e9 89       	ldd	r30, Y+17	; 0x11
    1aec:	fa 89       	ldd	r31, Y+18	; 0x12
    1aee:	80 81       	ld	r24, Z
    1af0:	91 81       	ldd	r25, Z+1	; 0x01
    1af2:	1e 8a       	std	Y+22, r1	; 0x16
    1af4:	99 23       	and	r25, r25
    1af6:	14 f4       	brge	.+4      	; 0x1afc <_Z4MenuPiS_PPc+0x5a>
    1af8:	81 e0       	ldi	r24, 0x01	; 1
    1afa:	8e 8b       	std	Y+22, r24	; 0x16
    1afc:	8e 89       	ldd	r24, Y+22	; 0x16
    1afe:	88 23       	and	r24, r24
    1b00:	31 f0       	breq	.+12     	; 0x1b0e <_Z4MenuPiS_PPc+0x6c>
    1b02:	e9 89       	ldd	r30, Y+17	; 0x11
    1b04:	fa 89       	ldd	r31, Y+18	; 0x12
			(*page) = ILE_OPCJI-1;
    1b06:	83 e0       	ldi	r24, 0x03	; 3
    1b08:	90 e0       	ldi	r25, 0x00	; 0
    1b0a:	91 83       	std	Z+1, r25	; 0x01
    1b0c:	80 83       	st	Z, r24
    1b0e:	ef 85       	ldd	r30, Y+15	; 0x0f
    1b10:	f8 89       	ldd	r31, Y+16	; 0x10
	}
	if(*choice == 2){
    1b12:	80 81       	ld	r24, Z
    1b14:	91 81       	ldd	r25, Z+1	; 0x01
    1b16:	82 30       	cpi	r24, 0x02	; 2
    1b18:	91 05       	cpc	r25, r1
    1b1a:	d1 f4       	brne	.+52     	; 0x1b50 <_Z4MenuPiS_PPc+0xae>
    1b1c:	e9 89       	ldd	r30, Y+17	; 0x11
    1b1e:	fa 89       	ldd	r31, Y+18	; 0x12
		if(++(*page)>(ILE_OPCJI-1))
    1b20:	80 81       	ld	r24, Z
    1b22:	91 81       	ldd	r25, Z+1	; 0x01
    1b24:	01 96       	adiw	r24, 0x01	; 1
    1b26:	e9 89       	ldd	r30, Y+17	; 0x11
    1b28:	fa 89       	ldd	r31, Y+18	; 0x12
    1b2a:	91 83       	std	Z+1, r25	; 0x01
    1b2c:	80 83       	st	Z, r24
    1b2e:	e9 89       	ldd	r30, Y+17	; 0x11
    1b30:	fa 89       	ldd	r31, Y+18	; 0x12
    1b32:	80 81       	ld	r24, Z
    1b34:	91 81       	ldd	r25, Z+1	; 0x01
    1b36:	1d 8a       	std	Y+21, r1	; 0x15
    1b38:	84 30       	cpi	r24, 0x04	; 4
    1b3a:	91 05       	cpc	r25, r1
    1b3c:	14 f0       	brlt	.+4      	; 0x1b42 <_Z4MenuPiS_PPc+0xa0>
    1b3e:	81 e0       	ldi	r24, 0x01	; 1
    1b40:	8d 8b       	std	Y+21, r24	; 0x15
    1b42:	8d 89       	ldd	r24, Y+21	; 0x15
    1b44:	88 23       	and	r24, r24
    1b46:	21 f0       	breq	.+8      	; 0x1b50 <_Z4MenuPiS_PPc+0xae>
    1b48:	e9 89       	ldd	r30, Y+17	; 0x11
    1b4a:	fa 89       	ldd	r31, Y+18	; 0x12
			(*page) = 0;
    1b4c:	11 82       	std	Z+1, r1	; 0x01
    1b4e:	10 82       	st	Z, r1
    1b50:	80 e9       	ldi	r24, 0x90	; 144
    1b52:	90 e0       	ldi	r25, 0x00	; 0
	}

	LCD_HD44780::writeText("MENU");
    1b54:	c8 da       	rcall	.-2672   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    1b56:	80 e0       	ldi	r24, 0x00	; 0
    1b58:	61 e0       	ldi	r22, 0x01	; 1
    1b5a:	95 da       	rcall	.-2774   	; 0x1086 <_ZN11LCD_HD447804goToEhh>
	//LCD_HD44780::showNumber(*choice); // do debuggowania w razie problemow
	LCD_HD44780::goTo(0,1);
    1b5c:	e9 89       	ldd	r30, Y+17	; 0x11
    1b5e:	fa 89       	ldd	r31, Y+18	; 0x12
    1b60:	80 81       	ld	r24, Z
    1b62:	91 81       	ldd	r25, Z+1	; 0x01
	LCD_HD44780::writeText(opcje1[*page]); //tu wypisywana jest aktualnie przegl¹dana opcja
    1b64:	9c 01       	movw	r18, r24
    1b66:	22 0f       	add	r18, r18
    1b68:	33 1f       	adc	r19, r19
    1b6a:	8b 89       	ldd	r24, Y+19	; 0x13
    1b6c:	9c 89       	ldd	r25, Y+20	; 0x14
    1b6e:	fc 01       	movw	r30, r24
    1b70:	e2 0f       	add	r30, r18
    1b72:	f3 1f       	adc	r31, r19
    1b74:	80 81       	ld	r24, Z
    1b76:	91 81       	ldd	r25, Z+1	; 0x01
    1b78:	b6 da       	rcall	.-2708   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    1b7a:	ef 85       	ldd	r30, Y+15	; 0x0f
    1b7c:	f8 89       	ldd	r31, Y+16	; 0x10
    1b7e:	80 81       	ld	r24, Z
    1b80:	91 81       	ldd	r25, Z+1	; 0x01
    1b82:	85 30       	cpi	r24, 0x05	; 5

	if(*choice == 5){
    1b84:	91 05       	cpc	r25, r1
    1b86:	11 f4       	brne	.+4      	; 0x1b8c <_Z4MenuPiS_PPc+0xea>
    1b88:	10 92 fd 01 	sts	0x01FD, r1
    1b8c:	80 e0       	ldi	r24, 0x00	; 0
    1b8e:	90 e0       	ldi	r25, 0x00	; 0
    1b90:	a8 e4       	ldi	r26, 0x48	; 72
		do_Menu = false;
    1b92:	b3 e4       	ldi	r27, 0x43	; 67
    1b94:	8b 87       	std	Y+11, r24	; 0x0b
    1b96:	9c 87       	std	Y+12, r25	; 0x0c
    1b98:	ad 87       	std	Y+13, r26	; 0x0d
    1b9a:	be 87       	std	Y+14, r27	; 0x0e
    1b9c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b9e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ba0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ba2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ba4:	20 e0       	ldi	r18, 0x00	; 0
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ba6:	30 e0       	ldi	r19, 0x00	; 0
    1ba8:	4a ef       	ldi	r20, 0xFA	; 250
    1baa:	54 e4       	ldi	r21, 0x44	; 68
    1bac:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1bb0:	dc 01       	movw	r26, r24
    1bb2:	cb 01       	movw	r24, r22
    1bb4:	8f 83       	std	Y+7, r24	; 0x07
    1bb6:	98 87       	std	Y+8, r25	; 0x08
    1bb8:	a9 87       	std	Y+9, r26	; 0x09
    1bba:	ba 87       	std	Y+10, r27	; 0x0a
    1bbc:	6f 81       	ldd	r22, Y+7	; 0x07
    1bbe:	78 85       	ldd	r23, Y+8	; 0x08
    1bc0:	89 85       	ldd	r24, Y+9	; 0x09
    1bc2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bc4:	20 e0       	ldi	r18, 0x00	; 0
	if (__tmp < 1.0)
    1bc6:	30 e0       	ldi	r19, 0x00	; 0
    1bc8:	40 e8       	ldi	r20, 0x80	; 128
    1bca:	5f e3       	ldi	r21, 0x3F	; 63
    1bcc:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    1bd0:	88 23       	and	r24, r24
    1bd2:	2c f4       	brge	.+10     	; 0x1bde <_Z4MenuPiS_PPc+0x13c>
    1bd4:	81 e0       	ldi	r24, 0x01	; 1
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	9e 83       	std	Y+6, r25	; 0x06
    1bda:	8d 83       	std	Y+5, r24	; 0x05
    1bdc:	3f c0       	rjmp	.+126    	; 0x1c5c <_Z4MenuPiS_PPc+0x1ba>
		__ticks = 1;
    1bde:	6f 81       	ldd	r22, Y+7	; 0x07
    1be0:	78 85       	ldd	r23, Y+8	; 0x08
    1be2:	89 85       	ldd	r24, Y+9	; 0x09
    1be4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1be6:	20 e0       	ldi	r18, 0x00	; 0
	else if (__tmp > 65535)
    1be8:	3f ef       	ldi	r19, 0xFF	; 255
    1bea:	4f e7       	ldi	r20, 0x7F	; 127
    1bec:	57 e4       	ldi	r21, 0x47	; 71
    1bee:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
    1bf2:	18 16       	cp	r1, r24
    1bf4:	4c f5       	brge	.+82     	; 0x1c48 <_Z4MenuPiS_PPc+0x1a6>
    1bf6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bf8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bfa:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bfc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bfe:	20 e0       	ldi	r18, 0x00	; 0
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c00:	30 e0       	ldi	r19, 0x00	; 0
    1c02:	40 e2       	ldi	r20, 0x20	; 32
    1c04:	51 e4       	ldi	r21, 0x41	; 65
    1c06:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1c0a:	dc 01       	movw	r26, r24
    1c0c:	cb 01       	movw	r24, r22
    1c0e:	bc 01       	movw	r22, r24
    1c10:	cd 01       	movw	r24, r26
    1c12:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1c16:	dc 01       	movw	r26, r24
    1c18:	cb 01       	movw	r24, r22
    1c1a:	9e 83       	std	Y+6, r25	; 0x06
    1c1c:	8d 83       	std	Y+5, r24	; 0x05
    1c1e:	0f c0       	rjmp	.+30     	; 0x1c3e <_Z4MenuPiS_PPc+0x19c>
    1c20:	88 ec       	ldi	r24, 0xC8	; 200
    1c22:	90 e0       	ldi	r25, 0x00	; 0
    1c24:	9c 83       	std	Y+4, r25	; 0x04
    1c26:	8b 83       	std	Y+3, r24	; 0x03
    1c28:	8b 81       	ldd	r24, Y+3	; 0x03
    1c2a:	9c 81       	ldd	r25, Y+4	; 0x04
    1c2c:	01 97       	sbiw	r24, 0x01	; 1
    1c2e:	f1 f7       	brne	.-4      	; 0x1c2c <_Z4MenuPiS_PPc+0x18a>
    1c30:	9c 83       	std	Y+4, r25	; 0x04
    1c32:	8b 83       	std	Y+3, r24	; 0x03
    1c34:	8d 81       	ldd	r24, Y+5	; 0x05
    1c36:	9e 81       	ldd	r25, Y+6	; 0x06
    1c38:	01 97       	sbiw	r24, 0x01	; 1
    1c3a:	9e 83       	std	Y+6, r25	; 0x06
    1c3c:	8d 83       	std	Y+5, r24	; 0x05
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c3e:	8d 81       	ldd	r24, Y+5	; 0x05
    1c40:	9e 81       	ldd	r25, Y+6	; 0x06
    1c42:	00 97       	sbiw	r24, 0x00	; 0
    1c44:	69 f7       	brne	.-38     	; 0x1c20 <_Z4MenuPiS_PPc+0x17e>
    1c46:	14 c0       	rjmp	.+40     	; 0x1c70 <_Z4MenuPiS_PPc+0x1ce>
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c48:	6f 81       	ldd	r22, Y+7	; 0x07
    1c4a:	78 85       	ldd	r23, Y+8	; 0x08
    1c4c:	89 85       	ldd	r24, Y+9	; 0x09
    1c4e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c50:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c54:	dc 01       	movw	r26, r24
    1c56:	cb 01       	movw	r24, r22
    1c58:	9e 83       	std	Y+6, r25	; 0x06
    1c5a:	8d 83       	std	Y+5, r24	; 0x05
    1c5c:	8d 81       	ldd	r24, Y+5	; 0x05
    1c5e:	9e 81       	ldd	r25, Y+6	; 0x06
    1c60:	9a 83       	std	Y+2, r25	; 0x02
    1c62:	89 83       	std	Y+1, r24	; 0x01
    1c64:	89 81       	ldd	r24, Y+1	; 0x01
    1c66:	9a 81       	ldd	r25, Y+2	; 0x02
    1c68:	01 97       	sbiw	r24, 0x01	; 1
    1c6a:	f1 f7       	brne	.-4      	; 0x1c68 <_Z4MenuPiS_PPc+0x1c6>
    1c6c:	9a 83       	std	Y+2, r25	; 0x02
    1c6e:	89 83       	std	Y+1, r24	; 0x01
    1c70:	66 96       	adiw	r28, 0x16	; 22
    1c72:	0f b6       	in	r0, 0x3f	; 63
    1c74:	f8 94       	cli
    1c76:	de bf       	out	0x3e, r29	; 62
    1c78:	0f be       	out	0x3f, r0	; 63
	}

	_delay_ms(200);
}
    1c7a:	cd bf       	out	0x3d, r28	; 61
    1c7c:	cf 91       	pop	r28
    1c7e:	df 91       	pop	r29
    1c80:	08 95       	ret

00001c82 <_Z6RotatePiPc>:
	LCD_HD44780::writeText("Bounce, bounce");
	LCD_HD44780::goTo(0,1);
	//LCD_HD44780::clear();
}

void Rotate(int *choice, char *kat){ // Obrót serwa o dowolny k¹t
    1c82:	df 93       	push	r29
    1c84:	cf 93       	push	r28
    1c86:	cd b7       	in	r28, 0x3d	; 61
    1c88:	de b7       	in	r29, 0x3e	; 62
    1c8a:	ad 97       	sbiw	r28, 0x2d	; 45
    1c8c:	0f b6       	in	r0, 0x3f	; 63
    1c8e:	f8 94       	cli
    1c90:	de bf       	out	0x3e, r29	; 62
    1c92:	0f be       	out	0x3f, r0	; 63
    1c94:	cd bf       	out	0x3d, r28	; 61
    1c96:	9b a7       	std	Y+43, r25	; 0x2b
    1c98:	8a a7       	std	Y+42, r24	; 0x2a
    1c9a:	7d a7       	std	Y+45, r23	; 0x2d
    1c9c:	6c a7       	std	Y+44, r22	; 0x2c
	char c;
	int angle = -1;
    1c9e:	8f ef       	ldi	r24, 0xFF	; 255
    1ca0:	9f ef       	ldi	r25, 0xFF	; 255
    1ca2:	98 a7       	std	Y+40, r25	; 0x28
    1ca4:	8f a3       	std	Y+39, r24	; 0x27
	int pom = angle;
    1ca6:	8f a1       	ldd	r24, Y+39	; 0x27
    1ca8:	98 a5       	ldd	r25, Y+40	; 0x28
    1caa:	9e a3       	std	Y+38, r25	; 0x26
    1cac:	8d a3       	std	Y+37, r24	; 0x25
	int rot_angle;
	int rot_serv;
	int current_angle;
	LCD_HD44780::clear();
    1cae:	76 da       	rcall	.-2836   	; 0x119c <_ZN11LCD_HD447805clearEv>
    1cb0:	8a a5       	ldd	r24, Y+42	; 0x2a

	getKey(choice);
    1cb2:	9b a5       	ldd	r25, Y+43	; 0x2b
    1cb4:	8f dd       	rcall	.-1250   	; 0x17d4 <_Z6getKeyPi>
    1cb6:	ea a5       	ldd	r30, Y+42	; 0x2a
    1cb8:	fb a5       	ldd	r31, Y+43	; 0x2b
	if((*choice)!=11 && angleOk == false)
    1cba:	80 81       	ld	r24, Z
    1cbc:	91 81       	ldd	r25, Z+1	; 0x01
    1cbe:	8b 30       	cpi	r24, 0x0B	; 11
    1cc0:	91 05       	cpc	r25, r1
    1cc2:	91 f1       	breq	.+100    	; 0x1d28 <_Z6RotatePiPc+0xa6>
    1cc4:	90 91 06 02 	lds	r25, 0x0206
    1cc8:	81 e0       	ldi	r24, 0x01	; 1
    1cca:	98 27       	eor	r25, r24
    1ccc:	81 e0       	ldi	r24, 0x01	; 1
    1cce:	89 27       	eor	r24, r25
    1cd0:	88 23       	and	r24, r24
    1cd2:	51 f5       	brne	.+84     	; 0x1d28 <_Z6RotatePiPc+0xa6>
    1cd4:	85 e9       	ldi	r24, 0x95	; 149
    1cd6:	90 e0       	ldi	r25, 0x00	; 0
	{
		LCD_HD44780::writeText("What's the angle: ");
    1cd8:	06 da       	rcall	.-3060   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    1cda:	80 e0       	ldi	r24, 0x00	; 0
    1cdc:	61 e0       	ldi	r22, 0x01	; 1
    1cde:	d3 d9       	rcall	.-3162   	; 0x1086 <_ZN11LCD_HD447804goToEhh>
		LCD_HD44780::goTo(0,1);
    1ce0:	ea a5       	ldd	r30, Y+42	; 0x2a
    1ce2:	fb a5       	ldd	r31, Y+43	; 0x2b
    1ce4:	80 81       	ld	r24, Z
    1ce6:	91 81       	ldd	r25, Z+1	; 0x01
		angle=(*choice);
    1ce8:	98 a7       	std	Y+40, r25	; 0x28
    1cea:	8f a3       	std	Y+39, r24	; 0x27
    1cec:	2f a1       	ldd	r18, Y+39	; 0x27
    1cee:	38 a5       	ldd	r19, Y+40	; 0x28
    1cf0:	8d a1       	ldd	r24, Y+37	; 0x25
    1cf2:	9e a1       	ldd	r25, Y+38	; 0x26
		if(angle!=pom){
    1cf4:	28 17       	cp	r18, r24
    1cf6:	39 07       	cpc	r19, r25
    1cf8:	61 f0       	breq	.+24     	; 0x1d12 <_Z6RotatePiPc+0x90>
    1cfa:	8f a1       	ldd	r24, Y+39	; 0x27
    1cfc:	80 5d       	subi	r24, 0xD0	; 208
    1cfe:	89 a7       	std	Y+41, r24	; 0x29
    1d00:	8c a5       	ldd	r24, Y+44	; 0x2c
			c = angle+'0'; 		//zamiana liczby na char
    1d02:	9d a5       	ldd	r25, Y+45	; 0x2d
    1d04:	9e 01       	movw	r18, r28
    1d06:	27 5d       	subi	r18, 0xD7	; 215
			strncat(kat, &c, 1);	//dopisanie (cyfry) znaku do dotychczasowego łańcucha (liczby)
    1d08:	3f 4f       	sbci	r19, 0xFF	; 255
    1d0a:	b9 01       	movw	r22, r18
    1d0c:	41 e0       	ldi	r20, 0x01	; 1
    1d0e:	50 e0       	ldi	r21, 0x00	; 0
    1d10:	5f d2       	rcall	.+1214   	; 0x21d0 <strncat>
    1d12:	8c a5       	ldd	r24, Y+44	; 0x2c
    1d14:	9d a5       	ldd	r25, Y+45	; 0x2d
    1d16:	38 d2       	rcall	.+1136   	; 0x2188 <atoi>
    1d18:	aa 27       	eor	r26, r26
    1d1a:	97 fd       	sbrc	r25, 7
		}
		LCD_HD44780::showNumber(atoi(kat));
    1d1c:	a0 95       	com	r26
    1d1e:	ba 2f       	mov	r27, r26
    1d20:	bc 01       	movw	r22, r24
    1d22:	cd 01       	movw	r24, r26
    1d24:	fc d9       	rcall	.-3080   	; 0x111e <_ZN11LCD_HD4478010showNumberEl>
    1d26:	19 c0       	rjmp	.+50     	; 0x1d5a <_Z6RotatePiPc+0xd8>
    1d28:	81 e0       	ldi	r24, 0x01	; 1
    1d2a:	80 93 06 02 	sts	0x0206, r24
    1d2e:	8c a5       	ldd	r24, Y+44	; 0x2c
    1d30:	9d a5       	ldd	r25, Y+45	; 0x2d
    1d32:	2a d2       	rcall	.+1108   	; 0x2188 <atoi>
    1d34:	9c a3       	std	Y+36, r25	; 0x24

	}
	else{
		angleOk = true;
    1d36:	8b a3       	std	Y+35, r24	; 0x23
    1d38:	8c a5       	ldd	r24, Y+44	; 0x2c
    1d3a:	9d a5       	ldd	r25, Y+45	; 0x2d
		rot_angle = atoi(kat);
    1d3c:	60 e0       	ldi	r22, 0x00	; 0
    1d3e:	70 e0       	ldi	r23, 0x00	; 0
    1d40:	42 e0       	ldi	r20, 0x02	; 2
    1d42:	50 e0       	ldi	r21, 0x00	; 0
    1d44:	3e d2       	rcall	.+1148   	; 0x21c2 <memset>
    1d46:	ea a5       	ldd	r30, Y+42	; 0x2a
		memset( kat, 0, sizeof(kat) );
    1d48:	fb a5       	ldd	r31, Y+43	; 0x2b
    1d4a:	8f ef       	ldi	r24, 0xFF	; 255
    1d4c:	9f ef       	ldi	r25, 0xFF	; 255
    1d4e:	91 83       	std	Z+1, r25	; 0x01
    1d50:	80 83       	st	Z, r24
    1d52:	8f ef       	ldi	r24, 0xFF	; 255
    1d54:	9f ef       	ldi	r25, 0xFF	; 255
    1d56:	98 a7       	std	Y+40, r25	; 0x28
		*choice = -1;
    1d58:	8f a3       	std	Y+39, r24	; 0x27
    1d5a:	80 91 06 02 	lds	r24, 0x0206
    1d5e:	88 23       	and	r24, r24
    1d60:	09 f4       	brne	.+2      	; 0x1d64 <_Z6RotatePiPc+0xe2>
    1d62:	ce c0       	rjmp	.+412    	; 0x1f00 <_Z6RotatePiPc+0x27e>
		angle = -1;
    1d64:	88 ea       	ldi	r24, 0xA8	; 168
    1d66:	90 e0       	ldi	r25, 0x00	; 0
    1d68:	be d9       	rcall	.-3204   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    1d6a:	8b a1       	ldd	r24, Y+35	; 0x23

	}

	if(angleOk == true) //wartośc choice==11 oznacza, ze akceptujemy wybrany kat
    1d6c:	9c a1       	ldd	r25, Y+36	; 0x24
    1d6e:	aa 27       	eor	r26, r26
    1d70:	97 fd       	sbrc	r25, 7
    1d72:	a0 95       	com	r26
    1d74:	ba 2f       	mov	r27, r26
	{

		LCD_HD44780::writeText("Rotating by: ");
    1d76:	bc 01       	movw	r22, r24
    1d78:	cd 01       	movw	r24, r26
    1d7a:	d1 d9       	rcall	.-3166   	; 0x111e <_ZN11LCD_HD4478010showNumberEl>
    1d7c:	80 e0       	ldi	r24, 0x00	; 0
		LCD_HD44780::showNumber(rot_angle);
    1d7e:	61 e0       	ldi	r22, 0x01	; 1
    1d80:	82 d9       	rcall	.-3324   	; 0x1086 <_ZN11LCD_HD447804goToEhh>
    1d82:	86 eb       	ldi	r24, 0xB6	; 182
    1d84:	90 e0       	ldi	r25, 0x00	; 0
    1d86:	af d9       	rcall	.-3234   	; 0x10e6 <_ZN11LCD_HD447809writeTextEPc>
    1d88:	8b a1       	ldd	r24, Y+35	; 0x23
    1d8a:	9c a1       	ldd	r25, Y+36	; 0x24
    1d8c:	88 0f       	add	r24, r24
    1d8e:	99 1f       	adc	r25, r25
    1d90:	82 95       	swap	r24
		LCD_HD44780::goTo(0,1);
    1d92:	92 95       	swap	r25
    1d94:	90 7f       	andi	r25, 0xF0	; 240
    1d96:	98 27       	eor	r25, r24
    1d98:	80 7f       	andi	r24, 0xF0	; 240
		LCD_HD44780::writeText("Rotating...");
    1d9a:	98 27       	eor	r25, r24
    1d9c:	aa 27       	eor	r26, r26
    1d9e:	97 fd       	sbrc	r25, 7
    1da0:	a0 95       	com	r26

		/*tutaj servo wchodzi*/
		rot_serv = num_round( (SERV_MAX-SERV_MIN)*rot_angle/180.0 );
    1da2:	ba 2f       	mov	r27, r26
    1da4:	bc 01       	movw	r22, r24
    1da6:	cd 01       	movw	r24, r26
    1da8:	0e 94 39 04 	call	0x872	; 0x872 <__floatsisf>
    1dac:	dc 01       	movw	r26, r24
    1dae:	cb 01       	movw	r24, r22
    1db0:	bc 01       	movw	r22, r24
    1db2:	cd 01       	movw	r24, r26
    1db4:	20 e0       	ldi	r18, 0x00	; 0
    1db6:	30 e0       	ldi	r19, 0x00	; 0
    1db8:	44 e3       	ldi	r20, 0x34	; 52
    1dba:	53 e4       	ldi	r21, 0x43	; 67
    1dbc:	0e 94 09 03 	call	0x612	; 0x612 <__divsf3>
    1dc0:	dc 01       	movw	r26, r24
    1dc2:	cb 01       	movw	r24, r22
    1dc4:	bc 01       	movw	r22, r24
    1dc6:	cd 01       	movw	r24, r26
    1dc8:	a8 dc       	rcall	.-1712   	; 0x171a <_Z9num_roundf>
    1dca:	9a a3       	std	Y+34, r25	; 0x22
    1dcc:	89 a3       	std	Y+33, r24	; 0x21
    1dce:	ea e4       	ldi	r30, 0x4A	; 74
    1dd0:	f0 e0       	ldi	r31, 0x00	; 0
    1dd2:	80 81       	ld	r24, Z
    1dd4:	91 81       	ldd	r25, Z+1	; 0x01
    1dd6:	98 a3       	std	Y+32, r25	; 0x20
    1dd8:	8f 8f       	std	Y+31, r24	; 0x1f
    1dda:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ddc:	98 a1       	ldd	r25, Y+32	; 0x20
    1dde:	9e 8f       	std	Y+30, r25	; 0x1e
    1de0:	8d 8f       	std	Y+29, r24	; 0x1d
    1de2:	7d c0       	rjmp	.+250    	; 0x1ede <_Z6RotatePiPc+0x25c>
    1de4:	ea e4       	ldi	r30, 0x4A	; 74
    1de6:	f0 e0       	ldi	r31, 0x00	; 0
    1de8:	8d 8d       	ldd	r24, Y+29	; 0x1d

		current_angle = OCR1A; //zapisanie obecnego polozenia
    1dea:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1dec:	91 83       	std	Z+1, r25	; 0x01
    1dee:	80 83       	st	Z, r24
    1df0:	80 e0       	ldi	r24, 0x00	; 0
    1df2:	90 e0       	ldi	r25, 0x00	; 0
    1df4:	a8 e4       	ldi	r26, 0x48	; 72
			//LCD_HD44780::writeText("/");
			//LCD_HD44780::showNumber(SERV_MAX-current_angle);
		//LCD_HD44780::showNumber(current_angle);
		/* przeliczanie */
		for(int i = current_angle;i<rot_serv+current_angle+1;i++){
    1df6:	b3 e4       	ldi	r27, 0x43	; 67
    1df8:	89 8f       	std	Y+25, r24	; 0x19
    1dfa:	9a 8f       	std	Y+26, r25	; 0x1a
    1dfc:	ab 8f       	std	Y+27, r26	; 0x1b
    1dfe:	bc 8f       	std	Y+28, r27	; 0x1c
    1e00:	69 8d       	ldd	r22, Y+25	; 0x19
    1e02:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e04:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e06:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e08:	20 e0       	ldi	r18, 0x00	; 0
    1e0a:	30 e0       	ldi	r19, 0x00	; 0
    1e0c:	4a ef       	ldi	r20, 0xFA	; 250
    1e0e:	54 e4       	ldi	r21, 0x44	; 68
    1e10:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1e14:	dc 01       	movw	r26, r24
    1e16:	cb 01       	movw	r24, r22
    1e18:	8d 8b       	std	Y+21, r24	; 0x15
    1e1a:	9e 8b       	std	Y+22, r25	; 0x16
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e1c:	af 8b       	std	Y+23, r26	; 0x17
    1e1e:	b8 8f       	std	Y+24, r27	; 0x18
    1e20:	6d 89       	ldd	r22, Y+21	; 0x15
    1e22:	7e 89       	ldd	r23, Y+22	; 0x16
    1e24:	8f 89       	ldd	r24, Y+23	; 0x17
    1e26:	98 8d       	ldd	r25, Y+24	; 0x18
    1e28:	20 e0       	ldi	r18, 0x00	; 0
    1e2a:	30 e0       	ldi	r19, 0x00	; 0
    1e2c:	40 e8       	ldi	r20, 0x80	; 128
    1e2e:	5f e3       	ldi	r21, 0x3F	; 63
    1e30:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    1e34:	88 23       	and	r24, r24
    1e36:	2c f4       	brge	.+10     	; 0x1e42 <_Z6RotatePiPc+0x1c0>
    1e38:	81 e0       	ldi	r24, 0x01	; 1
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
	if (__tmp < 1.0)
    1e3c:	9c 8b       	std	Y+20, r25	; 0x14
    1e3e:	8b 8b       	std	Y+19, r24	; 0x13
    1e40:	3f c0       	rjmp	.+126    	; 0x1ec0 <_Z6RotatePiPc+0x23e>
    1e42:	6d 89       	ldd	r22, Y+21	; 0x15
    1e44:	7e 89       	ldd	r23, Y+22	; 0x16
    1e46:	8f 89       	ldd	r24, Y+23	; 0x17
    1e48:	98 8d       	ldd	r25, Y+24	; 0x18
    1e4a:	20 e0       	ldi	r18, 0x00	; 0
    1e4c:	3f ef       	ldi	r19, 0xFF	; 255
    1e4e:	4f e7       	ldi	r20, 0x7F	; 127
    1e50:	57 e4       	ldi	r21, 0x47	; 71
    1e52:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
		__ticks = 1;
    1e56:	18 16       	cp	r1, r24
    1e58:	4c f5       	brge	.+82     	; 0x1eac <_Z6RotatePiPc+0x22a>
    1e5a:	69 8d       	ldd	r22, Y+25	; 0x19
    1e5c:	7a 8d       	ldd	r23, Y+26	; 0x1a
	else if (__tmp > 65535)
    1e5e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e60:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e62:	20 e0       	ldi	r18, 0x00	; 0
    1e64:	30 e0       	ldi	r19, 0x00	; 0
    1e66:	40 e2       	ldi	r20, 0x20	; 32
    1e68:	51 e4       	ldi	r21, 0x41	; 65
    1e6a:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1e6e:	dc 01       	movw	r26, r24
    1e70:	cb 01       	movw	r24, r22
    1e72:	bc 01       	movw	r22, r24
    1e74:	cd 01       	movw	r24, r26
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e76:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1e7a:	dc 01       	movw	r26, r24
    1e7c:	cb 01       	movw	r24, r22
    1e7e:	9c 8b       	std	Y+20, r25	; 0x14
    1e80:	8b 8b       	std	Y+19, r24	; 0x13
    1e82:	0f c0       	rjmp	.+30     	; 0x1ea2 <_Z6RotatePiPc+0x220>
    1e84:	88 ec       	ldi	r24, 0xC8	; 200
    1e86:	90 e0       	ldi	r25, 0x00	; 0
    1e88:	9a 8b       	std	Y+18, r25	; 0x12
    1e8a:	89 8b       	std	Y+17, r24	; 0x11
    1e8c:	89 89       	ldd	r24, Y+17	; 0x11
    1e8e:	9a 89       	ldd	r25, Y+18	; 0x12
    1e90:	01 97       	sbiw	r24, 0x01	; 1
    1e92:	f1 f7       	brne	.-4      	; 0x1e90 <_Z6RotatePiPc+0x20e>
    1e94:	9a 8b       	std	Y+18, r25	; 0x12
    1e96:	89 8b       	std	Y+17, r24	; 0x11
    1e98:	8b 89       	ldd	r24, Y+19	; 0x13
    1e9a:	9c 89       	ldd	r25, Y+20	; 0x14
    1e9c:	01 97       	sbiw	r24, 0x01	; 1
    1e9e:	9c 8b       	std	Y+20, r25	; 0x14
    1ea0:	8b 8b       	std	Y+19, r24	; 0x13
    1ea2:	8b 89       	ldd	r24, Y+19	; 0x13
    1ea4:	9c 89       	ldd	r25, Y+20	; 0x14
    1ea6:	00 97       	sbiw	r24, 0x00	; 0
    1ea8:	69 f7       	brne	.-38     	; 0x1e84 <_Z6RotatePiPc+0x202>
    1eaa:	14 c0       	rjmp	.+40     	; 0x1ed4 <_Z6RotatePiPc+0x252>
    1eac:	6d 89       	ldd	r22, Y+21	; 0x15
    1eae:	7e 89       	ldd	r23, Y+22	; 0x16
    1eb0:	8f 89       	ldd	r24, Y+23	; 0x17
    1eb2:	98 8d       	ldd	r25, Y+24	; 0x18
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1eb4:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1eb8:	dc 01       	movw	r26, r24
    1eba:	cb 01       	movw	r24, r22
    1ebc:	9c 8b       	std	Y+20, r25	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ebe:	8b 8b       	std	Y+19, r24	; 0x13
    1ec0:	8b 89       	ldd	r24, Y+19	; 0x13
    1ec2:	9c 89       	ldd	r25, Y+20	; 0x14
    1ec4:	98 8b       	std	Y+16, r25	; 0x10
    1ec6:	8f 87       	std	Y+15, r24	; 0x0f
    1ec8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1eca:	98 89       	ldd	r25, Y+16	; 0x10
    1ecc:	01 97       	sbiw	r24, 0x01	; 1
    1ece:	f1 f7       	brne	.-4      	; 0x1ecc <_Z6RotatePiPc+0x24a>
    1ed0:	98 8b       	std	Y+16, r25	; 0x10
    1ed2:	8f 87       	std	Y+15, r24	; 0x0f
    1ed4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1ed6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1ed8:	01 96       	adiw	r24, 0x01	; 1
    1eda:	9e 8f       	std	Y+30, r25	; 0x1e
    1edc:	8d 8f       	std	Y+29, r24	; 0x1d
    1ede:	29 a1       	ldd	r18, Y+33	; 0x21
    1ee0:	3a a1       	ldd	r19, Y+34	; 0x22
    1ee2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ee4:	98 a1       	ldd	r25, Y+32	; 0x20
    1ee6:	82 0f       	add	r24, r18
    1ee8:	93 1f       	adc	r25, r19
    1eea:	9c 01       	movw	r18, r24
    1eec:	2f 5f       	subi	r18, 0xFF	; 255
    1eee:	3f 4f       	sbci	r19, 0xFF	; 255
    1ef0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1ef2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1ef4:	82 17       	cp	r24, r18
    1ef6:	93 07       	cpc	r25, r19
    1ef8:	0c f4       	brge	.+2      	; 0x1efc <_Z6RotatePiPc+0x27a>
    1efa:	74 cf       	rjmp	.-280    	; 0x1de4 <_Z6RotatePiPc+0x162>
    1efc:	10 92 06 02 	sts	0x0206, r1
    1f00:	80 e0       	ldi	r24, 0x00	; 0
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	a8 e4       	ldi	r26, 0x48	; 72
    1f06:	b3 e4       	ldi	r27, 0x43	; 67
    1f08:	8b 87       	std	Y+11, r24	; 0x0b
    1f0a:	9c 87       	std	Y+12, r25	; 0x0c
    1f0c:	ad 87       	std	Y+13, r26	; 0x0d
    1f0e:	be 87       	std	Y+14, r27	; 0x0e
    1f10:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f12:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f14:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f16:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f18:	20 e0       	ldi	r18, 0x00	; 0
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	4a ef       	ldi	r20, 0xFA	; 250
    1f1e:	54 e4       	ldi	r21, 0x44	; 68
    1f20:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1f24:	dc 01       	movw	r26, r24
    1f26:	cb 01       	movw	r24, r22
    1f28:	8f 83       	std	Y+7, r24	; 0x07
    1f2a:	98 87       	std	Y+8, r25	; 0x08
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f2c:	a9 87       	std	Y+9, r26	; 0x09
    1f2e:	ba 87       	std	Y+10, r27	; 0x0a
    1f30:	6f 81       	ldd	r22, Y+7	; 0x07
    1f32:	78 85       	ldd	r23, Y+8	; 0x08
    1f34:	89 85       	ldd	r24, Y+9	; 0x09
    1f36:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f38:	20 e0       	ldi	r18, 0x00	; 0
    1f3a:	30 e0       	ldi	r19, 0x00	; 0
    1f3c:	40 e8       	ldi	r20, 0x80	; 128
    1f3e:	5f e3       	ldi	r21, 0x3F	; 63
    1f40:	0e 94 0c 04 	call	0x818	; 0x818 <__ltsf2>
    1f44:	88 23       	and	r24, r24
    1f46:	2c f4       	brge	.+10     	; 0x1f52 <_Z6RotatePiPc+0x2d0>
    1f48:	81 e0       	ldi	r24, 0x01	; 1
    1f4a:	90 e0       	ldi	r25, 0x00	; 0
	if (__tmp < 1.0)
    1f4c:	9e 83       	std	Y+6, r25	; 0x06
    1f4e:	8d 83       	std	Y+5, r24	; 0x05
    1f50:	3f c0       	rjmp	.+126    	; 0x1fd0 <_Z6RotatePiPc+0x34e>
    1f52:	6f 81       	ldd	r22, Y+7	; 0x07
    1f54:	78 85       	ldd	r23, Y+8	; 0x08
    1f56:	89 85       	ldd	r24, Y+9	; 0x09
    1f58:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f5a:	20 e0       	ldi	r18, 0x00	; 0
    1f5c:	3f ef       	ldi	r19, 0xFF	; 255
    1f5e:	4f e7       	ldi	r20, 0x7F	; 127
    1f60:	57 e4       	ldi	r21, 0x47	; 71
    1f62:	0e 94 b2 03 	call	0x764	; 0x764 <__gtsf2>
		__ticks = 1;
    1f66:	18 16       	cp	r1, r24
    1f68:	4c f5       	brge	.+82     	; 0x1fbc <_Z6RotatePiPc+0x33a>
    1f6a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f6c:	7c 85       	ldd	r23, Y+12	; 0x0c
	else if (__tmp > 65535)
    1f6e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f70:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f72:	20 e0       	ldi	r18, 0x00	; 0
    1f74:	30 e0       	ldi	r19, 0x00	; 0
    1f76:	40 e2       	ldi	r20, 0x20	; 32
    1f78:	51 e4       	ldi	r21, 0x41	; 65
    1f7a:	0e 94 12 02 	call	0x424	; 0x424 <__mulsf3>
    1f7e:	dc 01       	movw	r26, r24
    1f80:	cb 01       	movw	r24, r22
    1f82:	bc 01       	movw	r22, r24
    1f84:	cd 01       	movw	r24, r26
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f86:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	cb 01       	movw	r24, r22
    1f8e:	9e 83       	std	Y+6, r25	; 0x06
    1f90:	8d 83       	std	Y+5, r24	; 0x05
    1f92:	0f c0       	rjmp	.+30     	; 0x1fb2 <_Z6RotatePiPc+0x330>
    1f94:	88 ec       	ldi	r24, 0xC8	; 200
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	9c 83       	std	Y+4, r25	; 0x04
    1f9a:	8b 83       	std	Y+3, r24	; 0x03
    1f9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f9e:	9c 81       	ldd	r25, Y+4	; 0x04
    1fa0:	01 97       	sbiw	r24, 0x01	; 1
    1fa2:	f1 f7       	brne	.-4      	; 0x1fa0 <_Z6RotatePiPc+0x31e>
    1fa4:	9c 83       	std	Y+4, r25	; 0x04
    1fa6:	8b 83       	std	Y+3, r24	; 0x03
    1fa8:	8d 81       	ldd	r24, Y+5	; 0x05
    1faa:	9e 81       	ldd	r25, Y+6	; 0x06
    1fac:	01 97       	sbiw	r24, 0x01	; 1
    1fae:	9e 83       	std	Y+6, r25	; 0x06
    1fb0:	8d 83       	std	Y+5, r24	; 0x05
    1fb2:	8d 81       	ldd	r24, Y+5	; 0x05
    1fb4:	9e 81       	ldd	r25, Y+6	; 0x06
    1fb6:	00 97       	sbiw	r24, 0x00	; 0
    1fb8:	69 f7       	brne	.-38     	; 0x1f94 <_Z6RotatePiPc+0x312>
    1fba:	14 c0       	rjmp	.+40     	; 0x1fe4 <_Z6RotatePiPc+0x362>
    1fbc:	6f 81       	ldd	r22, Y+7	; 0x07
    1fbe:	78 85       	ldd	r23, Y+8	; 0x08
    1fc0:	89 85       	ldd	r24, Y+9	; 0x09
    1fc2:	9a 85       	ldd	r25, Y+10	; 0x0a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fc4:	0e 94 48 00 	call	0x90	; 0x90 <__fixunssfsi>
    1fc8:	dc 01       	movw	r26, r24
    1fca:	cb 01       	movw	r24, r22
    1fcc:	9e 83       	std	Y+6, r25	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fce:	8d 83       	std	Y+5, r24	; 0x05
    1fd0:	8d 81       	ldd	r24, Y+5	; 0x05
    1fd2:	9e 81       	ldd	r25, Y+6	; 0x06
    1fd4:	9a 83       	std	Y+2, r25	; 0x02
    1fd6:	89 83       	std	Y+1, r24	; 0x01
    1fd8:	89 81       	ldd	r24, Y+1	; 0x01
    1fda:	9a 81       	ldd	r25, Y+2	; 0x02
    1fdc:	01 97       	sbiw	r24, 0x01	; 1
    1fde:	f1 f7       	brne	.-4      	; 0x1fdc <_Z6RotatePiPc+0x35a>
    1fe0:	9a 83       	std	Y+2, r25	; 0x02
    1fe2:	89 83       	std	Y+1, r24	; 0x01
    1fe4:	ad 96       	adiw	r28, 0x2d	; 45
    1fe6:	0f b6       	in	r0, 0x3f	; 63
    1fe8:	f8 94       	cli
    1fea:	de bf       	out	0x3e, r29	; 62
    1fec:	0f be       	out	0x3f, r0	; 63
    1fee:	cd bf       	out	0x3d, r28	; 61
    1ff0:	cf 91       	pop	r28
    1ff2:	df 91       	pop	r29
    1ff4:	08 95       	ret

00001ff6 <main>:

	_delay_ms(200);
}


int main()
    1ff6:	df 93       	push	r29
    1ff8:	cf 93       	push	r28
    1ffa:	cd b7       	in	r28, 0x3d	; 61
    1ffc:	de b7       	in	r29, 0x3e	; 62
    1ffe:	64 97       	sbiw	r28, 0x14	; 20
    2000:	0f b6       	in	r0, 0x3f	; 63
    2002:	f8 94       	cli
    2004:	de bf       	out	0x3e, r29	; 62
    2006:	0f be       	out	0x3f, r0	; 63
    2008:	cd bf       	out	0x3d, r28	; 61
{
	int wybor=0, strona = 0; char kat[]="";
    200a:	1a 82       	std	Y+2, r1	; 0x02
    200c:	19 82       	std	Y+1, r1	; 0x01
    200e:	1c 82       	std	Y+4, r1	; 0x04
    2010:	1b 82       	std	Y+3, r1	; 0x03
    2012:	80 91 c2 00 	lds	r24, 0x00C2
    2016:	8d 83       	std	Y+5, r24	; 0x05
	char *opcje1[]= {"0 - Motor Bounce ",
					 "1 - Rotate ",
					 "2 - Spin ",
					 "3 - Exit "
	}; //tablica opcji
    2018:	ce 01       	movw	r24, r28
    201a:	06 96       	adiw	r24, 0x06	; 6
    201c:	99 8b       	std	Y+17, r25	; 0x11
    201e:	88 8b       	std	Y+16, r24	; 0x10
    2020:	ee ef       	ldi	r30, 0xFE	; 254
    2022:	f1 e0       	ldi	r31, 0x01	; 1
    2024:	fb 8b       	std	Y+19, r31	; 0x13
    2026:	ea 8b       	std	Y+18, r30	; 0x12
    2028:	f8 e0       	ldi	r31, 0x08	; 8
    202a:	fc 8b       	std	Y+20, r31	; 0x14
    202c:	ea 89       	ldd	r30, Y+18	; 0x12
    202e:	fb 89       	ldd	r31, Y+19	; 0x13
    2030:	00 80       	ld	r0, Z
    2032:	8a 89       	ldd	r24, Y+18	; 0x12
    2034:	9b 89       	ldd	r25, Y+19	; 0x13
    2036:	01 96       	adiw	r24, 0x01	; 1
    2038:	9b 8b       	std	Y+19, r25	; 0x13
    203a:	8a 8b       	std	Y+18, r24	; 0x12
    203c:	e8 89       	ldd	r30, Y+16	; 0x10
    203e:	f9 89       	ldd	r31, Y+17	; 0x11
    2040:	00 82       	st	Z, r0
    2042:	88 89       	ldd	r24, Y+16	; 0x10
    2044:	99 89       	ldd	r25, Y+17	; 0x11
    2046:	01 96       	adiw	r24, 0x01	; 1
    2048:	99 8b       	std	Y+17, r25	; 0x11
    204a:	88 8b       	std	Y+16, r24	; 0x10
    204c:	9c 89       	ldd	r25, Y+20	; 0x14
    204e:	91 50       	subi	r25, 0x01	; 1
    2050:	9c 8b       	std	Y+20, r25	; 0x14
    2052:	ec 89       	ldd	r30, Y+20	; 0x14
    2054:	ee 23       	and	r30, r30
    2056:	51 f7       	brne	.-44     	; 0x202c <main+0x36>

    DDRC = 0b00001111;
    2058:	e4 e3       	ldi	r30, 0x34	; 52
    205a:	f0 e0       	ldi	r31, 0x00	; 0
    205c:	8f e0       	ldi	r24, 0x0F	; 15
    205e:	80 83       	st	Z, r24
    PORTC = 0xff;
    2060:	e5 e3       	ldi	r30, 0x35	; 53
    2062:	f0 e0       	ldi	r31, 0x00	; 0
    2064:	8f ef       	ldi	r24, 0xFF	; 255
    2066:	80 83       	st	Z, r24

    init_PWM();
    2068:	a0 db       	rcall	.-2240   	; 0x17aa <_Z8init_PWMv>
    206a:	ea e4       	ldi	r30, 0x4A	; 74

    OCR1A = SERV_MIN; //początkowo servo w pozycji 0
    206c:	f0 e0       	ldi	r31, 0x00	; 0
    206e:	8f e1       	ldi	r24, 0x1F	; 31
    2070:	90 e0       	ldi	r25, 0x00	; 0
    2072:	91 83       	std	Z+1, r25	; 0x01
    2074:	80 83       	st	Z, r24
    2076:	a1 e3       	ldi	r26, 0x31	; 49
    DDRD|=(1<<PD4)|(1<<PD5);   //Piny od PWM ustawiamy na wyjścia
    2078:	b0 e0       	ldi	r27, 0x00	; 0
    207a:	e1 e3       	ldi	r30, 0x31	; 49
    207c:	f0 e0       	ldi	r31, 0x00	; 0
    207e:	80 81       	ld	r24, Z
    2080:	80 63       	ori	r24, 0x30	; 48
    2082:	8c 93       	st	X, r24
    2084:	0e d9       	rcall	.-3556   	; 0x12a2 <_ZN11LCD_HD447804initEv>
    LCD_HD44780::init();
    2086:	80 91 fd 01 	lds	r24, 0x01FD
    while (1){

    	if(do_Menu == true)
    208a:	88 23       	and	r24, r24
    208c:	59 f0       	breq	.+22     	; 0x20a4 <main+0xae>
    208e:	9e 01       	movw	r18, r28
    2090:	2d 5f       	subi	r18, 0xFD	; 253
    	Menu(&wybor,&strona,opcje1);
    2092:	3f 4f       	sbci	r19, 0xFF	; 255
    2094:	ae 01       	movw	r20, r28
    2096:	4a 5f       	subi	r20, 0xFA	; 250
    2098:	5f 4f       	sbci	r21, 0xFF	; 255
    209a:	ce 01       	movw	r24, r28
    209c:	01 96       	adiw	r24, 0x01	; 1
    209e:	b9 01       	movw	r22, r18
    20a0:	00 dd       	rcall	.-1536   	; 0x1aa2 <_Z4MenuPiS_PPc>
    20a2:	36 c0       	rjmp	.+108    	; 0x2110 <main+0x11a>
    20a4:	8b 81       	ldd	r24, Y+3	; 0x03
    20a6:	9c 81       	ldd	r25, Y+4	; 0x04
    20a8:	9f 87       	std	Y+15, r25	; 0x0f
    	else{
    		switch (strona)
    20aa:	8e 87       	std	Y+14, r24	; 0x0e
    20ac:	ee 85       	ldd	r30, Y+14	; 0x0e
    20ae:	ff 85       	ldd	r31, Y+15	; 0x0f
    20b0:	e1 30       	cpi	r30, 0x01	; 1
    20b2:	f1 05       	cpc	r31, r1
    20b4:	b9 f0       	breq	.+46     	; 0x20e4 <main+0xee>
    20b6:	8e 85       	ldd	r24, Y+14	; 0x0e
    20b8:	9f 85       	ldd	r25, Y+15	; 0x0f
    20ba:	82 30       	cpi	r24, 0x02	; 2
    20bc:	91 05       	cpc	r25, r1
    20be:	2c f4       	brge	.+10     	; 0x20ca <main+0xd4>
    20c0:	ee 85       	ldd	r30, Y+14	; 0x0e
    20c2:	ff 85       	ldd	r31, Y+15	; 0x0f
    20c4:	30 97       	sbiw	r30, 0x00	; 0
    20c6:	61 f0       	breq	.+24     	; 0x20e0 <main+0xea>
    20c8:	23 c0       	rjmp	.+70     	; 0x2110 <main+0x11a>
    20ca:	8e 85       	ldd	r24, Y+14	; 0x0e
    20cc:	9f 85       	ldd	r25, Y+15	; 0x0f
    20ce:	82 30       	cpi	r24, 0x02	; 2
    20d0:	91 05       	cpc	r25, r1
    20d2:	81 f0       	breq	.+32     	; 0x20f4 <main+0xfe>
    20d4:	ee 85       	ldd	r30, Y+14	; 0x0e
    20d6:	ff 85       	ldd	r31, Y+15	; 0x0f
    20d8:	e3 30       	cpi	r30, 0x03	; 3
    20da:	f1 05       	cpc	r31, r1
    20dc:	69 f0       	breq	.+26     	; 0x20f8 <main+0x102>
    20de:	18 c0       	rjmp	.+48     	; 0x2110 <main+0x11a>
    20e0:	c9 dc       	rcall	.-1646   	; 0x1a74 <_Z6Bouncev>
    20e2:	16 c0       	rjmp	.+44     	; 0x2110 <main+0x11a>
    20e4:	9e 01       	movw	r18, r28
    		{
    		    case 0: Bounce();
    20e6:	2b 5f       	subi	r18, 0xFB	; 251
    20e8:	3f 4f       	sbci	r19, 0xFF	; 255
    20ea:	ce 01       	movw	r24, r28
    		        break;
    		    case 1: Rotate(&wybor,kat);
    20ec:	01 96       	adiw	r24, 0x01	; 1
    20ee:	b9 01       	movw	r22, r18
    20f0:	c8 dd       	rcall	.-1136   	; 0x1c82 <_Z6RotatePiPc>
    20f2:	0e c0       	rjmp	.+28     	; 0x2110 <main+0x11a>
    20f4:	ae dc       	rcall	.-1700   	; 0x1a52 <_Z4Spinv>
    20f6:	0c c0       	rjmp	.+24     	; 0x2110 <main+0x11a>
    20f8:	cb dc       	rcall	.-1642   	; 0x1a90 <_Z4Exitv>
    20fa:	80 e0       	ldi	r24, 0x00	; 0
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    		    	break;
    		    case 2: Spin();
    20fe:	64 96       	adiw	r28, 0x14	; 20
    2100:	0f b6       	in	r0, 0x3f	; 63
    2102:	f8 94       	cli
    		        break;
    		    case 3: Exit();
    2104:	de bf       	out	0x3e, r29	; 62
    2106:	0f be       	out	0x3f, r0	; 63
    		    return 0;
    2108:	cd bf       	out	0x3d, r28	; 61
    210a:	cf 91       	pop	r28
    	//wybor = 0;
    	//kat = 0;
    	wybor = -1;

    }
}
    210c:	df 91       	pop	r29
    210e:	08 95       	ret
    2110:	8f ef       	ldi	r24, 0xFF	; 255
    2112:	9f ef       	ldi	r25, 0xFF	; 255
    2114:	9a 83       	std	Y+2, r25	; 0x02
    2116:	89 83       	std	Y+1, r24	; 0x01
    2118:	b6 cf       	rjmp	.-148    	; 0x2086 <main+0x90>

0000211a <__prologue_saves__>:
    211a:	2f 92       	push	r2
    211c:	3f 92       	push	r3
    		}
    	}
    	//_delay_ms(200);
    	//wybor = 0;
    	//kat = 0;
    	wybor = -1;
    211e:	4f 92       	push	r4
    2120:	5f 92       	push	r5
    2122:	6f 92       	push	r6
    2124:	7f 92       	push	r7
    2126:	8f 92       	push	r8
    2128:	9f 92       	push	r9
    212a:	af 92       	push	r10
    212c:	bf 92       	push	r11
    212e:	cf 92       	push	r12
    2130:	df 92       	push	r13
    2132:	ef 92       	push	r14
    2134:	ff 92       	push	r15
    2136:	0f 93       	push	r16
    2138:	1f 93       	push	r17
    213a:	cf 93       	push	r28
    213c:	df 93       	push	r29
    213e:	cd b7       	in	r28, 0x3d	; 61
    2140:	de b7       	in	r29, 0x3e	; 62
    2142:	ca 1b       	sub	r28, r26
    2144:	db 0b       	sbc	r29, r27
    2146:	0f b6       	in	r0, 0x3f	; 63
    2148:	f8 94       	cli
    214a:	de bf       	out	0x3e, r29	; 62
    214c:	0f be       	out	0x3f, r0	; 63
    214e:	cd bf       	out	0x3d, r28	; 61
    2150:	09 94       	ijmp

00002152 <__epilogue_restores__>:
    2152:	2a 88       	ldd	r2, Y+18	; 0x12
    2154:	39 88       	ldd	r3, Y+17	; 0x11
    2156:	48 88       	ldd	r4, Y+16	; 0x10
    2158:	5f 84       	ldd	r5, Y+15	; 0x0f
    215a:	6e 84       	ldd	r6, Y+14	; 0x0e
    215c:	7d 84       	ldd	r7, Y+13	; 0x0d
    215e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2160:	9b 84       	ldd	r9, Y+11	; 0x0b
    2162:	aa 84       	ldd	r10, Y+10	; 0x0a
    2164:	b9 84       	ldd	r11, Y+9	; 0x09
    2166:	c8 84       	ldd	r12, Y+8	; 0x08
    2168:	df 80       	ldd	r13, Y+7	; 0x07
    216a:	ee 80       	ldd	r14, Y+6	; 0x06
    216c:	fd 80       	ldd	r15, Y+5	; 0x05
    216e:	0c 81       	ldd	r16, Y+4	; 0x04
    2170:	1b 81       	ldd	r17, Y+3	; 0x03
    2172:	aa 81       	ldd	r26, Y+2	; 0x02
    2174:	b9 81       	ldd	r27, Y+1	; 0x01
    2176:	ce 0f       	add	r28, r30
    2178:	d1 1d       	adc	r29, r1
    217a:	0f b6       	in	r0, 0x3f	; 63
    217c:	f8 94       	cli
    217e:	de bf       	out	0x3e, r29	; 62
    2180:	0f be       	out	0x3f, r0	; 63
    2182:	cd bf       	out	0x3d, r28	; 61
    2184:	ed 01       	movw	r28, r26
    2186:	08 95       	ret

00002188 <atoi>:
    2188:	fc 01       	movw	r30, r24
    218a:	88 27       	eor	r24, r24
    218c:	99 27       	eor	r25, r25
    218e:	e8 94       	clt
    2190:	21 91       	ld	r18, Z+
    2192:	20 32       	cpi	r18, 0x20	; 32
    2194:	e9 f3       	breq	.-6      	; 0x2190 <atoi+0x8>
    2196:	29 30       	cpi	r18, 0x09	; 9
    2198:	10 f0       	brcs	.+4      	; 0x219e <atoi+0x16>
    219a:	2e 30       	cpi	r18, 0x0E	; 14
    219c:	c8 f3       	brcs	.-14     	; 0x2190 <atoi+0x8>
    219e:	2b 32       	cpi	r18, 0x2B	; 43
    21a0:	39 f0       	breq	.+14     	; 0x21b0 <atoi+0x28>
    21a2:	2d 32       	cpi	r18, 0x2D	; 45
    21a4:	31 f4       	brne	.+12     	; 0x21b2 <atoi+0x2a>
    21a6:	68 94       	set
    21a8:	03 c0       	rjmp	.+6      	; 0x21b0 <atoi+0x28>
    21aa:	22 d0       	rcall	.+68     	; 0x21f0 <__mulhi_const_10>
    21ac:	82 0f       	add	r24, r18
    21ae:	91 1d       	adc	r25, r1
    21b0:	21 91       	ld	r18, Z+
    21b2:	20 53       	subi	r18, 0x30	; 48
    21b4:	2a 30       	cpi	r18, 0x0A	; 10
    21b6:	c8 f3       	brcs	.-14     	; 0x21aa <atoi+0x22>
    21b8:	1e f4       	brtc	.+6      	; 0x21c0 <atoi+0x38>
    21ba:	90 95       	com	r25
    21bc:	81 95       	neg	r24
    21be:	9f 4f       	sbci	r25, 0xFF	; 255
    21c0:	08 95       	ret

000021c2 <memset>:
    21c2:	dc 01       	movw	r26, r24
    21c4:	01 c0       	rjmp	.+2      	; 0x21c8 <memset+0x6>
    21c6:	6d 93       	st	X+, r22
    21c8:	41 50       	subi	r20, 0x01	; 1
    21ca:	50 40       	sbci	r21, 0x00	; 0
    21cc:	e0 f7       	brcc	.-8      	; 0x21c6 <memset+0x4>
    21ce:	08 95       	ret

000021d0 <strncat>:
    21d0:	fb 01       	movw	r30, r22
    21d2:	dc 01       	movw	r26, r24
    21d4:	0d 90       	ld	r0, X+
    21d6:	00 20       	and	r0, r0
    21d8:	e9 f7       	brne	.-6      	; 0x21d4 <strncat+0x4>
    21da:	11 97       	sbiw	r26, 0x01	; 1
    21dc:	41 50       	subi	r20, 0x01	; 1
    21de:	50 40       	sbci	r21, 0x00	; 0
    21e0:	28 f0       	brcs	.+10     	; 0x21ec <strncat+0x1c>
    21e2:	01 90       	ld	r0, Z+
    21e4:	00 20       	and	r0, r0
    21e6:	0d 92       	st	X+, r0
    21e8:	c9 f7       	brne	.-14     	; 0x21dc <strncat+0xc>
    21ea:	08 95       	ret
    21ec:	1c 92       	st	X, r1
    21ee:	08 95       	ret

000021f0 <__mulhi_const_10>:
    21f0:	7a e0       	ldi	r23, 0x0A	; 10
    21f2:	97 9f       	mul	r25, r23
    21f4:	90 2d       	mov	r25, r0
    21f6:	87 9f       	mul	r24, r23
    21f8:	80 2d       	mov	r24, r0
    21fa:	91 0d       	add	r25, r1
    21fc:	11 24       	eor	r1, r1
    21fe:	08 95       	ret

00002200 <sprintf>:
    2200:	ae e0       	ldi	r26, 0x0E	; 14
    2202:	b0 e0       	ldi	r27, 0x00	; 0
    2204:	e5 e0       	ldi	r30, 0x05	; 5
    2206:	f1 e1       	ldi	r31, 0x11	; 17
    2208:	96 cf       	rjmp	.-212    	; 0x2136 <__prologue_saves__+0x1c>
    220a:	0d 89       	ldd	r16, Y+21	; 0x15
    220c:	1e 89       	ldd	r17, Y+22	; 0x16
    220e:	86 e0       	ldi	r24, 0x06	; 6
    2210:	8c 83       	std	Y+4, r24	; 0x04
    2212:	1a 83       	std	Y+2, r17	; 0x02
    2214:	09 83       	std	Y+1, r16	; 0x01
    2216:	8f ef       	ldi	r24, 0xFF	; 255
    2218:	9f e7       	ldi	r25, 0x7F	; 127
    221a:	9e 83       	std	Y+6, r25	; 0x06
    221c:	8d 83       	std	Y+5, r24	; 0x05
    221e:	9e 01       	movw	r18, r28
    2220:	27 5e       	subi	r18, 0xE7	; 231
    2222:	3f 4f       	sbci	r19, 0xFF	; 255
    2224:	ce 01       	movw	r24, r28
    2226:	01 96       	adiw	r24, 0x01	; 1
    2228:	6f 89       	ldd	r22, Y+23	; 0x17
    222a:	78 8d       	ldd	r23, Y+24	; 0x18
    222c:	a9 01       	movw	r20, r18
    222e:	09 d0       	rcall	.+18     	; 0x2242 <vfprintf>
    2230:	2f 81       	ldd	r18, Y+7	; 0x07
    2232:	38 85       	ldd	r19, Y+8	; 0x08
    2234:	02 0f       	add	r16, r18
    2236:	13 1f       	adc	r17, r19
    2238:	f8 01       	movw	r30, r16
    223a:	10 82       	st	Z, r1
    223c:	2e 96       	adiw	r28, 0x0e	; 14
    223e:	e4 e0       	ldi	r30, 0x04	; 4
    2240:	96 cf       	rjmp	.-212    	; 0x216e <__epilogue_restores__+0x1c>

00002242 <vfprintf>:
    2242:	ab e0       	ldi	r26, 0x0B	; 11
    2244:	b0 e0       	ldi	r27, 0x00	; 0
    2246:	e6 e2       	ldi	r30, 0x26	; 38
    2248:	f1 e1       	ldi	r31, 0x11	; 17
    224a:	67 cf       	rjmp	.-306    	; 0x211a <__prologue_saves__>
    224c:	3c 01       	movw	r6, r24
    224e:	2b 01       	movw	r4, r22
    2250:	5a 01       	movw	r10, r20
    2252:	fc 01       	movw	r30, r24
    2254:	17 82       	std	Z+7, r1	; 0x07
    2256:	16 82       	std	Z+6, r1	; 0x06
    2258:	83 81       	ldd	r24, Z+3	; 0x03
    225a:	81 fd       	sbrc	r24, 1
    225c:	03 c0       	rjmp	.+6      	; 0x2264 <vfprintf+0x22>
    225e:	6f ef       	ldi	r22, 0xFF	; 255
    2260:	7f ef       	ldi	r23, 0xFF	; 255
    2262:	b9 c1       	rjmp	.+882    	; 0x25d6 <vfprintf+0x394>
    2264:	9a e0       	ldi	r25, 0x0A	; 10
    2266:	89 2e       	mov	r8, r25
    2268:	1e 01       	movw	r2, r28
    226a:	08 94       	sec
    226c:	21 1c       	adc	r2, r1
    226e:	31 1c       	adc	r3, r1
    2270:	f3 01       	movw	r30, r6
    2272:	23 81       	ldd	r18, Z+3	; 0x03
    2274:	f2 01       	movw	r30, r4
    2276:	23 fd       	sbrc	r18, 3
    2278:	85 91       	lpm	r24, Z+
    227a:	23 ff       	sbrs	r18, 3
    227c:	81 91       	ld	r24, Z+
    227e:	2f 01       	movw	r4, r30
    2280:	88 23       	and	r24, r24
    2282:	09 f4       	brne	.+2      	; 0x2286 <vfprintf+0x44>
    2284:	a5 c1       	rjmp	.+842    	; 0x25d0 <vfprintf+0x38e>
    2286:	85 32       	cpi	r24, 0x25	; 37
    2288:	39 f4       	brne	.+14     	; 0x2298 <vfprintf+0x56>
    228a:	23 fd       	sbrc	r18, 3
    228c:	85 91       	lpm	r24, Z+
    228e:	23 ff       	sbrs	r18, 3
    2290:	81 91       	ld	r24, Z+
    2292:	2f 01       	movw	r4, r30
    2294:	85 32       	cpi	r24, 0x25	; 37
    2296:	21 f4       	brne	.+8      	; 0x22a0 <vfprintf+0x5e>
    2298:	90 e0       	ldi	r25, 0x00	; 0
    229a:	b3 01       	movw	r22, r6
    229c:	b6 d1       	rcall	.+876    	; 0x260a <fputc>
    229e:	e8 cf       	rjmp	.-48     	; 0x2270 <vfprintf+0x2e>
    22a0:	98 2f       	mov	r25, r24
    22a2:	ff 24       	eor	r15, r15
    22a4:	ee 24       	eor	r14, r14
    22a6:	99 24       	eor	r9, r9
    22a8:	ff e1       	ldi	r31, 0x1F	; 31
    22aa:	ff 15       	cp	r31, r15
    22ac:	d0 f0       	brcs	.+52     	; 0x22e2 <vfprintf+0xa0>
    22ae:	9b 32       	cpi	r25, 0x2B	; 43
    22b0:	69 f0       	breq	.+26     	; 0x22cc <vfprintf+0x8a>
    22b2:	9c 32       	cpi	r25, 0x2C	; 44
    22b4:	28 f4       	brcc	.+10     	; 0x22c0 <vfprintf+0x7e>
    22b6:	90 32       	cpi	r25, 0x20	; 32
    22b8:	59 f0       	breq	.+22     	; 0x22d0 <vfprintf+0x8e>
    22ba:	93 32       	cpi	r25, 0x23	; 35
    22bc:	91 f4       	brne	.+36     	; 0x22e2 <vfprintf+0xa0>
    22be:	0e c0       	rjmp	.+28     	; 0x22dc <vfprintf+0x9a>
    22c0:	9d 32       	cpi	r25, 0x2D	; 45
    22c2:	49 f0       	breq	.+18     	; 0x22d6 <vfprintf+0x94>
    22c4:	90 33       	cpi	r25, 0x30	; 48
    22c6:	69 f4       	brne	.+26     	; 0x22e2 <vfprintf+0xa0>
    22c8:	41 e0       	ldi	r20, 0x01	; 1
    22ca:	24 c0       	rjmp	.+72     	; 0x2314 <vfprintf+0xd2>
    22cc:	52 e0       	ldi	r21, 0x02	; 2
    22ce:	f5 2a       	or	r15, r21
    22d0:	84 e0       	ldi	r24, 0x04	; 4
    22d2:	f8 2a       	or	r15, r24
    22d4:	28 c0       	rjmp	.+80     	; 0x2326 <vfprintf+0xe4>
    22d6:	98 e0       	ldi	r25, 0x08	; 8
    22d8:	f9 2a       	or	r15, r25
    22da:	25 c0       	rjmp	.+74     	; 0x2326 <vfprintf+0xe4>
    22dc:	e0 e1       	ldi	r30, 0x10	; 16
    22de:	fe 2a       	or	r15, r30
    22e0:	22 c0       	rjmp	.+68     	; 0x2326 <vfprintf+0xe4>
    22e2:	f7 fc       	sbrc	r15, 7
    22e4:	29 c0       	rjmp	.+82     	; 0x2338 <vfprintf+0xf6>
    22e6:	89 2f       	mov	r24, r25
    22e8:	80 53       	subi	r24, 0x30	; 48
    22ea:	8a 30       	cpi	r24, 0x0A	; 10
    22ec:	70 f4       	brcc	.+28     	; 0x230a <vfprintf+0xc8>
    22ee:	f6 fe       	sbrs	r15, 6
    22f0:	05 c0       	rjmp	.+10     	; 0x22fc <vfprintf+0xba>
    22f2:	98 9c       	mul	r9, r8
    22f4:	90 2c       	mov	r9, r0
    22f6:	11 24       	eor	r1, r1
    22f8:	98 0e       	add	r9, r24
    22fa:	15 c0       	rjmp	.+42     	; 0x2326 <vfprintf+0xe4>
    22fc:	e8 9c       	mul	r14, r8
    22fe:	e0 2c       	mov	r14, r0
    2300:	11 24       	eor	r1, r1
    2302:	e8 0e       	add	r14, r24
    2304:	f0 e2       	ldi	r31, 0x20	; 32
    2306:	ff 2a       	or	r15, r31
    2308:	0e c0       	rjmp	.+28     	; 0x2326 <vfprintf+0xe4>
    230a:	9e 32       	cpi	r25, 0x2E	; 46
    230c:	29 f4       	brne	.+10     	; 0x2318 <vfprintf+0xd6>
    230e:	f6 fc       	sbrc	r15, 6
    2310:	5f c1       	rjmp	.+702    	; 0x25d0 <vfprintf+0x38e>
    2312:	40 e4       	ldi	r20, 0x40	; 64
    2314:	f4 2a       	or	r15, r20
    2316:	07 c0       	rjmp	.+14     	; 0x2326 <vfprintf+0xe4>
    2318:	9c 36       	cpi	r25, 0x6C	; 108
    231a:	19 f4       	brne	.+6      	; 0x2322 <vfprintf+0xe0>
    231c:	50 e8       	ldi	r21, 0x80	; 128
    231e:	f5 2a       	or	r15, r21
    2320:	02 c0       	rjmp	.+4      	; 0x2326 <vfprintf+0xe4>
    2322:	98 36       	cpi	r25, 0x68	; 104
    2324:	49 f4       	brne	.+18     	; 0x2338 <vfprintf+0xf6>
    2326:	f2 01       	movw	r30, r4
    2328:	23 fd       	sbrc	r18, 3
    232a:	95 91       	lpm	r25, Z+
    232c:	23 ff       	sbrs	r18, 3
    232e:	91 91       	ld	r25, Z+
    2330:	2f 01       	movw	r4, r30
    2332:	99 23       	and	r25, r25
    2334:	09 f0       	breq	.+2      	; 0x2338 <vfprintf+0xf6>
    2336:	b8 cf       	rjmp	.-144    	; 0x22a8 <vfprintf+0x66>
    2338:	89 2f       	mov	r24, r25
    233a:	85 54       	subi	r24, 0x45	; 69
    233c:	83 30       	cpi	r24, 0x03	; 3
    233e:	18 f0       	brcs	.+6      	; 0x2346 <vfprintf+0x104>
    2340:	80 52       	subi	r24, 0x20	; 32
    2342:	83 30       	cpi	r24, 0x03	; 3
    2344:	38 f4       	brcc	.+14     	; 0x2354 <vfprintf+0x112>
    2346:	44 e0       	ldi	r20, 0x04	; 4
    2348:	50 e0       	ldi	r21, 0x00	; 0
    234a:	a4 0e       	add	r10, r20
    234c:	b5 1e       	adc	r11, r21
    234e:	5f e3       	ldi	r21, 0x3F	; 63
    2350:	59 83       	std	Y+1, r21	; 0x01
    2352:	0f c0       	rjmp	.+30     	; 0x2372 <vfprintf+0x130>
    2354:	93 36       	cpi	r25, 0x63	; 99
    2356:	31 f0       	breq	.+12     	; 0x2364 <vfprintf+0x122>
    2358:	93 37       	cpi	r25, 0x73	; 115
    235a:	79 f0       	breq	.+30     	; 0x237a <vfprintf+0x138>
    235c:	93 35       	cpi	r25, 0x53	; 83
    235e:	09 f0       	breq	.+2      	; 0x2362 <vfprintf+0x120>
    2360:	52 c0       	rjmp	.+164    	; 0x2406 <vfprintf+0x1c4>
    2362:	1f c0       	rjmp	.+62     	; 0x23a2 <vfprintf+0x160>
    2364:	f5 01       	movw	r30, r10
    2366:	80 81       	ld	r24, Z
    2368:	89 83       	std	Y+1, r24	; 0x01
    236a:	42 e0       	ldi	r20, 0x02	; 2
    236c:	50 e0       	ldi	r21, 0x00	; 0
    236e:	a4 0e       	add	r10, r20
    2370:	b5 1e       	adc	r11, r21
    2372:	61 01       	movw	r12, r2
    2374:	01 e0       	ldi	r16, 0x01	; 1
    2376:	10 e0       	ldi	r17, 0x00	; 0
    2378:	11 c0       	rjmp	.+34     	; 0x239c <vfprintf+0x15a>
    237a:	f5 01       	movw	r30, r10
    237c:	c0 80       	ld	r12, Z
    237e:	d1 80       	ldd	r13, Z+1	; 0x01
    2380:	f6 fc       	sbrc	r15, 6
    2382:	03 c0       	rjmp	.+6      	; 0x238a <vfprintf+0x148>
    2384:	6f ef       	ldi	r22, 0xFF	; 255
    2386:	7f ef       	ldi	r23, 0xFF	; 255
    2388:	02 c0       	rjmp	.+4      	; 0x238e <vfprintf+0x14c>
    238a:	69 2d       	mov	r22, r9
    238c:	70 e0       	ldi	r23, 0x00	; 0
    238e:	42 e0       	ldi	r20, 0x02	; 2
    2390:	50 e0       	ldi	r21, 0x00	; 0
    2392:	a4 0e       	add	r10, r20
    2394:	b5 1e       	adc	r11, r21
    2396:	c6 01       	movw	r24, r12
    2398:	2d d1       	rcall	.+602    	; 0x25f4 <strnlen>
    239a:	8c 01       	movw	r16, r24
    239c:	5f e7       	ldi	r21, 0x7F	; 127
    239e:	f5 22       	and	r15, r21
    23a0:	13 c0       	rjmp	.+38     	; 0x23c8 <vfprintf+0x186>
    23a2:	f5 01       	movw	r30, r10
    23a4:	c0 80       	ld	r12, Z
    23a6:	d1 80       	ldd	r13, Z+1	; 0x01
    23a8:	f6 fc       	sbrc	r15, 6
    23aa:	03 c0       	rjmp	.+6      	; 0x23b2 <vfprintf+0x170>
    23ac:	6f ef       	ldi	r22, 0xFF	; 255
    23ae:	7f ef       	ldi	r23, 0xFF	; 255
    23b0:	02 c0       	rjmp	.+4      	; 0x23b6 <vfprintf+0x174>
    23b2:	69 2d       	mov	r22, r9
    23b4:	70 e0       	ldi	r23, 0x00	; 0
    23b6:	42 e0       	ldi	r20, 0x02	; 2
    23b8:	50 e0       	ldi	r21, 0x00	; 0
    23ba:	a4 0e       	add	r10, r20
    23bc:	b5 1e       	adc	r11, r21
    23be:	c6 01       	movw	r24, r12
    23c0:	0e d1       	rcall	.+540    	; 0x25de <strnlen_P>
    23c2:	8c 01       	movw	r16, r24
    23c4:	50 e8       	ldi	r21, 0x80	; 128
    23c6:	f5 2a       	or	r15, r21
    23c8:	f3 fe       	sbrs	r15, 3
    23ca:	06 c0       	rjmp	.+12     	; 0x23d8 <vfprintf+0x196>
    23cc:	18 c0       	rjmp	.+48     	; 0x23fe <vfprintf+0x1bc>
    23ce:	80 e2       	ldi	r24, 0x20	; 32
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	b3 01       	movw	r22, r6
    23d4:	1a d1       	rcall	.+564    	; 0x260a <fputc>
    23d6:	ea 94       	dec	r14
    23d8:	8e 2d       	mov	r24, r14
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	08 17       	cp	r16, r24
    23de:	19 07       	cpc	r17, r25
    23e0:	b0 f3       	brcs	.-20     	; 0x23ce <vfprintf+0x18c>
    23e2:	0d c0       	rjmp	.+26     	; 0x23fe <vfprintf+0x1bc>
    23e4:	f6 01       	movw	r30, r12
    23e6:	f7 fc       	sbrc	r15, 7
    23e8:	85 91       	lpm	r24, Z+
    23ea:	f7 fe       	sbrs	r15, 7
    23ec:	81 91       	ld	r24, Z+
    23ee:	6f 01       	movw	r12, r30
    23f0:	90 e0       	ldi	r25, 0x00	; 0
    23f2:	b3 01       	movw	r22, r6
    23f4:	0a d1       	rcall	.+532    	; 0x260a <fputc>
    23f6:	e1 10       	cpse	r14, r1
    23f8:	ea 94       	dec	r14
    23fa:	01 50       	subi	r16, 0x01	; 1
    23fc:	10 40       	sbci	r17, 0x00	; 0
    23fe:	01 15       	cp	r16, r1
    2400:	11 05       	cpc	r17, r1
    2402:	81 f7       	brne	.-32     	; 0x23e4 <vfprintf+0x1a2>
    2404:	e2 c0       	rjmp	.+452    	; 0x25ca <vfprintf+0x388>
    2406:	94 36       	cpi	r25, 0x64	; 100
    2408:	11 f0       	breq	.+4      	; 0x240e <vfprintf+0x1cc>
    240a:	99 36       	cpi	r25, 0x69	; 105
    240c:	61 f5       	brne	.+88     	; 0x2466 <vfprintf+0x224>
    240e:	f7 fe       	sbrs	r15, 7
    2410:	08 c0       	rjmp	.+16     	; 0x2422 <vfprintf+0x1e0>
    2412:	f5 01       	movw	r30, r10
    2414:	20 81       	ld	r18, Z
    2416:	31 81       	ldd	r19, Z+1	; 0x01
    2418:	42 81       	ldd	r20, Z+2	; 0x02
    241a:	53 81       	ldd	r21, Z+3	; 0x03
    241c:	84 e0       	ldi	r24, 0x04	; 4
    241e:	90 e0       	ldi	r25, 0x00	; 0
    2420:	0a c0       	rjmp	.+20     	; 0x2436 <vfprintf+0x1f4>
    2422:	f5 01       	movw	r30, r10
    2424:	80 81       	ld	r24, Z
    2426:	91 81       	ldd	r25, Z+1	; 0x01
    2428:	9c 01       	movw	r18, r24
    242a:	44 27       	eor	r20, r20
    242c:	37 fd       	sbrc	r19, 7
    242e:	40 95       	com	r20
    2430:	54 2f       	mov	r21, r20
    2432:	82 e0       	ldi	r24, 0x02	; 2
    2434:	90 e0       	ldi	r25, 0x00	; 0
    2436:	a8 0e       	add	r10, r24
    2438:	b9 1e       	adc	r11, r25
    243a:	9f e6       	ldi	r25, 0x6F	; 111
    243c:	f9 22       	and	r15, r25
    243e:	57 ff       	sbrs	r21, 7
    2440:	09 c0       	rjmp	.+18     	; 0x2454 <vfprintf+0x212>
    2442:	50 95       	com	r21
    2444:	40 95       	com	r20
    2446:	30 95       	com	r19
    2448:	21 95       	neg	r18
    244a:	3f 4f       	sbci	r19, 0xFF	; 255
    244c:	4f 4f       	sbci	r20, 0xFF	; 255
    244e:	5f 4f       	sbci	r21, 0xFF	; 255
    2450:	e0 e8       	ldi	r30, 0x80	; 128
    2452:	fe 2a       	or	r15, r30
    2454:	ca 01       	movw	r24, r20
    2456:	b9 01       	movw	r22, r18
    2458:	a1 01       	movw	r20, r2
    245a:	2a e0       	ldi	r18, 0x0A	; 10
    245c:	30 e0       	ldi	r19, 0x00	; 0
    245e:	01 d1       	rcall	.+514    	; 0x2662 <__ultoa_invert>
    2460:	d8 2e       	mov	r13, r24
    2462:	d2 18       	sub	r13, r2
    2464:	3f c0       	rjmp	.+126    	; 0x24e4 <vfprintf+0x2a2>
    2466:	95 37       	cpi	r25, 0x75	; 117
    2468:	29 f4       	brne	.+10     	; 0x2474 <vfprintf+0x232>
    246a:	1f 2d       	mov	r17, r15
    246c:	1f 7e       	andi	r17, 0xEF	; 239
    246e:	2a e0       	ldi	r18, 0x0A	; 10
    2470:	30 e0       	ldi	r19, 0x00	; 0
    2472:	1d c0       	rjmp	.+58     	; 0x24ae <vfprintf+0x26c>
    2474:	1f 2d       	mov	r17, r15
    2476:	19 7f       	andi	r17, 0xF9	; 249
    2478:	9f 36       	cpi	r25, 0x6F	; 111
    247a:	61 f0       	breq	.+24     	; 0x2494 <vfprintf+0x252>
    247c:	90 37       	cpi	r25, 0x70	; 112
    247e:	20 f4       	brcc	.+8      	; 0x2488 <vfprintf+0x246>
    2480:	98 35       	cpi	r25, 0x58	; 88
    2482:	09 f0       	breq	.+2      	; 0x2486 <vfprintf+0x244>
    2484:	a5 c0       	rjmp	.+330    	; 0x25d0 <vfprintf+0x38e>
    2486:	0f c0       	rjmp	.+30     	; 0x24a6 <vfprintf+0x264>
    2488:	90 37       	cpi	r25, 0x70	; 112
    248a:	39 f0       	breq	.+14     	; 0x249a <vfprintf+0x258>
    248c:	98 37       	cpi	r25, 0x78	; 120
    248e:	09 f0       	breq	.+2      	; 0x2492 <vfprintf+0x250>
    2490:	9f c0       	rjmp	.+318    	; 0x25d0 <vfprintf+0x38e>
    2492:	04 c0       	rjmp	.+8      	; 0x249c <vfprintf+0x25a>
    2494:	28 e0       	ldi	r18, 0x08	; 8
    2496:	30 e0       	ldi	r19, 0x00	; 0
    2498:	0a c0       	rjmp	.+20     	; 0x24ae <vfprintf+0x26c>
    249a:	10 61       	ori	r17, 0x10	; 16
    249c:	14 fd       	sbrc	r17, 4
    249e:	14 60       	ori	r17, 0x04	; 4
    24a0:	20 e1       	ldi	r18, 0x10	; 16
    24a2:	30 e0       	ldi	r19, 0x00	; 0
    24a4:	04 c0       	rjmp	.+8      	; 0x24ae <vfprintf+0x26c>
    24a6:	14 fd       	sbrc	r17, 4
    24a8:	16 60       	ori	r17, 0x06	; 6
    24aa:	20 e1       	ldi	r18, 0x10	; 16
    24ac:	32 e0       	ldi	r19, 0x02	; 2
    24ae:	17 ff       	sbrs	r17, 7
    24b0:	08 c0       	rjmp	.+16     	; 0x24c2 <vfprintf+0x280>
    24b2:	f5 01       	movw	r30, r10
    24b4:	60 81       	ld	r22, Z
    24b6:	71 81       	ldd	r23, Z+1	; 0x01
    24b8:	82 81       	ldd	r24, Z+2	; 0x02
    24ba:	93 81       	ldd	r25, Z+3	; 0x03
    24bc:	44 e0       	ldi	r20, 0x04	; 4
    24be:	50 e0       	ldi	r21, 0x00	; 0
    24c0:	08 c0       	rjmp	.+16     	; 0x24d2 <vfprintf+0x290>
    24c2:	f5 01       	movw	r30, r10
    24c4:	80 81       	ld	r24, Z
    24c6:	91 81       	ldd	r25, Z+1	; 0x01
    24c8:	bc 01       	movw	r22, r24
    24ca:	80 e0       	ldi	r24, 0x00	; 0
    24cc:	90 e0       	ldi	r25, 0x00	; 0
    24ce:	42 e0       	ldi	r20, 0x02	; 2
    24d0:	50 e0       	ldi	r21, 0x00	; 0
    24d2:	a4 0e       	add	r10, r20
    24d4:	b5 1e       	adc	r11, r21
    24d6:	a1 01       	movw	r20, r2
    24d8:	c4 d0       	rcall	.+392    	; 0x2662 <__ultoa_invert>
    24da:	d8 2e       	mov	r13, r24
    24dc:	d2 18       	sub	r13, r2
    24de:	8f e7       	ldi	r24, 0x7F	; 127
    24e0:	f8 2e       	mov	r15, r24
    24e2:	f1 22       	and	r15, r17
    24e4:	f6 fe       	sbrs	r15, 6
    24e6:	0b c0       	rjmp	.+22     	; 0x24fe <vfprintf+0x2bc>
    24e8:	5e ef       	ldi	r21, 0xFE	; 254
    24ea:	f5 22       	and	r15, r21
    24ec:	d9 14       	cp	r13, r9
    24ee:	38 f4       	brcc	.+14     	; 0x24fe <vfprintf+0x2bc>
    24f0:	f4 fe       	sbrs	r15, 4
    24f2:	07 c0       	rjmp	.+14     	; 0x2502 <vfprintf+0x2c0>
    24f4:	f2 fc       	sbrc	r15, 2
    24f6:	05 c0       	rjmp	.+10     	; 0x2502 <vfprintf+0x2c0>
    24f8:	8f ee       	ldi	r24, 0xEF	; 239
    24fa:	f8 22       	and	r15, r24
    24fc:	02 c0       	rjmp	.+4      	; 0x2502 <vfprintf+0x2c0>
    24fe:	1d 2d       	mov	r17, r13
    2500:	01 c0       	rjmp	.+2      	; 0x2504 <vfprintf+0x2c2>
    2502:	19 2d       	mov	r17, r9
    2504:	f4 fe       	sbrs	r15, 4
    2506:	0d c0       	rjmp	.+26     	; 0x2522 <vfprintf+0x2e0>
    2508:	fe 01       	movw	r30, r28
    250a:	ed 0d       	add	r30, r13
    250c:	f1 1d       	adc	r31, r1
    250e:	80 81       	ld	r24, Z
    2510:	80 33       	cpi	r24, 0x30	; 48
    2512:	19 f4       	brne	.+6      	; 0x251a <vfprintf+0x2d8>
    2514:	99 ee       	ldi	r25, 0xE9	; 233
    2516:	f9 22       	and	r15, r25
    2518:	08 c0       	rjmp	.+16     	; 0x252a <vfprintf+0x2e8>
    251a:	1f 5f       	subi	r17, 0xFF	; 255
    251c:	f2 fe       	sbrs	r15, 2
    251e:	05 c0       	rjmp	.+10     	; 0x252a <vfprintf+0x2e8>
    2520:	03 c0       	rjmp	.+6      	; 0x2528 <vfprintf+0x2e6>
    2522:	8f 2d       	mov	r24, r15
    2524:	86 78       	andi	r24, 0x86	; 134
    2526:	09 f0       	breq	.+2      	; 0x252a <vfprintf+0x2e8>
    2528:	1f 5f       	subi	r17, 0xFF	; 255
    252a:	0f 2d       	mov	r16, r15
    252c:	f3 fc       	sbrc	r15, 3
    252e:	13 c0       	rjmp	.+38     	; 0x2556 <vfprintf+0x314>
    2530:	f0 fe       	sbrs	r15, 0
    2532:	0e c0       	rjmp	.+28     	; 0x2550 <vfprintf+0x30e>
    2534:	1e 15       	cp	r17, r14
    2536:	10 f0       	brcs	.+4      	; 0x253c <vfprintf+0x2fa>
    2538:	9d 2c       	mov	r9, r13
    253a:	0a c0       	rjmp	.+20     	; 0x2550 <vfprintf+0x30e>
    253c:	9d 2c       	mov	r9, r13
    253e:	9e 0c       	add	r9, r14
    2540:	91 1a       	sub	r9, r17
    2542:	1e 2d       	mov	r17, r14
    2544:	05 c0       	rjmp	.+10     	; 0x2550 <vfprintf+0x30e>
    2546:	80 e2       	ldi	r24, 0x20	; 32
    2548:	90 e0       	ldi	r25, 0x00	; 0
    254a:	b3 01       	movw	r22, r6
    254c:	5e d0       	rcall	.+188    	; 0x260a <fputc>
    254e:	1f 5f       	subi	r17, 0xFF	; 255
    2550:	1e 15       	cp	r17, r14
    2552:	c8 f3       	brcs	.-14     	; 0x2546 <vfprintf+0x304>
    2554:	04 c0       	rjmp	.+8      	; 0x255e <vfprintf+0x31c>
    2556:	1e 15       	cp	r17, r14
    2558:	10 f4       	brcc	.+4      	; 0x255e <vfprintf+0x31c>
    255a:	e1 1a       	sub	r14, r17
    255c:	01 c0       	rjmp	.+2      	; 0x2560 <vfprintf+0x31e>
    255e:	ee 24       	eor	r14, r14
    2560:	04 ff       	sbrs	r16, 4
    2562:	0e c0       	rjmp	.+28     	; 0x2580 <vfprintf+0x33e>
    2564:	80 e3       	ldi	r24, 0x30	; 48
    2566:	90 e0       	ldi	r25, 0x00	; 0
    2568:	b3 01       	movw	r22, r6
    256a:	4f d0       	rcall	.+158    	; 0x260a <fputc>
    256c:	02 ff       	sbrs	r16, 2
    256e:	1b c0       	rjmp	.+54     	; 0x25a6 <vfprintf+0x364>
    2570:	01 fd       	sbrc	r16, 1
    2572:	03 c0       	rjmp	.+6      	; 0x257a <vfprintf+0x338>
    2574:	88 e7       	ldi	r24, 0x78	; 120
    2576:	90 e0       	ldi	r25, 0x00	; 0
    2578:	0e c0       	rjmp	.+28     	; 0x2596 <vfprintf+0x354>
    257a:	88 e5       	ldi	r24, 0x58	; 88
    257c:	90 e0       	ldi	r25, 0x00	; 0
    257e:	0b c0       	rjmp	.+22     	; 0x2596 <vfprintf+0x354>
    2580:	80 2f       	mov	r24, r16
    2582:	86 78       	andi	r24, 0x86	; 134
    2584:	81 f0       	breq	.+32     	; 0x25a6 <vfprintf+0x364>
    2586:	01 ff       	sbrs	r16, 1
    2588:	02 c0       	rjmp	.+4      	; 0x258e <vfprintf+0x34c>
    258a:	8b e2       	ldi	r24, 0x2B	; 43
    258c:	01 c0       	rjmp	.+2      	; 0x2590 <vfprintf+0x34e>
    258e:	80 e2       	ldi	r24, 0x20	; 32
    2590:	f7 fc       	sbrc	r15, 7
    2592:	8d e2       	ldi	r24, 0x2D	; 45
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	b3 01       	movw	r22, r6
    2598:	38 d0       	rcall	.+112    	; 0x260a <fputc>
    259a:	05 c0       	rjmp	.+10     	; 0x25a6 <vfprintf+0x364>
    259c:	80 e3       	ldi	r24, 0x30	; 48
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	b3 01       	movw	r22, r6
    25a2:	33 d0       	rcall	.+102    	; 0x260a <fputc>
    25a4:	9a 94       	dec	r9
    25a6:	d9 14       	cp	r13, r9
    25a8:	c8 f3       	brcs	.-14     	; 0x259c <vfprintf+0x35a>
    25aa:	da 94       	dec	r13
    25ac:	f1 01       	movw	r30, r2
    25ae:	ed 0d       	add	r30, r13
    25b0:	f1 1d       	adc	r31, r1
    25b2:	80 81       	ld	r24, Z
    25b4:	90 e0       	ldi	r25, 0x00	; 0
    25b6:	b3 01       	movw	r22, r6
    25b8:	28 d0       	rcall	.+80     	; 0x260a <fputc>
    25ba:	dd 20       	and	r13, r13
    25bc:	b1 f7       	brne	.-20     	; 0x25aa <vfprintf+0x368>
    25be:	05 c0       	rjmp	.+10     	; 0x25ca <vfprintf+0x388>
    25c0:	80 e2       	ldi	r24, 0x20	; 32
    25c2:	90 e0       	ldi	r25, 0x00	; 0
    25c4:	b3 01       	movw	r22, r6
    25c6:	21 d0       	rcall	.+66     	; 0x260a <fputc>
    25c8:	ea 94       	dec	r14
    25ca:	ee 20       	and	r14, r14
    25cc:	c9 f7       	brne	.-14     	; 0x25c0 <vfprintf+0x37e>
    25ce:	50 ce       	rjmp	.-864    	; 0x2270 <vfprintf+0x2e>
    25d0:	f3 01       	movw	r30, r6
    25d2:	66 81       	ldd	r22, Z+6	; 0x06
    25d4:	77 81       	ldd	r23, Z+7	; 0x07
    25d6:	cb 01       	movw	r24, r22
    25d8:	2b 96       	adiw	r28, 0x0b	; 11
    25da:	e2 e1       	ldi	r30, 0x12	; 18
    25dc:	ba cd       	rjmp	.-1164   	; 0x2152 <__epilogue_restores__>

000025de <strnlen_P>:
    25de:	fc 01       	movw	r30, r24
    25e0:	05 90       	lpm	r0, Z+
    25e2:	61 50       	subi	r22, 0x01	; 1
    25e4:	70 40       	sbci	r23, 0x00	; 0
    25e6:	01 10       	cpse	r0, r1
    25e8:	d8 f7       	brcc	.-10     	; 0x25e0 <strnlen_P+0x2>
    25ea:	80 95       	com	r24
    25ec:	90 95       	com	r25
    25ee:	8e 0f       	add	r24, r30
    25f0:	9f 1f       	adc	r25, r31
    25f2:	08 95       	ret

000025f4 <strnlen>:
    25f4:	fc 01       	movw	r30, r24
    25f6:	61 50       	subi	r22, 0x01	; 1
    25f8:	70 40       	sbci	r23, 0x00	; 0
    25fa:	01 90       	ld	r0, Z+
    25fc:	01 10       	cpse	r0, r1
    25fe:	d8 f7       	brcc	.-10     	; 0x25f6 <strnlen+0x2>
    2600:	80 95       	com	r24
    2602:	90 95       	com	r25
    2604:	8e 0f       	add	r24, r30
    2606:	9f 1f       	adc	r25, r31
    2608:	08 95       	ret

0000260a <fputc>:
    260a:	0f 93       	push	r16
    260c:	1f 93       	push	r17
    260e:	cf 93       	push	r28
    2610:	df 93       	push	r29
    2612:	8c 01       	movw	r16, r24
    2614:	eb 01       	movw	r28, r22
    2616:	8b 81       	ldd	r24, Y+3	; 0x03
    2618:	81 ff       	sbrs	r24, 1
    261a:	1b c0       	rjmp	.+54     	; 0x2652 <fputc+0x48>
    261c:	82 ff       	sbrs	r24, 2
    261e:	0d c0       	rjmp	.+26     	; 0x263a <fputc+0x30>
    2620:	2e 81       	ldd	r18, Y+6	; 0x06
    2622:	3f 81       	ldd	r19, Y+7	; 0x07
    2624:	8c 81       	ldd	r24, Y+4	; 0x04
    2626:	9d 81       	ldd	r25, Y+5	; 0x05
    2628:	28 17       	cp	r18, r24
    262a:	39 07       	cpc	r19, r25
    262c:	64 f4       	brge	.+24     	; 0x2646 <fputc+0x3c>
    262e:	e8 81       	ld	r30, Y
    2630:	f9 81       	ldd	r31, Y+1	; 0x01
    2632:	01 93       	st	Z+, r16
    2634:	f9 83       	std	Y+1, r31	; 0x01
    2636:	e8 83       	st	Y, r30
    2638:	06 c0       	rjmp	.+12     	; 0x2646 <fputc+0x3c>
    263a:	e8 85       	ldd	r30, Y+8	; 0x08
    263c:	f9 85       	ldd	r31, Y+9	; 0x09
    263e:	80 2f       	mov	r24, r16
    2640:	09 95       	icall
    2642:	89 2b       	or	r24, r25
    2644:	31 f4       	brne	.+12     	; 0x2652 <fputc+0x48>
    2646:	8e 81       	ldd	r24, Y+6	; 0x06
    2648:	9f 81       	ldd	r25, Y+7	; 0x07
    264a:	01 96       	adiw	r24, 0x01	; 1
    264c:	9f 83       	std	Y+7, r25	; 0x07
    264e:	8e 83       	std	Y+6, r24	; 0x06
    2650:	02 c0       	rjmp	.+4      	; 0x2656 <fputc+0x4c>
    2652:	0f ef       	ldi	r16, 0xFF	; 255
    2654:	1f ef       	ldi	r17, 0xFF	; 255
    2656:	c8 01       	movw	r24, r16
    2658:	df 91       	pop	r29
    265a:	cf 91       	pop	r28
    265c:	1f 91       	pop	r17
    265e:	0f 91       	pop	r16
    2660:	08 95       	ret

00002662 <__ultoa_invert>:
    2662:	fa 01       	movw	r30, r20
    2664:	aa 27       	eor	r26, r26
    2666:	28 30       	cpi	r18, 0x08	; 8
    2668:	51 f1       	breq	.+84     	; 0x26be <__ultoa_invert+0x5c>
    266a:	20 31       	cpi	r18, 0x10	; 16
    266c:	81 f1       	breq	.+96     	; 0x26ce <__ultoa_invert+0x6c>
    266e:	e8 94       	clt
    2670:	6f 93       	push	r22
    2672:	6e 7f       	andi	r22, 0xFE	; 254
    2674:	6e 5f       	subi	r22, 0xFE	; 254
    2676:	7f 4f       	sbci	r23, 0xFF	; 255
    2678:	8f 4f       	sbci	r24, 0xFF	; 255
    267a:	9f 4f       	sbci	r25, 0xFF	; 255
    267c:	af 4f       	sbci	r26, 0xFF	; 255
    267e:	b1 e0       	ldi	r27, 0x01	; 1
    2680:	3e d0       	rcall	.+124    	; 0x26fe <__ultoa_invert+0x9c>
    2682:	b4 e0       	ldi	r27, 0x04	; 4
    2684:	3c d0       	rcall	.+120    	; 0x26fe <__ultoa_invert+0x9c>
    2686:	67 0f       	add	r22, r23
    2688:	78 1f       	adc	r23, r24
    268a:	89 1f       	adc	r24, r25
    268c:	9a 1f       	adc	r25, r26
    268e:	a1 1d       	adc	r26, r1
    2690:	68 0f       	add	r22, r24
    2692:	79 1f       	adc	r23, r25
    2694:	8a 1f       	adc	r24, r26
    2696:	91 1d       	adc	r25, r1
    2698:	a1 1d       	adc	r26, r1
    269a:	6a 0f       	add	r22, r26
    269c:	71 1d       	adc	r23, r1
    269e:	81 1d       	adc	r24, r1
    26a0:	91 1d       	adc	r25, r1
    26a2:	a1 1d       	adc	r26, r1
    26a4:	20 d0       	rcall	.+64     	; 0x26e6 <__ultoa_invert+0x84>
    26a6:	09 f4       	brne	.+2      	; 0x26aa <__ultoa_invert+0x48>
    26a8:	68 94       	set
    26aa:	3f 91       	pop	r19
    26ac:	2a e0       	ldi	r18, 0x0A	; 10
    26ae:	26 9f       	mul	r18, r22
    26b0:	11 24       	eor	r1, r1
    26b2:	30 19       	sub	r19, r0
    26b4:	30 5d       	subi	r19, 0xD0	; 208
    26b6:	31 93       	st	Z+, r19
    26b8:	de f6       	brtc	.-74     	; 0x2670 <__ultoa_invert+0xe>
    26ba:	cf 01       	movw	r24, r30
    26bc:	08 95       	ret
    26be:	46 2f       	mov	r20, r22
    26c0:	47 70       	andi	r20, 0x07	; 7
    26c2:	40 5d       	subi	r20, 0xD0	; 208
    26c4:	41 93       	st	Z+, r20
    26c6:	b3 e0       	ldi	r27, 0x03	; 3
    26c8:	0f d0       	rcall	.+30     	; 0x26e8 <__ultoa_invert+0x86>
    26ca:	c9 f7       	brne	.-14     	; 0x26be <__ultoa_invert+0x5c>
    26cc:	f6 cf       	rjmp	.-20     	; 0x26ba <__ultoa_invert+0x58>
    26ce:	46 2f       	mov	r20, r22
    26d0:	4f 70       	andi	r20, 0x0F	; 15
    26d2:	40 5d       	subi	r20, 0xD0	; 208
    26d4:	4a 33       	cpi	r20, 0x3A	; 58
    26d6:	18 f0       	brcs	.+6      	; 0x26de <__ultoa_invert+0x7c>
    26d8:	49 5d       	subi	r20, 0xD9	; 217
    26da:	31 fd       	sbrc	r19, 1
    26dc:	40 52       	subi	r20, 0x20	; 32
    26de:	41 93       	st	Z+, r20
    26e0:	02 d0       	rcall	.+4      	; 0x26e6 <__ultoa_invert+0x84>
    26e2:	a9 f7       	brne	.-22     	; 0x26ce <__ultoa_invert+0x6c>
    26e4:	ea cf       	rjmp	.-44     	; 0x26ba <__ultoa_invert+0x58>
    26e6:	b4 e0       	ldi	r27, 0x04	; 4
    26e8:	a6 95       	lsr	r26
    26ea:	97 95       	ror	r25
    26ec:	87 95       	ror	r24
    26ee:	77 95       	ror	r23
    26f0:	67 95       	ror	r22
    26f2:	ba 95       	dec	r27
    26f4:	c9 f7       	brne	.-14     	; 0x26e8 <__ultoa_invert+0x86>
    26f6:	00 97       	sbiw	r24, 0x00	; 0
    26f8:	61 05       	cpc	r22, r1
    26fa:	71 05       	cpc	r23, r1
    26fc:	08 95       	ret
    26fe:	9b 01       	movw	r18, r22
    2700:	ac 01       	movw	r20, r24
    2702:	0a 2e       	mov	r0, r26
    2704:	06 94       	lsr	r0
    2706:	57 95       	ror	r21
    2708:	47 95       	ror	r20
    270a:	37 95       	ror	r19
    270c:	27 95       	ror	r18
    270e:	ba 95       	dec	r27
    2710:	c9 f7       	brne	.-14     	; 0x2704 <__ultoa_invert+0xa2>
    2712:	62 0f       	add	r22, r18
    2714:	73 1f       	adc	r23, r19
    2716:	84 1f       	adc	r24, r20
    2718:	95 1f       	adc	r25, r21
    271a:	a0 1d       	adc	r26, r0
    271c:	08 95       	ret

0000271e <_exit>:
    271e:	f8 94       	cli

00002720 <__stop_program>:
    2720:	ff cf       	rjmp	.-2      	; 0x2720 <__stop_program>
